function replaceUrlParam(a, b, c) {
    var d = new RegExp("(" + b + "=).*?(&|$)"),
        e = a;
    return a.search(d) >= 0 ? a.replace(d, "$1" + c + "$2") : e + (e.indexOf("?") > 0 ? "&" : "?") + b + "=" + c;
}
function hasTouch() {
    return "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
}
if (
    ((window.vela = window.vela || {}),
    "undefined" == typeof Shopify && (Shopify = {}),
    Shopify.formatMoney ||
        (Shopify.formatMoney = function (a, f) {
            var b = "",
                d = /\{\{\s*(\w+)\s*\}\}/,
                e = f || this.money_format;
            function g(a, b) {
                return void 0 === a ? b : a;
            }
            function c(a, b, c, d) {
                if (((b = g(b, 2)), (c = g(c, ",")), (d = g(d, ".")), isNaN(a) || null == a)) return 0;
                var e = (a = (a / 100).toFixed(b)).split("."),
                    f = e[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + c),
                    h = e[1] ? d + e[1] : "";
                return f + h;
            }
            switch (("string" == typeof a && (a = a.replace(".", "")), e.match(d)[1])) {
                case "amount":
                    b = c(a, 2);
                    break;
                case "amount_no_decimals":
                    b = c(a, 0);
                    break;
                case "amount_with_comma_separator":
                    b = c(a, 2, ".", ",");
                    break;
                case "amount_no_decimals_with_comma_separator":
                    b = c(a, 0, ".", ",");
            }
            return e.replace(d, b);
        }),
    (Shopify.optionsMap = {}),
    (Shopify.updateOptionsInSelector = function (e) {
        switch (e) {
            case 0:
                var b = "root",
                    a = jQuery(".single-option-selector:eq(0)");
                break;
            case 1:
                var b = jQuery(".single-option-selector:eq(0)").val(),
                    a = jQuery(".single-option-selector:eq(1)");
                break;
            case 2:
                var b = jQuery(".single-option-selector:eq(0)").val();
                b += " / " + jQuery(".single-option-selector:eq(1)").val();
                var a = jQuery(".single-option-selector:eq(2)");
        }
        var f = a.val();
        a.empty();
        for (var c = Shopify.optionsMap[b], d = 0; d < c.length; d++) {
            var g = c[d],
                h = jQuery("<option></option>").val(g).html(g);
            a.append(h);
        }
        jQuery('.swatch[data-option-index="' + e + '"] .swatch-element').each(function () {
            -1 !== jQuery.inArray($(this).attr("data-value"), c)
                ? $(this).removeClass("soldout").show().find(":radio").removeAttr("disabled", "disabled").removeAttr("checked")
                : !0 == window.swatch_show_unvailable
                ? $(this).addClass("soldout").find(":radio").removeAttr("checked").attr("disabled", "disabled")
                : $(this).addClass("soldout").hide().find(":radio").removeAttr("checked").attr("disabled", "disabled");
        }),
            -1 !== jQuery.inArray(f, c) && a.val(f),
            a.trigger("change");
    }),
    (Shopify.linkOptionSelectors = function (c) {
        for (var d = 0; d < c.variants.length; d++) {
            var b = c.variants[d];
            if (b.available) {
                if (((Shopify.optionsMap.root = Shopify.optionsMap.root || []), Shopify.optionsMap.root.push(b.option1), (Shopify.optionsMap.root = Shopify.uniq(Shopify.optionsMap.root)), c.options.length > 1)) {
                    var a = b.option1;
                    (Shopify.optionsMap[a] = Shopify.optionsMap[a] || []), Shopify.optionsMap[a].push(b.option2), (Shopify.optionsMap[a] = Shopify.uniq(Shopify.optionsMap[a]));
                }
                if (3 === c.options.length) {
                    var a = b.option1 + " / " + b.option2;
                    (Shopify.optionsMap[a] = Shopify.optionsMap[a] || []), Shopify.optionsMap[a].push(b.option3), (Shopify.optionsMap[a] = Shopify.uniq(Shopify.optionsMap[a]));
                }
            }
        }
        Shopify.updateOptionsInSelector(0),
            c.options.length > 1 && Shopify.updateOptionsInSelector(1),
            3 === c.options.length && Shopify.updateOptionsInSelector(2),
            jQuery(".single-option-selector:eq(0)").change(function () {
                return console.log("dsf"), Shopify.updateOptionsInSelector(1), console.log(c), 3 === c.options.length && Shopify.updateOptionsInSelector(2), !0;
            }),
            jQuery(".single-option-selector:eq(1)").change(function () {
                return (
                    console.log(c),
                    setTimeout(function () {
                        var b = "",
                            e = $("#productSelect").find("option:selected").val(),
                            a = 0;
                        $(c.variants).each(function (c, a) {
                            if (e == a.id) return (b = a.option2), !1;
                        }),
                            $(c.media).each(function (c, d) {
                                if (d.alt == b) return (a = c), !1;
                            }),
                            console.log(a);
                        var d = jQuery(".velaProductGallerySlider .slide img"),
                            f = $("#productSelect").find("option:selected")[0].innerHTML.split(" / ")[0].replace(" ", "");
                        d.map(function (b, a) {
                            a.getAttribute("data-imgSrc").indexOf(f) >= 0 && a.getAttribute("data-imgSrc").indexOf("prod_lf") >= 0 && jQuery('.pdpImagePanel[data-slidefor="small"] .slideOne img').attr("src", a.getAttribute("data-imgSrc")),
                                a.getAttribute("data-imgSrc").indexOf(f) >= 0 &&
                                    a.getAttribute("data-imgSrc").indexOf("model_sd") >= 0 &&
                                    jQuery('.pdpImagePanel[data-slidefor="small"] .slideTwo img').attr("src", a.getAttribute("data-imgSrc"));
                        }),
                            $(".tpo_slider").trigger("to.owl.carousel", a),
                            console.log(b);
                    }),
                    3 === c.options.length && Shopify.updateOptionsInSelector(2),
                    !0
                );
            });
    }),
    (vela.preLoading = function () {
        var b = 0,
            a = $("#velaPreLoading"),
            c = $("#velaPreLoading > span"),
            d = new Array();
        function e(a) {
            $(new Image())
                .on("load", function () {
                    f();
                })
                .on("error", function () {
                    f();
                })
                .attr("src", a);
        }
        function f() {
            var e = Math.round((++b / d.length) * 100);
            $(c)
                .stop()
                .animate({ width: e + "%" }, 500, "linear"),
                b >= d.length &&
                    ((b = d.length),
                    $(c)
                        .stop()
                        .animate({ width: "100%" }, 500, "linear", function () {
                            $(a).fadeOut(200, function () {
                                $(a).remove();
                            });
                        }));
        }
        a.css({ position: "fixed", top: 0, left: 0, zIndex: 99999, width: "100%", height: "100%", backgroundColor: "rgba(255, 255, 255, 1)" }),
            $("body").removeClass("bodyPreLoading"),
            (function (a) {
                $(a)
                    .find("*:not(script)")
                    .each(function () {
                        var a = "";
                        -1 == $(this).css("background-image").indexOf("none") && -1 == $(this).css("background-image").indexOf("-gradient")
                            ? -1 != (a = $(this).css("background-image")).indexOf("url") && (a = a.match(/url\((.*?)\)/)[1].replace(/\"/g, ""))
                            : "img" == $(this).get(0).nodeName.toLowerCase() && void 0 !== $(this).attr("src") && (a = $(this).attr("src")),
                            a.length > 0 && d.push(a);
                    });
            })($("body")),
            (function () {
                for (var a = 0; a < d.length; a++) e(d[a]);
            })(),
            jQuery("body").hasClass("template-") && a.fadeOut();
    }),
    (vela.startTheme = function () {
        $(".swatch :radio").change(function () {
            var a = $(this).closest(".swatch").attr("data-option-index"),
                b = $(this).val();
            $(this).closest("form").find(".single-option-selector").eq(a).val(b).trigger("change");
        }),
            $(".headerCartModal .overlayCart, .headerCartModal .closeCartModal").on("click", function () {
                $(".headerCartModal").removeClass("active");
            }),
            $("body").on("click", ".velaCartModal", function () {
                $(this).parent().toggleClass("active");
            }),
            $("body").click(function (a) {
                0 === $(a.target).parents(".velaCartTop").length && $(".velaCartTop").removeClass("active");
            }),
            jQuery().tooltip && $('[data-toggle="tooltip"]').tooltip(),
            $(".googleOverPlay").on("click", function () {
                $(this).fadeOut();
            }),
            $(".velaGoogleMap").on("mouseleave", function () {
                $(this).find(".googleOverPlay").fadeIn();
            }),
            $("body").on("click", "#internationalToggleBtn", function () {
                console.log("trigger international popup"), $(".bfx-cc-collapsed").trigger("click");
            }),
            $("body").on("click", ".goBtn", function (a) {
                console.log("trigger goClick ev"),
                    window.ga("send", "event", { eventCategory: a.target.getAttribute("data-gobtntype"), eventLabel: a.target.getAttribute("data-gobtnlabel"), eventAction: a.target.getAttribute("data-gobtnaction"), eventValue: "" });
            });
    }),
    (vela.drawersInit = function () {
        // fc 011923
         async function checkForAjaxCart() {
            var waitAjax = await new Promise(resolve => {
                if (typeof ajaxCart === "object") {
                    resolve(ajaxCart)

                    const a = window.ajaxCart.load 
                    vela.RightDrawer = new vela.Drawers("cartDrawer", "Right", !0, { onDrawerOpen: function() {
                        jQuery('body').css('overflowY', 'hidden');
                        a.call();
                        }
                    });

                    //console.log('👻 ajaxCart Loaded 😀') 
                } else {
                    setTimeout(() => resolve(checkForAjaxCart), 1000);
                    //console.warn('👻 ajaxCart loading... 👻');
                }
            });
            if(typeof waitAjax === "function") waitAjax();
        }
        checkForAjaxCart();
    }),
    (vela.swatchProduct = function () {
        $("body").on("mouseover", ".velaSwatchProduct > li", function () {
            var a = $(this).find(".hidden a").attr("href");
            return "#" != a && $(this).parents(".velaProBlock").find(".proFeaturedImage > img").attr({ src: a }).css({ position: "relative", "z-index": "2" }), !1;
        }),
            $("body").on("mouseout", ".velaProBlock", function () {
                $(this).find(".proFeaturedImage > img").removeAttr("style");
            });
    }),
    (vela.productThumbImage = function () {
        $("#productThumbs").length > 0 &&
            $("#productThumbs .owl-carousel").each(function () {
                var b = $(this),
                    a = b.data("item");
                (void 0 === a || null == a) && (a = 5), b.owlCarousel({ items: a, dots: !1, mouseDrag: !1, nav: !0, responsive: { 0: { items: a }, 480: { items: a }, 768: { items: a }, 992: { items: a }, 1200: { items: a } } });
            });
    }),
    hasTouch())
)
    try {
        for (var c in document.styleSheets) {
            var a = document.styleSheets[c];
            if (a.rules) for (var b = a.rules.length - 1; b >= 0; b--) a.rules[b].selectorText && a.rules[b].selectorText.match(":hover") && a.deleteRule(b);
        }
    } catch (d) {}
(vela.ajaxSearch = function () {
    var a = null;
    $('form[action="/search"]').each(function () {
        var b = $(this).find('input[name="q"]'),
            c = $(this).find('input[name="type"]');
        b.position().top,
            b.innerHeight(),
            $('<ul class="velaAjaxSearch"></ul>').appendTo($(this)).hide(),
            "product" == c.val() &&
                b.attr("autocomplete", "off").bind("keyup change", function () {
                    var b = $(this).val(),
                        c = $(this).closest("form"),
                        d = "/search?type=product&q=" + b,
                        e = c.find(".velaAjaxSearch");
                    b.length > 1 &&
                        b != $(this).attr("data-old-term") &&
                        ($(this).attr("data-old-term", b),
                        null != a && a.abort(),
                        (a = $.getJSON(d + "&view=json", function (a) {
                            e.empty(),
                                0 == a.results_count
                                    ? e.hide()
                                    : ($.each(a.results, function (c, b) {
                                          var a = $("<a></a>").attr("href", b.url);
                                          a.append('<span class="searchProductImage"><img src="' + b.thumbnail + '" /></span>'), a.append('<span class="searchProductTitle">' + b.title + "</span>"), a.wrap("<li></li>"), e.append(a.parent());
                                      }),
                                      a.results_count > 10 && e.append('<li><a class="searchViewAll" href="' + d + '">See all results (' + a.results_count + ")</a></li>"),
                                      e.fadeIn(200));
                        })));
                });
    }),
        $("body").bind("click", function () {
            $(".velaAjaxSearch").hide();
        }),
        $(".searchBoxTop").hover(function () {
            $(".velaSearchbox .velaSearch").focus();
        }),
        vela.cache.$body.on("click", ".velaSearchIcon", function () {
            $(".searchBoxTop").toggleClass("active"), $(".searchClose").toggleClass("active"), $(".searchOverLayer").toggleClass("active");
        }),
        vela.cache.$body.on("click", ".searchClose, .searchOverLayer", function () {
            $(this).hasClass("active") && ($(".searchBoxTop").removeClass("active"), $(".searchClose").removeClass("active"), $(".searchOverLayer").removeClass("active"));
        });
}),
    (vela.ajaxFilter = function () {
        var a = $(".filterTagFullwidthButton"),
            b = $(".filterTagFullwidthContent");
        vela.cache.$body.on("click", ".filterTagFullwidthButton", function () {
            b.hasClass("active")
                ? (a.removeClass("active"),
                  b.removeClass("active"),
                  $(".filterTagFullwidthOverlay").each(function () {
                      $(this).remove();
                  }))
                : ($('<div class="filterTagFullwidthOverlay"></div>').css("display", "none").insertAfter(b), $(".filterTagFullwidthOverlay").fadeIn(300), a.addClass("active"), b.addClass("active"));
        }),
            vela.cache.$body.on("click", ".filterTagFullwidthOverlay, .filterTagFullwidthClose", function () {
                $(".filterTagFullwidthOverlay").each(function () {
                    $(this).remove();
                }),
                    a.removeClass("active"),
                    b.removeClass("active");
            });
        var c = !1;
        $(".template-collection") &&
            History.Adapter.bind(window, "statechange", function () {
                History.getState(), c || (ajaxFilterParams(), ajaxFilterGetContent(ajaxFilterCreateUrl()), reActivateSidebar()), (vela.isSidebarAjaxClick = !1);
            }),
            (ajaxFilterParams = function () {
                if (((Shopify.queryParams = {}), location.search.length))
                    for (var a, b = 0, c = location.search.substr(1).split("&"); b < c.length; b++) (a = c[b].split("=")).length > 1 && (Shopify.queryParams[decodeURIComponent(a[0])] = decodeURIComponent(a[1]));
            }),
            (ajaxFilterCreateUrl = function (a) {
                var b = $.param(Shopify.queryParams).replace(/%2B/g, "+");
                return a ? ("" != b ? a + "?" + b : a) : location.pathname + "?" + b;
            }),
            (ajaxFilterClick = function (b) {
                delete Shopify.queryParams.page;
                var a = ajaxFilterCreateUrl(b);
                (c = !0), History.pushState({ param: Shopify.queryParams }, a, a), ajaxFilterGetContent(a);
            }),
            (ajaxFilterSortby = function () {
                if (Shopify.queryParams.sort_by) {
                    var a = Shopify.queryParams.sort_by;
                    $("#SortBy").val(a);
                }
                vela.cache.$body.on("change", "#SortBy", function (a) {
                    (Shopify.queryParams.sort_by = $(this).val()), ajaxFilterClick();
                });
            }),
            (ajaxFilterView = function () {
                vela.cache.$body.on("click", ".changeView", function (a) {
                    a.preventDefault(), $(this).hasClass("changeViewActive") || ((Shopify.queryParams.view = $(this).data("view")), $(".changeView").removeClass("changeViewActive"), $(this).addClass("changeViewActive"), ajaxFilterClick());
                });
            }),
            (ajaxFilterTags = function () {
                vela.cache.$body.on("click", ".ajaxFilter li > a", function (f) {
                    f.preventDefault();
                    var a = [];
                    if ((Shopify.queryParams.constraint && (a = Shopify.queryParams.constraint.split("+")), !window.sidebar_multichoise && !$(this).parent().hasClass("active"))) {
                        var d = $(this).parents(".listFilter").find("li.active");
                        if (d.length > 0) {
                            var e = d.data("filter");
                            if (e) {
                                var b = a.indexOf(e);
                                b >= 0 && a.splice(b, 1);
                            }
                        }
                    }
                    var c = $(this).parent().data("filter");
                    if (c) {
                        var b = a.indexOf(c);
                        b >= 0 ? a.splice(b, 1) : a.push(c);
                    }
                    a.length ? (Shopify.queryParams.constraint = a.join("+")) : delete Shopify.queryParams.constraint, ajaxFilterClick();
                });
            }),
            (ajaxFilterPaging = function () {
                vela.cache.$body.on("click", "#collPagination .pagination a", function (d) {
                    d.preventDefault();
                    var b = $(this)
                        .attr("href")
                        .match(/page=\d+/g);
                    if (b && ((Shopify.queryParams.page = parseInt(b[0].match(/\d+/g))), Shopify.queryParams.page)) {
                        var a = ajaxFilterCreateUrl();
                        (c = !0), History.pushState({ param: Shopify.queryParams }, a, a), ajaxFilterGetContent(a), $("body,html").animate({ scrollTop: 300 }, 600);
                    }
                });
            }),
            (ajaxFilterReview = function () {
                if (window.review && $(".shopify-product-reviews-badge").length > 0) return window.SPR.registerCallbacks(), window.SPR.initRatingHandler(), window.SPR.initDomEls(), window.SPR.loadProducts(), window.SPR.loadBadges();
            }),
            (ajaxFilterClear = function () {
                $(".ajaxFilter").each(function () {
                    var a = $(this);
                    a.find(".listFilter > li.active").length > 0 &&
                        a
                            .find(".velaClear")
                            .show()
                            .click(function (c) {
                                var b = [];
                                Shopify.queryParams.constraint && (b = Shopify.queryParams.constraint.split("+")),
                                    a.find(".listFilter > li.active").each(function () {
                                        var a = $(this).data("filter");
                                        if (a) {
                                            var c = b.indexOf(a);
                                            c >= 0 && b.splice(c, 1);
                                        }
                                    }),
                                    b.length ? (Shopify.queryParams.constraint = b.join("+")) : delete Shopify.queryParams.constraint,
                                    ajaxFilterClick(),
                                    c.preventDefault();
                            });
                });
            }),
            (ajaxFilterClearAll = function () {
                vela.cache.$body.on("click", "a.velaClearAll", function (a) {
                    delete Shopify.queryParams.constraint, delete Shopify.queryParams.q, ajaxFilterClick(), a.preventDefault();
                });
            }),
            (ajaxFilterAddToCart = function () {}),
            (ajaxAccordionMobile = function () {
                $(".velaSidebar").hasClass("accordion") &&
                    $("#sidebarAjaxFilter .titleSidebar").on("click", function (a) {
                        $(this).toggleClass("active").parent().find(".velaContent").stop().slideToggle("medium"), a.preventDefault();
                    });
            }),
            (ajaxFilterData = function (a) {
                var b = $("#proListCollection .proList"),
                    c = $(a).find("#proListCollection .proList");
                b.replaceWith(c), $("#collPagination").length > 0 ? $("#collPagination").replaceWith($(a).find("#collPagination")) : $("#shopify-section-vela-template-collection").append($(a).find("#collPagination"));
                var d = $("#sidebarAjaxFilter"),
                    e = $(a).find("#sidebarAjaxFilter");
                d.replaceWith(e);
            }),
            (ajaxFilterGetContent = function (a) {
                $.ajax({
                    type: "get",
                    url: a,
                    beforeSend: function () {
                        vela.cache.$velaLoading.show();
                    },
                    success: function (a) {
                        var b = $(a).filter("title").text();
                        (document.title = b), ajaxFilterData(a), ajaxFilterSortby(), ajaxFilterReview(), ajaxFilterClear(), ajaxFilterAddToCart(), ajaxAccordionMobile(), vela.cache.$velaLoading.hide();
                    },
                    error: function (a, b) {
                        vela.cache.$velaLoading.hide();
                    },
                });
            }),
            ajaxFilterParams(),
            ajaxFilterSortby(),
            ajaxFilterView(),
            ajaxFilterTags(),
            ajaxFilterPaging(),
            ajaxFilterClear(),
            ajaxFilterClearAll();
    }),
    (vela.updatePdpStockDropdownsData = function (updateObj) {
      console.log(':: update dropdowns stock options ::', updateObj);

      if (!!vela.pdp_es) {
        vela.pdp_es[updateObj.opt] = updateObj.is_in_stock;
      } else {
        vela.pdp_es = {};
        vela.pdp_es[updateObj.opt] = updateObj.is_in_stock;
      }
    }),
    (vela.adjustOptionsStockedInDropdown = function (dropdownName, selectedVal) {

      const BRA_KEY = {
        "32_A" : "xs",
        "34_A" : "sm", // xs OR sm
        "36_A" : "md", // sm OR md
        "38_A" : "lg", // md OR lg
        "40_A" : "xl", // lg OR xl
        "32_B" : "xs",
        "34_B" : "sm", // sm
        "36_B" : "md", // md
        "38_B" : "lg", // lg
        "40_B" : "xl", // xl
        "32_C" : "sm",
        "34_C" : "md", // sm OR md
        "36_C" : "lg", // md OR lg
        "38_C" : "xl", // lg OR xl
        "40_C" : "xl", // xl
        "32_D" : "sm",
        "34_D" : "md", // sm OR md
        "36_D" : "lg", // md OR lg
        "38_D" : "xl", // lg OR xl
        "40_D" : "xl", // xl
        "32_DD" : "sdd",
        "34_DD" : "sdd",
        "36_DD" : "mdd", // mdd
        "38_DD" : "ldd", // ldd
        "40_DD" : "xldd", // xldd
        "32_DDD" : "sdd",
        "34_DDD" : "mdd", // sdd OR mdd
        "36_DDD" : "ldd", // mdd OR ldd
        "38_DDD" : "xldd", // ldd OR xldd
        "40_DDD" : "xldd", // xldd
        "32_E" : "sdd",
        "34_E" : "mdd", // sdd OR mdd
        "36_E" : "ldd", // mdd OR ldd
        "38_E" : "xldd", // ldd OR xldd
        "40_E" : "xldd" // xldd
      };

      console.log(':: adjusting stock options ::', {dropdownName, selectedVal});
      
      // if the dd is for band size, then adjust the cups. and vice versa for cups
      if (dropdownName === "band_size") {
        let cupDropdownElem = M.FormSelect.getInstance(document.querySelector('#cup_size_dd-0'));

        [...cupDropdownElem.dropdownOptions.children].filter(function (selectOpt, i){
          if(i === 0){return false};
          let assumedKey = selectedVal + "_" + selectOpt.innerText;
          if (!!vela.pdp_es[BRA_KEY[assumedKey]]) {
            cupDropdownElem.dropdownOptions.children[i].removeAttribute('class');
            cupDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_enabled');
          } else {
            cupDropdownElem.dropdownOptions.children[i].removeAttribute('class');
            cupDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_disabled');
          }
        });
      }
      if (dropdownName === "cup_size") {
        let bandDropdownElem = M.FormSelect.getInstance(document.querySelector('#band_size_dd-0'));

        [...bandDropdownElem.dropdownOptions.children].filter(function (selectOpt, i){
          if(i === 0){return false};
          let assumedKey = selectOpt.innerText + "_" + selectedVal;
          if (!!vela.pdp_es[BRA_KEY[assumedKey]]) {
            bandDropdownElem.dropdownOptions.children[i].removeAttribute('class');
            bandDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_enabled');
          } else {
            bandDropdownElem.dropdownOptions.children[i].removeAttribute('class');
            bandDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_disabled');
          }
        });
        
      }
      
    });
    (vela.updateDropdownOptsWithStockStatus = function () {

      // if this size is oos, make relevant band andor cup opt disabled

      // if on load, what bands need to be disabled (must)
      // if on change, what cups or bands need to be disabled (not needed)

      // final - all things are disabled at first
      // if core size is in stock, turn on respect band and cups respectively only

      const bandsToEnable = {
        "xs" : "32",
        "sm" : "32,34",
        "md" : "34,36",
        "lg" : "36,38",
        "xl" : "38,40",
        "xsdd" : "32,34",
        "sdd" : "32,34",
        "mdd" : "34,36",
        "ldd" : "36,38",
        "xldd" : "38,40",
      };

      const cupsToEnable = {
        "xs" : "A,B",
        "sm" : "A,B,C,D",
        "md" : "A,B,C,D",
        "lg" : "A,B,C,D",
        "xl" : "A,B,C,D",
        "xsdd" : "DD,DDD,E",
        "sdd" : "DD,DDD,E",
        "mdd" : "DD,DDD,E",
        "ldd" : "DD,DDD,E",
        "xldd" : "DD,DDD,E",
      };
      
      const BRA_KEY = {
        "32_A" : "xs",
        "34_A" : "sm", // xs OR sm
        "36_A" : "md", // sm OR md
        "38_A" : "lg", // md OR lg
        "40_A" : "xl", // lg OR xl
        "32_B" : "xs",
        "34_B" : "sm", // sm
        "36_B" : "md", // md
        "38_B" : "lg", // lg
        "40_B" : "xl", // xl
        "32_C" : "sm",
        "34_C" : "md", // sm OR md
        "36_C" : "lg", // md OR lg
        "38_C" : "xl", // lg OR xl
        "40_C" : "xl", // xl
        "32_D" : "sm",
        "34_D" : "md", // sm OR md
        "36_D" : "lg", // md OR lg
        "38_D" : "xl", // lg OR xl
        "40_D" : "xl", // xl
        "32_DD" : "sdd",
        "34_DD" : "sdd",
        "36_DD" : "mdd", // mdd
        "38_DD" : "ldd", // ldd
        "40_DD" : "xldd", // xldd
        "32_DDD" : "sdd",
        "34_DDD" : "mdd", // sdd OR mdd
        "36_DDD" : "ldd", // mdd OR ldd
        "38_DDD" : "xldd", // ldd OR xldd
        "40_DDD" : "xldd", // xldd
        "32_E" : "sdd",
        "34_E" : "mdd", // sdd OR mdd
        "36_E" : "ldd", // mdd OR ldd
        "38_E" : "xldd", // ldd OR xldd
        "40_E" : "xldd" // xldd
      };

      // only for PDPs, quickadds need more per instance monitoring
      if (window.location.href.indexOf('products/') > 0) {
        let bandDropdownElem = M.FormSelect.getInstance(document.querySelector('#band_size_dd-0'));
        let cupDropdownElem = M.FormSelect.getInstance(document.querySelector('#cup_size_dd-0'));

        Object.keys(vela.pdp_es).map(function (optKey) {
          // if this size is in stock
          if (!!vela.pdp_es[optKey]) {
              // make sure it looks in stock
              console.log(':: make opt look in-stock ::', optKey);
              let bandsToUpdate = bandsToEnable[optKey].split(',');
              let cupsToUpdate = cupsToEnable[optKey].split(',');

              bandsToUpdate.map(function (bandOpt, index) {
                [...bandDropdownElem.dropdownOptions.children].filter(function (selectOpt, i){
                  if(i === 0){return false};
                  if (selectOpt.innerText === bandOpt) {
                    bandDropdownElem.dropdownOptions.children[i].removeAttribute('class');
                    bandDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_enabled');
                  }
                });
              });
              cupsToUpdate.map(function (cupOpt, index) {
                [...cupDropdownElem.dropdownOptions.children].filter(function (selectOpt, i){
                  if(i === 0){return false};
                  if (selectOpt.innerText === cupOpt) {
                    cupDropdownElem.dropdownOptions.children[i].removeAttribute('class');
                    cupDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_enabled');
                  }
                });
              });
          } else {
            // make sure it looks oos, !! must show oos email capture
            console.log(':: make opt look out-of-stock ::', optKey);
            let bandsToUpdate = bandsToEnable[optKey].split(',');
            let cupsToUpdate = cupsToEnable[optKey].split(',');

            bandsToUpdate.map(function (bandOpt, index) {
              [...bandDropdownElem.dropdownOptions.children].filter(function (selectOpt, i){
                if(i === 0){return false};
                if (selectOpt.innerText === bandOpt && bandDropdownElem.dropdownOptions.children[i].getAttribute('class') !== "e_enabled") {
                  bandDropdownElem.dropdownOptions.children[i].removeAttribute('class');
                  bandDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_disabled');
                }
              });
            });
            cupsToUpdate.map(function (cupOpt, index) {
              [...cupDropdownElem.dropdownOptions.children].filter(function (selectOpt, i){
                if(i === 0){return false};
                if (selectOpt.innerText === cupOpt && cupDropdownElem.dropdownOptions.children[i].getAttribute('class') !== "e_enabled") {
                  cupDropdownElem.dropdownOptions.children[i].removeAttribute('class');
                  cupDropdownElem.dropdownOptions.children[i].setAttribute('class', 'e_disabled');
                }
              });
            });
            
          }
        });
        
      }
      
      // get all dropdowns and children
      // loop through these children to disable opt combos that are oos/is
      // by default in the vela.initDropdowns(), all options should start as disabled then right?

      console.log(':: update options for stock purposes ::');
      
    }),
    (vela.pdpTriggerOosEmailCapture = function (toggle) {
      if (!!toggle) {
        jQuery('#AddToCart').addClass('swapped').closest('.button-total-wrpper').css({'display':'none'});
        jQuery('.ebyOutofstockCaptureWrapper.back_in_stock a').addClass('e_enabled');
      } else {
        jQuery('#AddToCart').removeClass('swapped').closest('.button-total-wrpper').css({'display':'block'});
        jQuery('.ebyOutofstockCaptureWrapper.back_in_stock a').removeClass('e_enabled');
      }
    }),
    (vela.initDropdowns = function () {
      /**
      * if bra sizes, expect:
      * @data = band_size::cup_size
      *
      **/
      let opts = {},
          elems = document.querySelectorAll('.ebyForm_select'),
          instances = M.FormSelect.init(elems, opts);

      let addToCartBtn = jQuery('#AddToCart');

      console.log(':: init vela.initDropdowns ::');

      // currently, using sized-up opts
      const BRA_KEY = {
        "32_A" : "xs",
        "34_A" : "sm", // xs OR sm
        "36_A" : "md", // sm OR md
        "38_A" : "lg", // md OR lg
        "40_A" : "xl", // lg OR xl
        "32_B" : "xs",
        "34_B" : "sm", // sm
        "36_B" : "md", // md
        "38_B" : "lg", // lg
        "40_B" : "xl", // xl
        "32_C" : "sm",
        "34_C" : "md", // sm OR md
        "36_C" : "lg", // md OR lg
        "38_C" : "xl", // lg OR xl
        "40_C" : "xl", // xl
        "32_D" : "sm",
        "34_D" : "md", // sm OR md
        "36_D" : "lg", // md OR lg
        "38_D" : "xl", // lg OR xl
        "40_D" : "xl", // xl
        "32_DD" : "sdd",
        "34_DD" : "sdd",
        "36_DD" : "mdd", // mdd
        "38_DD" : "ldd", // ldd
        "40_DD" : "xldd", // xldd
        "32_DDD" : "sdd",
        "34_DDD" : "mdd", // sdd OR mdd
        "36_DDD" : "ldd", // mdd OR ldd
        "38_DDD" : "xldd", // ldd OR xldd
        "40_DDD" : "xldd", // xldd
        "32_E" : "sdd",
        "34_E" : "mdd", // sdd OR mdd
        "36_E" : "ldd", // mdd OR ldd
        "38_E" : "xldd", // ldd OR xldd
        "40_E" : "xldd" // xldd
      };
      // vela.pdp_es = vela.pdp_es || {
      //   "xs" : false,
      //   "sm" : false,
      //   "md" : false,
      //   "lg" : false,
      //   "xl" : false,
      //   "xsdd" : false,
      //   "sdd" : false,
      //   "mdd" : false,
      //   "ldd" : false,
      //   "xldd" : false
      // };

      if (elems.length > 0) {
          jQuery('.ebyForm_select').on('change touchstart', function (ev) {
              //console.log(':: new size opt selected ::', ev.target);
              let rowElemFinalInput = jQuery('#ef_select_input-bra_size-' + ev.target.getAttribute('data-eddkey'));

              // update translated size field
              if (!!rowElemFinalInput && !!ev.target.value) {

                  // stock check the other options
                  vela.adjustOptionsStockedInDropdown(ev.target.getAttribute('data-eddtype'), ev.target.value);
                  // is this a final change
                  // get and set key
                  let currOptToSizeKey = rowElemFinalInput.val();
                  let optKeyForUi = "";
                
                  if (!!currOptToSizeKey) {
                    let sizeOptData = currOptToSizeKey.split('::');

                    if (!!sizeOptData) {
                      
                        switch(ev.target.getAttribute('data-eddtype')) {
                          case "band_size":
                            sizeOptData[0] = ev.target.value;
                            break;
                          case "cup_size":
                            sizeOptData[1] = ev.target.value;
                            break;
                        }
                        rowElemFinalInput.val(sizeOptData.join('::'));

                        optKeyForUi = sizeOptData.join('::');

                        // toDo - prepare add-to-cart button; it should be ready to add now
                      
                    } else {
                      console.log(':: WARNING :: please select remaining options // stock check needed');
                      // stock check needed
                      //vela.updateDropdownOptsWithStockStatus();
                      
                    }
                  } else {
                      console.log(':: WARNING :: no size selected yet // stock check needed');
                      // stock check needed

                      switch(ev.target.getAttribute('data-eddtype')) {
                        case "band_size":
                          currOptToSizeKey = ev.target.value + "::";
                          break;
                        case "cup_size":
                          currOptToSizeKey = "::" + ev.target.value;
                          break;
                      }
                      rowElemFinalInput.val(currOptToSizeKey);
                  }

                  // update visual if complete
                  let perfectCustomerSizeCopy = "";
                  if (!!vela.pdp_es[BRA_KEY[optKeyForUi.replace("::", "_")]] || vela.pdp_es[BRA_KEY[optKeyForUi.replace("::", "_")]] === undefined) {
                      console.log('whats up', optKeyForUi);
                      if (optKeyForUi.split('::')[0].length > 0 && optKeyForUi.split('::')[1].length > 0) {
                        perfectCustomerSizeCopy = BRA_KEY[optKeyForUi.replace("::", "_")] + " (" + optKeyForUi.split('::')[0] + " " + optKeyForUi.split('::')[1] + ")";
                        jQuery('#current_bra_size_selected').text(perfectCustomerSizeCopy);
                      } else {
                        
                        jQuery('#current_bra_size_selected').text(BRA_KEY[optKeyForUi.replace("::", "_")]);
                      }
                      //jQuery('#current_bra_size_selected').text(perfectCustomerSizeCopy);
                      
                      jQuery('.swatch-element input.swatchItem[value="'+BRA_KEY[optKeyForUi.replace("::", "_")]+'"] + label').trigger('click');
                      if (!!addToCartBtn.hasClass('swapped')) {
                          vela.pdpTriggerOosEmailCapture(false);
                      }
                  } else {
                      // current selection is oos
                      //perfectCustomerSizeCopy = BRA_KEY[optKeyForUi.replace("::", "_")] + " (" + optKeyForUi.split('::')[0] + " " + optKeyForUi.split('::')[1] + ")";
                      jQuery('#current_bra_size_selected').text(BRA_KEY[optKeyForUi.replace("::", "_")] + " - out of stock");
                      if (!addToCartBtn.hasClass('swapped')) {
                        vela.pdpTriggerOosEmailCapture(true);
                      }
                  }
                
              } else {
                  console.log(':: ERROR :: no dropdown row elems found');
              }
              
          });
      }
    }),
    (vela.accordion = function () {
        function a() {
            767 >= $(window).width()
                ? $(".velaBlogSidebar").hasClass("accordion") ||
                  ($(".velaBlogSidebar .titleSidebar").on("click", function (a) {
                      $(this).toggleClass("active").parent().find(".velaContent").stop().slideToggle("medium"), a.preventDefault();
                  }),
                  $(".velaBlogSidebar").addClass("accordion").find(".velaContent").slideUp("fast"))
                : ($(".velaBlogSidebar .titleSidebar").removeClass("active").off().parent().find(".velaContent").removeAttr("style").slideDown("fast"), $(".velaBlogSidebar").removeClass("accordion"));
        }
        function b() {
            767 >= $(window).width()
                ? $(".velaFooterMenu").hasClass("accordion") ||
                  ($(".velaFooterMenu .velaFooterTitle").on("click", function (a) {
                      $(this).toggleClass("active").parent().find(".velaContent").stop().slideToggle("medium"), a.preventDefault();
                  }),
                  $(".velaFooterMenu").addClass("accordion").find(".velaContent").slideUp("fast"))
                : ($(".velaFooterMenu .velaFooterTitle").removeClass("active").off().parent().find(".velaContent").removeAttr("style").slideDown("fast"), $(".velaFooterMenu").removeClass("accordion"));
        }
        a(), b(), $(window).resize(a), $(window).resize(b);
    }),
    (vela.floatHeader = function () {
        function b(a) {
            if (a) {
                $("#velaHeader").addClass("headerFixed");
                var b = $("#velaHeader").height() + 120,
                    c = $(window).scrollTop();
                c >= b ? $(".headerMenu").addClass("velaHeaderFixed") : $(".headerMenu").removeClass("velaHeaderFixed");
            } else $("#velaHeader").removeClass("headerFixed"), $(".headerMenu").removeClass("velaHeaderFixed");
        }
        function a() {
            window.float_header && ($(window).width() >= 992 ? b(!0) : 991 >= $(window).width() && b(!1));
        }
        a(),
            $(window).resize(a),
            $(window).scroll(function () {
                if (window.float_header) {
                    if ($(window).width() >= 992) {
                        var a = $("#velaHeader").height() + 120,
                            b = $(window).scrollTop();
                        b >= a ? $(".headerMenu").addClass("velaHeaderFixed") : $(".headerMenu").removeClass("velaHeaderFixed");
                    } else 991 >= $(window).width() && $("#velaMegamenu").removeClass("velaHeaderFixed");
                }
            });
    }),
    (vela.ebyProdTitleFormatter = function (pTitle, request) {
      /***
      * Get only a part of the product title since tags are not available
      * Use as last resort
      * 
      * @params
      * pTitle (str) => the product.title
      * request (str) => what kind of data should be returned; color, style, or fabric
      ***/
      let requestedDataStr = "",
          stringParts = pTitle.split(" "),
          stylesLibrary = ["Thong","Bikini","Cheeky","Brief","High","Highwaisted Thong","Highwaisted","Bralette","Bra","Tank","Dress","Blouse","Bodysuit","Muscle Tee","Crop Top","Business Tee","Shorts","Scarf","Mask","Pants", "Pack", "Mystery Pack"];

      console.log(';attr log per prod;', pTitle);
      switch (request) {
        case "color":
          if (stringParts.indexOf("Silk") >= 0) {
              // this is the silk line
              requestedDataStr = stringParts.splice(0, stringParts.indexOf("Eco")).join(" ");
          } else if (stringParts.indexOf("Cotton") >= 0) {
            // this is the cotton line
            requestedDataStr = stringParts.splice(0, stringParts.indexOf("Cotton")).join(" ");
          } else if (stringParts.indexOf("Mesh") >= 0) {
            // this is the cotton line
            requestedDataStr = stringParts.splice(0, stringParts.indexOf("Mesh")).join(" ");
          } else if (stringParts.indexOf("Only") >= 0) {
            // this is the only bra
            requestedDataStr = stringParts.splice(0, stringParts.indexOf("Only")).join(" ");
          } else {
            // this is the sig seamless line
            
            let tempData = stylesLibrary.reduce(function (acc, style) {
              if (acc.dataInput.indexOf(style) >= 0 && acc.dataOutput == "") {
                if (style == "Thong"  && acc.dataInput.indexOf('Highwaisted') >= 0) {
                  acc.dataOutput = acc.dataInput.splice(0, acc.dataInput.indexOf("Highwaisted")).join(" ");
                } else {
                  acc.dataOutput = acc.dataInput.splice(0, acc.dataInput.indexOf(style)).join(" ");
                }
                return acc;
              }
              return acc;
            },  {dataInput: stringParts, dataOutput: ""});
    
            // if a color is ever returned as ??, it means it wasnt found > addd to stylesLibrary
            requestedDataStr = tempData.dataOutput.length === 0 ? "??" : tempData.dataOutput;
            // if (requestedDataStr.indexOf('High Cut') >= 0) {
            //   requestedDataStr = requestedDataStr.replace(' High Cut', '');
            // }
          }
          if (pTitle.indexOf('Gift Card') >= 0) {
            requestedDataStr = "";
          }
          
        break;
    
        case "fabric":
          if (stringParts.indexOf("Silk") >= 0) {
              // this is the silk line
              requestedDataStr = "Washable Eco Silk";
          } else if (stringParts.indexOf("Cotton") >= 0) {
            // this is the cotton line
            requestedDataStr = "Seamless Cotton";
          } else if (stringParts.indexOf("Mesh") >= 0) {
            // this is the cotton line
            requestedDataStr = "Seamless Sheer";
          } else {
            // this is the sig seamless line
            requestedDataStr = "Seamless";
          }
          if (pTitle.indexOf('Gift Card') >= 0) {
            requestedDataStr = "Digital";
          }
        break;
    
        case "style":
          let tempData = stylesLibrary.reduce(function (acc, style) {
            if (acc.dataInput.indexOf(style) >= 0) {
              acc.dataOutput = style;
              return acc;
            }
            return acc;
          },  {dataInput: stringParts, dataOutput: ""});
    
          // if a style is ever returned as ??, it means it wasnt found > addd to stylesLibrary
          requestedDataStr = tempData.dataOutput.length === 0 ? "??" : tempData.dataOutput;
          if (stringParts.indexOf("Mesh") >= 0 && pTitle.indexOf('Highwaisted') >= 0) {
            requestedDataStr = "High Cut Highwaisted";
          }
          if (pTitle.indexOf('Only') >= 0) {
            requestedDataStr = "Only Bra";
          }
          if (pTitle.indexOf('High Cut') >= 0) {
            requestedDataStr = "High Cut Highwaisted";
          }
          if (pTitle.indexOf('Highwaisted Thong') >= 0) {
            requestedDataStr = "Highwaisted Thong";
          }
          if (pTitle.indexOf('Gift Card') >= 0) {
            requestedDataStr = "Gift Card";
          }
        break;
      }
    
      return requestedDataStr;
    }),
    (vela.menuMobile = function () {
        vela.cache.$body.on("click", "#btnMenuMobile", function (a) {
            a.preventDefault(), $("body").toggleClass("menuMobileActive");
        }),
            vela.cache.$body.on("click", ".btnMenuClose, .menuMobileOverlay", function (a) {
                a.preventDefault(), $("body").removeClass("menuMobileActive");
            });
    }),
    (vela.productCountdown = function () {
        $("[data-countdown]").each(function () {
            var a = $(this),
                b = $(this).data("countdown");
            a.countdown(b, function (b) {
                a.html(b.strftime(window.countdown_format));
            });
        });
    }),
    (vela.owlOneCarousel = function () {
        $(".owlCarouselPlay .owl-carousel").each(function () {
            var a = $(this),
                j = a.data("nav"),
                d = a.data("navText"),
                e = a.data("dots"),
                h = a.data("autoplay"),
                k = a.data("autoplaytimeout"),
                c = a.data("loop"),
                f = a.data("margin"),
                g = a.data("center"),
                i = a.data("columnone"),
                l = a.data("columntwo"),
                m = a.data("columnthree"),
                n = a.data("columnfour"),
                o = a.data("columnfive");
            (void 0 === f || null == f) && (f = 30);
            var b = { margin: f, nav: j, responsive: { 0: { items: o }, 480: { items: n }, 768: { items: m }, 992: { items: l }, 1200: { items: i } } };
            void 0 === e || null == e || e.length <= 0 || !0 != e ? (b.dots = !1) : (b.dots = !0),
                void 0 === d || null == d || d.length <= 0 || (b.navText = d),
                void 0 === c || null == c || c.length <= 0 || (b.loop = c),
                void 0 === g || null == g || c.center <= 0 || (b.center = g),
                h && ((b.autoplay = h), (b.autoplayTimeout = k), (b.autoplayHoverPause = !1)),
                void 0 != i && a.owlCarousel(b);
        });
    }),
    (vela.lookbook = function () {
        vela.cache.$body.on("click", ".lookbItemButton", function () {
            var a = $(this).parents(".velaBoxLookbook"),
                c = a.find(".lookbItem"),
                b = a.find(".lookbItemContent");
            a.hasClass("active")
                ? (a.removeClass("active"), $(".velaBoxLookbookOverlay").remove(), $(".velaBoxLookbookClose").remove())
                : (a.addClass("active"), c.prepend('<div class="velaBoxLookbookOverlay"></div>'), b.prepend('<div class="velaBoxLookbookClose"></div>'), b.fadeIn(500));
        }),
            vela.cache.$body.on("click", ".velaBoxLookbookOverlay, .velaBoxLookbookClose", function () {
                $(".velaBoxLookbook").removeClass("active"), $(".velaBoxLookbookOverlay").remove(), $(".velaBoxLookbookClose").remove(), $(".lookbItemContent").fadeOut(500);
            });
    }),
    (vela.quickview = function () {
        (Shopify.doNotTriggerClickOnThumb = !1),
            (selectCallbackQuickView = function (b, f) {
                var a = jQuery(".jsQuickview .proBoxInfo"),
                    c = a.find(".btnAddToCart"),
                    e = a.find(".proQuantity"),
                    g = a.find(".pricePrimary"),
                    h = a.find(".priceCompare");

                console.log(':: vela.quickview corem, b defined ::', b);
                const bndlId = document.getElementById(`eby-bundle-bras23-${f.product.id}`);
                // fc 11/05/23
              
                if(bndlId instanceof HTMLElement){
  
                    const bundleId23 = bndlId.dataset.bundlepdp;
                    const tempProductId = this.product.id
                    // variant selected by user
                    const variantsSend = bndlSizeObj(bundleId23); 
                 
                    // fc 041123
                    function bndlSizeObj(data){
                        let newVariants = new Map();
                        const tempData = data.split(':');
                        const mainPdpId = bndlId.dataset.mainvr;
          
                        tempData.forEach((el) => {
                            const [size, varId] = el.split('_');
                            newVariants.set(size, varId);
                        });
                        if(mainPdpId.indexOf('::') === -1){
                            disableVariantSoldout(mainPdpId);
                        } else {
                            const twoBralette = mainPdpId.split('::');
                            twoBralette.forEach( pdpId => disableVariantSoldout(pdpId) );
                        }
                    }
                    // disable variant size swatch if soldout 
                    async function disableVariantSoldout(pdpId){
                        const returnStockCheck = await ebyStockCheckApiForUse(pdpId, 'ecomm');
                        returnStockCheck.prodInventoryData.forEach((newVariant) => {
                            // loop and grab the size xs and use it to find the id
                            const title = newVariant.variantValue;
                            if(newVariant.avail_qty_left <= 5){
                                // add solout and remove available if element has it
                                jQuery(".productQuickAdd #product-actions-" + tempProductId + " .swatch-element." + title).addClass("soldout").removeClass('available');
                            }
                        });
                    }
                }

                else if (b) {
                    a.find(".quickViewSKU").html("<label>SKU</label>" + b.sku);
                    let d = this.product.id;
                    var tempProd = this.product;
                    console.log(':: stock checking I, variable d ::', d);
                    jQuery.ajax({
                        url: "https://api.shopify-inventory.jtcinteractive.com/shop/eby-by-sofia-vergara.myshopify.com/multi_variant_locations/" + this.product.variants.reduce((acc,variant)=> {return acc  += "," + variant.id}, "").slice(1),
                        type: "get",
                        success: function (j) {
                            console.log(":: stock inventory return ::", j);
                            //var m = j[d].product.variants;
                            var m = j;
                            if (
                                (Object.keys(m).map(function (b, c) {
                                    console.log("::prodVarId quickview output::", b);
                                    let a = m[b];

                                    if (a.locations[0].stock <= 5) {
                                      console.log("::varData quickview OOS flag for - " + d + " \u2022 " + tempProd.variants[c].title + "::");
                                      jQuery(".productQuickAdd #product-actions-" + d + " .swatch-element." + tempProd.variants[c].title).addClass("soldout").removeClass('available');
                                    } else {
                                      jQuery(".productQuickAdd #product-actions-" + d + " .swatch-element." + tempProd.variants[c].title).addClass("available").removeClass('soldout');
                                    }
                                }),
                                m
                                    ? (c.removeClass("disabled").removeAttr("disabled"),
                                      c.html("Add to Cart"),
                                      e.show(),
                                      a.find(".proBoxInfo .quickviewAvailability").removeClass("outstock").addClass("instock"),
                                      a.find(".proBoxInfo .quickviewAvailability").append("<label>Availability</label>In stock"))
                                    : (c.addClass("disabled").attr("disabled", "disabled"),
                                      c.html("Sold Out"),
                                      e.hide(),
                                      a.find(".proBoxInfo .quickviewAvailability").removeClass("instock").addClass("outstock"),
                                      a.find(".proBoxInfo .quickviewAvailability").append("<label>Availability</label>Unavailable")),
                                g.html(Shopify.formatMoney(b.price, window.money)),
                                b.compare_at_price > b.price ? h.html(Shopify.formatMoney(b.compare_at_price, window.money)).show() : h.hide(),
                                window.swatch_enable)
                            ) {
                                a.find(".selector-wrapper").addClass("hiddenVariant");
                                for (var k = jQuery("#" + f.domIdPrefix).closest("form"), i = 0, n = b.options.length; i < n; i++) {
                                    var l = k.find('.swatch[data-option-index="' + i + '"] :radio[value="' + b.options[i] + '"]');
                                    l.length > 0 && ((l.get(0).checked = !0), k.find('.swatch[data-option-index="' + i + '"] .js-swatch-display').text(b.options[i]));
                                }
                            }
                            if (b && b.featured_image) {
                                var o = $(".proImageQuickview"),
                                    p = b.featured_image,
                                    q = o[0];
                                Shopify.Image.switchImage(p, q, function (a, b, c) {
                                    $(".proThumbnails img").each(function () {
                                        $(this).parent();
                                        var b = $(this).parent().data("image");
                                        if (a.includes(b)) return $(this).parent().trigger("click"), !1;
                                    });
                                });
                            }
                            window.currencies && Currency.convertAll(window.currency, Currency.cookie.read());
                        },
                    }),
                        b.name.indexOf("3-Pack") >= 0
                            ? (jQuery(".formAddToCart.formQuickview").addClass("mysteryPackQuickAddForm"), jQuery(".formAddToCart.formQuickview").attr("data-prdid", d))
                            : (jQuery(".formAddToCart.formQuickview").removeClass("mysteryPackQuickAddForm"), jQuery(".formAddToCart.formQuickview").attr("data-prdid", ""));
                } else c.addClass("disabled").attr("disabled", "disabled"), c.html("Unavailable"), e.hide();
                
            }),
            (changeImageQuickView = function (b, c) {
                var a = $(b).attr("src");
                (a = a.replace("_compact", "")), $(c).attr("src", a);
            }),
            (velaUpdateOptionsInSelector = function (e) {
                switch (e) {
                    case 0:
                        var b = "root",
                            a = $(".jsQuickview .single-option-selector:eq(0)");
                        break;
                    case 1:
                        var b = $(".jsQuickview .single-option-selector:eq(0)").val(),
                            a = $(".jsQuickview .single-option-selector:eq(1)");
                        break;
                    case 2:
                        var b = $(".jsQuickview .single-option-selector:eq(0)").val();
                        b += " / " + $(".jsQuickview .single-option-selector:eq(1)").val();
                        var a = $(".jsQuickview .single-option-selector:eq(2)");
                }
                var f = a.val();
                console.log(':: func velaUpdateOptionsInSelector, not working to stock check actual size swatches, TODO ::', a);
                a.empty();
                var c = Shopify.optionsMapQuickview[b];
                if (void 0 !== c)
                    for (var d = 0; d < c.length; d++) {
                        var g = c[d],
                            h = $("<option></option>").val(g).html(g);
                        a.append(h);
                    }
                $('.jsQuickview .swatch[data-option-index="' + e + '"] .swatch-element').each(function () {
                    -1 !== $.inArray($(this).attr("data-value"), c)
                        ? $(this).removeClass("soldout").show().find(":radio").removeAttr("disabled", "disabled")
                        : !0 == window.swatch_show_unvailable
                        ? $(this).addClass("soldout").find(":radio").removeAttr("checked").attr("disabled", "disabled")
                        : $(this).addClass("soldout").hide().find(":radio").removeAttr("checked").attr("disabled", "disabled");
                }),
                    -1 !== $.inArray(f, c) && a.val(f),
                    a.trigger("change");
            }),
            (velaLinkOptionSelectors = function (c) {
                for (var d = 0; d < c.variants.length; d++) {
                    var b = c.variants[d];
                    if (b.available) {
                        if (
                            ((Shopify.optionsMapQuickview.root = Shopify.optionsMapQuickview.root || []),
                            Shopify.optionsMapQuickview.root.push(b.option1),
                            (Shopify.optionsMapQuickview.root = Shopify.uniq(Shopify.optionsMapQuickview.root)),
                            c.options.length > 1)
                        ) {
                            var a = b.option1;
                            (Shopify.optionsMapQuickview[a] = Shopify.optionsMapQuickview[a] || []), Shopify.optionsMapQuickview[a].push(b.option2), (Shopify.optionsMapQuickview[a] = Shopify.uniq(Shopify.optionsMapQuickview[a]));
                        }
                        if (3 === c.options.length) {
                            var a = b.option1 + " / " + b.option2;
                            (Shopify.optionsMapQuickview[a] = Shopify.optionsMapQuickview[a] || []), Shopify.optionsMapQuickview[a].push(b.option3), (Shopify.optionsMapQuickview[a] = Shopify.uniq(Shopify.optionsMapQuickview[a]));
                        }
                    }
                }
                velaUpdateOptionsInSelector(0),
                    c.options.length > 1 && velaUpdateOptionsInSelector(1),
                    3 === c.options.length && velaUpdateOptionsInSelector(2),
                    $("#productSelectQuickview-option-0").change(function () {
                        return velaUpdateOptionsInSelector(1), 3 === c.options.length && velaUpdateOptionsInSelector(2), !0;
                    }),
                    $("#productSelectQuickview-option-1").change(function () {
                        return 3 === c.options.length && velaUpdateOptionsInSelector(2), !0;
                    });
            }),
            (loadQuickViewSlider = function (a, c) {
                var d = $(".loadingImage");
                if ((Shopify.resizeImage(a.featured_image, "grande"), d.hide(), a.images.length > 0)) {
                    var b = c.find(".proThumbnailsQuickview .owl-carousel");
                    for (i in a.images) {
                        var e = Shopify.resizeImage(a.images[i], "grande"),
                            f = Shopify.resizeImage(a.images[i], "compact"),
                            g = '<div class="thumbItem"><a href="javascript:void(0)" data-imageid="' + a.id + '" data-image="' + a.images[i] + '" data-zoom-image="' + e + '" ><img src="' + f + '" alt="Produc Image" /></a></div>';
                        b.append(g);
                    }
                    b.find("a").click(function () {
                        var a = c.find(".proImageQuickview");
                        a.attr("src") != $(this).attr("data-image") &&
                            (a.attr("src", $(this).attr("data-image")),
                            d.show(),
                            a.load(function (a) {
                                $(this).unbind("load"), d.hide();
                            }));
                    }),
                        b.owlCarousel({ items: 4, nav: !0, mouseDrag: !1, dots: !1 }).css("visibility", "visible");
                } else c.find(".jsQuickview .proThumbnailsQuickview").remove();
            }),
            (convertToSlug = function (a) {
                return a
                    .toLowerCase()
                    .replace(/[^a-z0-9 -]/g, "")
                    .replace(/\s+/g, "-")
                    .replace(/-+/g, "-");
            }),
            (addCheckedSwatch = function () {
                vela.cache.$body.on("click", ".swatch .color label", function () {
                    $(".swatch .color").each(function () {
                        $(this).find("label").removeClass("checkedBox");
                    }),
                        $(this).addClass("checkedBox");
                });
            }),
            (quickViewVariants = function (a, f) {
                console.log(a);
                let k = a,
                    s = k.price.toLocaleString("en-US", { style: "currency", currency: "USD" });
                var n = n || [],
                    g = { Name: k.title, ProductID: k.id, Categories: [], ImageURL: k.media[0].src, URL: window.location.origin + k.url, Brand: "EBY", Price: s, CompareAtPrice: "" };
                if (
                    (n.push(["track", "Viewed Product", g]),
                    n.push(["trackViewedItem", { Title: g.Name, ItemId: g.ProductID, Categories: g.Categories, ImageUrl: g.ImageURL, Url: g.URL, Metadata: { Brand: g.Brand, Price: g.Price, CompareAtPrice: g.CompareAtPrice } }]),
                    a.variants.length > 1)
                ) {
                    for (var b = 0; b < a.variants.length; b++) {
                        var d = a.variants[b],
                            t = '<option value="' + d.id + '">' + d.title + "</option>";
                        f.find("form.formQuickview .proVariantsQuickview > select").append(t);
                    }
                    if (
                        (new Shopify.OptionSelectors("productSelectQuickview-" + a.id, { product: a, onVariantSelected: selectCallbackQuickView }),
                        1 == a.options.length && $("form.formQuickview .selector-wrapper:eq(0)").prepend("<label>" + a.options[0].name + "</label>"),
                        f.find("form.formQuickview .selector-wrapper label").each(function (b, c) {
                            $(this).html(a.options[b].name);
                        }),
                        window.swatch_enable)
                    ) {
                        var u = window.file_url.substring(0, window.file_url.lastIndexOf("?")),
                            v = window.asset_url.substring(0, window.asset_url.lastIndexOf("?")),
                            c = "";
                        if ($(f).data("sizeGuid")) var e = $(f).data("sizeGuid");
                        else if (a.type.indexOf("Underwear") >= 0) var e = "pantyChart";
                        else if (a.type == "Tank") var e = "tankChart";
                        else if (a.type == "Silk Tank") var e = "silktankChart";
                        else if (a.type == "Silk Shorts") var e = "silkshortsChart";
                        else if (a.type == "Silk Blouse") var e = "silkblouseChart";
                        else if (a.type == "Silk Pants") var e = "silkpantsChart";
                        else if (a.type == "Silk Dress") var e = "silkdressChart";
                        else if (a.type == "Long Silk Dress") var e = "silkdressChart";
                        else if ((a.type.indexOf("Bralette") >= 0) || (a.type.indexOf("Bra Pack") >= 0) || (a.type.indexOf("Core Bra") >= 0) ) var e = "braChart"; // fc 051623
                        else if (a.type.indexOf("Bodysuit") >= 0) var e = "bodysuitChart";
                        var p = !1;
                        (!0 == e.includes("pantyChart") || !0 == e.includes("braletteChart") || !0 == e.includes("braChart") || !0 == e.includes("tankChart") || !0 == e.includes("silkdressChart") || !0 == e.includes("silkblouseChart") || !0 == e.includes("silkpantsChart") || !0 == e.includes("silktankChart") || !0 == e.includes("silkshortsChart") || !0 == e.includes("wrapTopChart") || !0 == e.includes("bodysuitChart")) && (p = !0);
                        for (var b = 0; b < a.options.length; b++) {
                            (c += '<div class="swatch clearfix" data-option-index="' + b + '">'),
                                (c += '<div class="header"><span class="js-swatch-display text">&nbsp;</span><span class="swatch-text">&nbsp;</span>'),
                                !0 == p && (c += '<a class="siz_guid size_guid_plp ' + e + '" href="#">Size Guide</a>'),
                                (c += "</div>");
                            var l = !1;
                            /Color|Colour/i.test(a.options[b].name) && (l = !0);
                            for (var q = new Array(), m = 0; m < a.variants.length; m++) {
                                var i,
                                    d = a.variants[m],
                                    h = d.options[b];
                                switch (h) {
                                    case "xs":
                                        i = "Extra Small";
                                        break;
                                    case "sm":
                                        i = "Small";
                                        break;
                                    case "md":
                                        i = "Medium";
                                        break;
                                    case "lg":
                                        i = "Large";
                                        break;
                                    case "xl":
                                        i = "Extra Large";
                                        break;
                                    default:
                                        i = h.toUpperCase();
                                }
                                var j = this.convertToSlug(h),
                                    o = "quickview-swatch-" + d.id + "-" + b + "-" + j;
                                if (0 > q.indexOf(h)) {
                                    var r = u + j + ".png";
                                    console.log(':: check for d.availableAtStockLocation ::', d);
                                    d.featured_image && (r = d.featured_image.src),
                                        (c += '<div data-value="' + h + '" data-value-name="' + i + '" class="swatch-element ' + (l ? "color " : "") + j + (d ? " available " : " soldout ") + '">'),
                                        l && (c += '<div class="tooltip">' + h + "</div>"),
                                        (c += '<input id="' + o + '" type="radio" name="option-' + b + '" value="' + h + '" ' + (0 == m ? " checked " : "") + (d ? "" : " disabled") + " />"),
                                        l
                                            ? (c += '<label class="' + j + '" for="' + o + '" style="background-color: ' + j + "; background-image: url(" + r + ')"><img class="crossed-out" src="' + v + 'soldout_new.png" /><i></i></label>')
                                            : (c += '<label class="' + j + '" for="' + o + '">' + h + "</label>"),
                                        (c += "</div>"),
                                        d &&
                                            $('.jsQuickview .swatch[data-option-index="' + b + '"] .' + j)
                                                .removeClass("soldout")
                                                .addClass("available")
                                                .find(":radio")
                                                .removeAttr("disabled"),
                                        q.push(h);
                                }
                            }
                            c += "</div>";
                        }
                        f.find("form.formQuickview .proVariantsQuickview > select").after(c),
                            f.find(".swatch :radio").click(function () {
                                var a = $(this).closest(".swatch").attr("data-option-index"),
                                    b = $(this).val();
                                $(this).parents("form").find(".single-option-selector").eq(a).val(b).trigger("change"),
                                    $(document).width() > 768 &&
                                        ($(this).parents(".productQuickAdd").removeClass("active"),
                                        $(this).parents(".formAddToCart").find(".btnAddToCart").trigger("click"),
                                        console.log(ajaxCart),
                                        $(this).parents(".selection-wrapper").html(""));
                            }),
                            f.find(".btnAddToCart").click(function (e) {
                              var addToButton = jQuery(f).find(".btnAddToCart");

                              if (addToButton.hasClass("quickAddDisabled")) {
                                //alert("Please select your size!");
                                if ($(document).width() < 769) {
                                  M.toast({html: 'Please select your size!', classes: 'ebyAtcAlert error', displayLength: 1250});
                                }

                                e.preventDefault();
                                e.stopImmediatePropagation();
                                e.stopPropagation();

                                return false;
                              }

                              $(".pop_size_qa.pop_productQuickAdd").fadeOut();
                            }),
                            addCheckedSwatch();
                    }
                    a.available && ((Shopify.optionsMapQuickview = {}), window.swatch_show_unvailable ? window.swatch_enable && velaLinkOptionSelectors(a) : velaLinkOptionSelectors(a));
                } else {
                    f.find("form.formQuickview .proVariantsQuickview > select").remove();
                    var w = '<input type="hidden" name="id" value="' + a.variants[0].id + '">';
                    f.find("form.formQuickview").append(w);
                }
            }),
            (validateQty = function (a) {
                return (parseFloat(a) != parseInt(a) || isNaN(a)) && (a = 1), a;
            }),
            (qvAddToCart = function () {
                "page" != window.ajaxcart_type &&
                    ajaxCart.init({ formSelector: ".formQuickview", cartContainer: "#cartContainer", addToCartSelector: ".btnAddToCart", cartCountSelector: "#CartCount", cartCostSelector: "#CartCost", moneyFormat: null });
            }),
            (processQuickView = function (a, b, c) {
                console.log(":: func processQuickView init, ::", {a, b, c});
                $(b.variants).each(function (d, e) {
                    if ((b.title, void 0 != c[b.id] && void 0 != c[b.id].product)) {
                        var a = c[b.id].product.variants[e.id].inventoryItem.locations;
                        void 0 != a[0] && "Ecommerce WH" == a[0].name && a[0].available > 0
                            ? ((b.variants[d].stockAvailable = a[0].available), (b.variants[d].stockLocation = a[0].name), (b.variants[d].availableAtStockLocation = !0))
                            : ((b.variants[d].stockAvailable = a[0].available), (b.variants[d].stockLocation = a[0].name), (b.variants[d].availableAtStockLocation = !1));
                    }
                }),
                    a.find(".formQuickview").attr("id", "product-actions-" + b.id),
                    a.find(".formQuickview select").attr("id", "productSelectQuickview-" + b.id),
                    b.available ? quickViewVariants(b, a) : (a.find("select, input").hide(), a.find(".btnAddToCart").html("Sold Out").addClass("disabled").attr("disabled", "disabled"), a.find(".proQuantity").hide()),
                    vela.cache.$velaLoading.hide(),
                    qvAddToCart();
            }),
            $(document).on("click", ".proThumbnailsQuickview li", function () {
                changeImageQuickView($(this).find("img:first-child"), ".proImageQuickview");
            }),
            $(document).on("click", ".quickviewClose, .quickviewOverlay", function (a) {
                $("#velaQuickView").fadeOut(0), $(".jsQuickview").html(""), $(".jsQuickview").removeClass("velaFadeOut");
            }),
            $(document).on("click", ".swatch-view-item div", function (a) {
                $(this).parents(".item").find(".productQuickAdd").removeClass("active");
            }),
            $(document).on("mouseenter", ".velaProBlock.quickadd", function (f) {
                let c = !1;
                768 >= $(document).width() && (c = !0);
                var a = $(this).find(".btnProductQuickAdd"),
                    g = a.parent(".productQuickAdd");
                if (!1 == c) var d = $(a.attr("data-href"));
                else var d = $(".pop_productQuickAdd .ebyGuideChartWrapper");
                d.data("sizeGuid", a.closest(".velaProBlock").data("sizeGuid"));
                var e = $(this).find(".proFeaturedImage").attr("href").split("?variant=")[0];
                console.log(e);
                var b = e.split("/")[2],
                    h = $("#velaQuickAdd").html();
                void 0 == Shopify.Products && (Shopify.Products = []),
                    void 0 == Shopify.Products[b]
                        ? (a.data("searching", !0),
                          Shopify.getProduct(b, function (j) {
                              (Shopify.Products[b] = j), void 0 == Shopify.ProductsStock && (Shopify.ProductsStock = []);
                              let f = Shopify.Products[b],
                                  k = f.price.toLocaleString("en-US", { style: "currency", currency: "USD" });
                              var i = i || [],
                                  e = { Name: f.title, ProductID: f.id, Categories: [], ImageURL: f.media[0].src, URL: window.location.origin + f.url, Brand: "EBY", Price: k, CompareAtPrice: "" };
                              console.log(':: stock checking IIa, variable j ::', j);
                              i.push(["track", "Viewed Product", e]),
                                  i.push([
                                      "trackViewedItem",
                                      { Title: e.Name, ItemId: e.ProductID, Categories: e.Categories, ImageUrl: e.ImageURL, Url: e.URL, Metadata: { Brand: e.Brand, Price: e.Price, CompareAtPrice: e.CompareAtPrice } },
                                  ]),
                                  void 0 == Shopify.ProductsStock[b] &&
                                      $.get("https://api.shopify-inventory.jtcinteractive.com/shop/eby-by-sofia-vergara.myshopify.com/multi_variant_locations/" + j.variants.reduce((acc,variant)=> {return acc  += "," + variant.id}, "").slice(1), function (e, f, i) {
                                          "success" == f
                                              ? ((Shopify.ProductsStock[b] = e),
                                                a.data("searching", !1),
                                                !0 == a.data("hover") &&
                                                    ($(".productQuickAdd").removeClass("active"), !1 == c ? g.addClass("active") : $(".pop_size_qa.pop_productQuickAdd").fadeIn(), d.html(h), processQuickView(d, Shopify.Products[b], e)))
                                              : (a.data("searching", !1), a.data("hover", !0));
                                      });
                          }))
                        : (void 0 == Shopify.ProductsStock && (Shopify.ProductsStock = []),
                          void 0 == Shopify.ProductsStock[b] &&
                              (a.data("searching", !0),
                              console.log(':: stock checking IIb, variable Shopify.Products[b] ::', Shopify.Products[b]),
                              $.get("https://api.shopify-inventory.jtcinteractive.com/shop/eby-by-sofia-vergara.myshopify.com/multi_variant_locations/" + Shopify.Products[b].variants.reduce((acc,variant)=> {return acc  += "," + variant.id}, "").slice(1), function (e, f, i) {
                                  "success" == f
                                      ? ((Shopify.ProductsStock[b] = e),
                                        a.data("searching", !1),
                                        !0 == a.data("hover") &&
                                            ($(".productQuickAdd").removeClass("active"), !1 == c ? g.addClass("active") : $(".pop_size_qa.pop_productQuickAdd").fadeIn(), d.html(h), processQuickView(d, Shopify.Products[b], e)))
                                      : (a.data("searching", !1), a.data("hover", !0));
                              })));
            }),
            jQuery('body').on('click touchstart mouseenter', '.pop_productQuickAdd .swatch-element label', function (ev) {
                var sizeSelectedForShipNotice = ev.target.innerText.toLowerCase();
                var productId = jQuery(ev.target).closest('form').attr('id').replace('product-actions-', '');
                var quickAddWrapper = jQuery(ev.target).closest('.ebyGuideChartWrapper.selection-wrapper');
                //console.log(':log of size in qka:', sizeSelectedForShipNotice);
                if (sizeSelectedForShipNotice === "mdd" && +productId === 5304595480620) {
                  quickAddWrapper.addClass('shipNoticeWrapper');
                } else {
                  quickAddWrapper.removeClass('shipNoticeWrapper');
                }
            }),
            $(document).on("mouseenter click", ".btnProductQuickAdd", function (g) {
                if (!!jQuery('.mainContent').hasClass('quickaddLoading') && g.isTrigger == undefined) {
                  //console.log('initi', g);
                  jQuery('.mainContent').removeClass('quickaddLoading');
                }

                let c = !1;
                768 >= $(document).width() && (c = !0), vela.cache.$velaLoading.show(), $(".productQuickAdd").removeClass("active");
                var e = $(this).parent(".productQuickAdd");
                if (!1 == c) var b = $($(this).attr("data-href"));
                else var b = $(".pop_productQuickAdd .ebyGuideChartWrapper");
                b.data("sizeGuid", $(this).closest(".velaProBlock").data("sizeGuid"));
                var f = $("#velaQuickAdd").html(),
                    a = $(this).data("handle");
                if ($(this).parents(".shg-product")) var d = "/products/" + $(this).attr("data-handle");
                else var d = $(this).parents(".velaProBlockInner").find(".proFeaturedImage").attr("href").split("?variant=")[0];
                var a = d.split("/")[2];
                return (
                    void 0 == Shopify.Products && (Shopify.Products = []),
                    void 0 != Shopify.Products[a]
                        ? (void 0 == Shopify.ProductsStock && (Shopify.ProductsStock = []),
                          console.log(':: stock checking III, btnProductQuickAdd, variable Shopify.Products[a] ::', Shopify.Products[a]),
                          void 0 != Shopify.ProductsStock[a]
                              ? ($(".productQuickAdd").removeClass("active"), !1 == c ? e.addClass("active") : $(".pop_size_qa.pop_productQuickAdd").fadeIn(), b.html(f), processQuickView(b, Shopify.Products[a], Shopify.ProductsStock[a]))
                              : !0 != $(this).data("searching")
                              ? $.get("https://api.shopify-inventory.jtcinteractive.com/shop/eby-by-sofia-vergara.myshopify.com/multi_variant_locations/" + Shopify.Products[a].variants.reduce((acc,variant)=> {return acc  += "," + variant.id}, "").slice(1), function (d, g, h) {
                                    "success" == g
                                        ? ((Shopify.ProductsStock[a] = d),
                                          $(".productQuickAdd").removeClass("active"),
                                          !1 == c ? e.addClass("active") : $(".pop_size_qa.pop_productQuickAdd").fadeIn(),
                                          b.html(f),
                                          processQuickView(b, Shopify.Products[a], d))
                                        : delete Shopify.ProductsStock[a];
                                })
                              : $(this).data("hover", !0))
                        : !0 != $(this).data("searching")
                        ? Shopify.getProduct(a, function (d) {
                              console.log(':: stock checking III, btnProductQuickAdd, variable d ::', d);
                              void 0 == Shopify.Products && (Shopify.Products = []),
                                  (Shopify.Products[a] = d),
                                  void 0 == Shopify.ProductsStock && (Shopify.ProductsStock = []),
                                  void 0 != Shopify.ProductsStock[a]
                                      ? ($(".productQuickAdd").removeClass("active"),
                                        !1 == c ? e.addClass("active") : $(".pop_size_qa.pop_productQuickAdd").fadeIn(),
                                        b.html(f),
                                        processQuickView(b, Shopify.Products[a], Shopify.ProductsStock[a]))
                                      : $.get("https://api.shopify-inventory.jtcinteractive.com/shop/eby-by-sofia-vergara.myshopify.com/multi_variant_locations/" + Shopify.Products[a].variants.reduce((acc,variant)=> {return acc  += "," + variant.id}, "").slice(1), function (d, g, h) {
                                            "success" == g
                                                ? ((Shopify.ProductsStock[a] = d),
                                                  $(".productQuickAdd").removeClass("active"),
                                                  !1 == c ? e.addClass("active") : $(".pop_size_qa.pop_productQuickAdd").fadeIn(),
                                                  b.html(f),
                                                  processQuickView(b, Shopify.Products[a], d))
                                                : delete Shopify.ProductsStock[a];
                                        });
                          })
                        : $(this).data("hover", !0),
                    !1
                );
            }),
            $(document).on("mouseenter click", ".swatch .swatch-element", function (b) {
                // console.log(window.innerWidth);
                // console.log(b.type);

//                if (window.innerWidth <= 769 && b.type === "mouseenter") {
  //                return;
    //            }

      //          if (b.target.tagName === "INPUT") {
        //          return;
          //      }

                var a = $(this).data("valueName");

                //console.log("A", a);

                if (typeof a !== "undefined") {
                  var $this = jQuery(this);

                  var container = $this.parents(".selection-wrapper");
                  var addToCartButton = jQuery(container).find(".btnAddToCart");

                  if ($this.hasClass("available")) {
                    addToCartButton.removeClass("quickAddDisabled");
                  } else if (!addToCartButton.hasClass("quickAddDisabled")) {
                    addToCartButton.addClass("quickAddDisabled");
                  }

                  $this.parent(".swatch").find(".swatch-text").text(a);
                  jQuery(".swatch-element.selectedSwatch").removeClass("selectedSwatch");

                  if (b.target.className.length > 0) {
                    jQuery(".swatch-element." + b.target.className).addClass("selectedSwatch");
                  }
                }
            }),
            (!0 == $("body").hasClass("template-collection") ||
                !0 == $("body").hasClass("template-index") ||
                !0 == $("body").hasClass("template-list-collections") ||
                $("body").hasClass("premium_news") ||
                $("body").hasClass("template-page-special") ||
                $("body").hasClass("shg-page")) &&
                $(document).on("click", ".siz_guid.size_guid_plp", function () {
                    console.log('size guide logic?');
                    return (
                        $(".pop_size.size_guid_plp").is(":visible")
                            ? $(".pop_size.size_guid_plp").fadeOut()
                            : ($(this).hasClass("pantyChart") ? $(".pop_size.size_guid_plp .ebyPantyGuide").show() : $(".pop_size.size_guid_plp .ebyPantyGuide").hide(),
                              $(this).hasClass("braletteChart") ? $(".pop_size.size_guid_plp .ebyBraletteGuide").show() : $(".pop_size.size_guid_plp .ebyBraletteGuide").hide(),
                              $(this).hasClass("braChart") ? $(".pop_size.size_guid_plp .ebyBraGuide").show() : $(".pop_size.size_guid_plp .ebyBraGuide").hide(),
                              $(this).hasClass("tankChart") ? $(".pop_size.size_guid_plp .ebyTankGuide").show() : $(".pop_size.size_guid_plp .ebyTankGuide").hide(),
                              $(this).hasClass("silktankChart") ? $(".pop_size.size_guid_plp .ebySilktankGuide").show() : $(".pop_size.size_guid_plp .ebySilktankGuide").hide(),
                              $(this).hasClass("silkdressChart") ? $(".pop_size.size_guid_plp .ebySilkdressGuide").show() : $(".pop_size.size_guid_plp .ebySilkdressGuide").hide(),
                              $(this).hasClass("silkblouseChart") ? $(".pop_size.size_guid_plp .ebySilkblouseGuide").show() : $(".pop_size.size_guid_plp .ebySilkblouseGuide").hide(),
                              $(this).hasClass("silkshortsChart") ? $(".pop_size.size_guid_plp .ebySilkshortsGuide").show() : $(".pop_size.size_guid_plp .ebySilkshortsGuide").hide(),
                              $(this).hasClass("silkpantsChart") ? $(".pop_size.size_guid_plp .ebySilkpantsGuide").show() : $(".pop_size.size_guid_plp .ebySilkpantsGuide").hide(),
                              $(this).hasClass("wrapTopChart") ? $(".pop_size.size_guid_plp .ebyWrapGuide").show() : $(".pop_size.size_guid_plp .ebyWrapGuide").hide(),
                              $(this).hasClass("bodysuitChart") ? $(".pop_size.size_guid_plp .ebyBodysuitGuide").show() : $(".pop_size.size_guid_plp .ebyBodysuitGuide").hide(),
                              $(".pop_size.size_guid_plp").fadeIn(),
                              $(".pop_size.size_guid_plp .pop_wrap").scrollTop(0)),
                        !1
                    );
                }),
            $(document).on("click", ".btnProductQuickview", function (b) {
                vela.cache.$velaLoading.show();
                var a = $(this).data("handle");
                return (
                    Shopify.getProduct(a, function (b) {
                        var d = $("#quickviewModal").html();
                        $(".jsQuickview").html(d);
                        var a = $(".jsQuickview"),
                            e = b.description.replace(/(<([^>]+)>)/gi, ""),
                            c = "",
                            f = b.featured_image;
                        -1 != b.description.indexOf("[SHORTDESCRIPTION]")
                            ? ((c = b.description.split("[SHORTDESCRIPTION]")[0]), a.find(".proShortDescription").html(c))
                            : ((c = e.split(" ").splice(0, 30).join(" ") + "..."), a.find(".proShortDescription").text(c)),
                            a.find(".proImageQuickview").attr("src", f),
                            a.find(".proImage").attr("href", b.url),
                            a.find(".pricePrimary").html(Shopify.formatMoney(b.price, window.money)),
                            a.find(".proBoxInfo").attr("id", "product-" + b.id),
                            a.find(".formQuickview").attr("id", "product-actions-" + b.id),
                            a.find(".formQuickview select").attr("id", "productSelectQuickview"),
                            a.find(".proBoxInfo .quickviewName").html("<a href='" + b.url + "'>" + b.title + "</a>"),
                            a.find(".proBoxInfo .quickViewVendor").append("<label>Vendor:</label> " + b.vendor),
                            a.find(".proBoxInfo .quickViewSKU").append("<label>SKU:</label> " + b.variants[0].sku),
                            b.available
                                ? (a.find(".proBoxInfo .quickviewAvailability").removeClass("outstock").addClass("instock"), a.find(".proBoxInfo .quickviewAvailability").append("<label>Availability:</label> In stock"))
                                : (a.find(".proBoxInfo .quickviewAvailability").removeClass("instock").addClass("outstock"), a.find(".proBoxInfo .quickviewAvailability").append("<label>Availability:</label> Unavailable")),
                            b.compare_at_price > b.price ? (a.find(".priceCompare").html(Shopify.formatMoney(b.compare_at_price_max, window.money)).show(), a.find(".pricePrimary").addClass("priceSale")) : a.find(".priceCompare").html(""),
                            b.available ? quickViewVariants(b, a) : (a.find("select, input").hide(), a.find(".btnAddToCart").html("Sold Out").addClass("disabled").attr("disabled", "disabled"), a.find(".proQuantity").hide()),
                            loadQuickViewSlider(b, a),
                            $("#velaQuickView").fadeIn(0),
                            $(".jsQuickview").addClass("velaFadeOut"),
                            vela.cache.$velaLoading.hide(),
                            qvAddToCart(),
                            window.currencies && Currency.convertAll(window.currency, Currency.cookie.read());
                    }),
                    !1
                );
            });
    }),
    (vela.goToTop = function () {
        $(window).scroll(function () {
            $(window).scrollTop() >= 200 ? $("#goToTop").fadeIn() : $("#goToTop").fadeOut();
        }),
            $("#goToTop").click(function () {
                return $("body,html").animate({ scrollTop: 0 }, "normal"), $("#pageContainer").animate({ scrollTop: 0 }, "normal"), !1;
            });
    }),
    (vela.productLoadMore = function () {
        function a() {
            $(".productLoadMore .btnLoadMore").click(function (b) {
                var d, c;
                return $(this).hasClass("disableLoadMore")
                    ? (b.stopPropagation(), !1)
                    : ((d = $(".productLoadMore .btnLoadMore")),
                      (c = $(".productLoadMore .btnLoadMore").attr("href")),
                      $.ajax({
                          type: "GET",
                          url: c,
                          beforeSend: function () {
                              vela.cache.$velaLoading.show();
                          },
                          success: function (b) {
                              d.remove(), vela.cache.$velaLoading.hide(), $(b).find(".producsLoadMore").insertBefore($(".proLoadMoreBottom")), a();
                          },
                          dataType: "html",
                      }),
                      b.stopPropagation(),
                      !1);
            });
        }
        a();
    }),
    (vela.velaAccountPage = function () {
        let a = vela.getHash() || window.location.href,
            b = "";
        a.indexOf("#") >= 0 && (b = a.slice(a.indexOf("#"), a.length)),
            $("body").on("click", ".velaRecoverPassword", function (a) {
                $("#RecoverPasswordForm").removeClass("hidden recoverMode"), $("#CustomerLoginForm").addClass("hidden recoverMode"), "#" == a.target.getAttribute("href") && $(".loginHeading").addClass("reactivate");
            }),
            $("body").on("click", ".velaHideRecoverPasswordLink", function (a) {
                $("#RecoverPasswordForm").addClass("hidden recoverMode"), $("#CustomerLoginForm").removeClass("hidden recoverMode"), $(".loginHeading").removeClass("reactivate");
            }),
            "#recover" == b && ($("#RecoverPasswordForm").removeClass("hidden recoverMode"), $("#CustomerLoginForm").addClass("hidden recoverMode")),
            "#" == b && $(".loginHeading").addClass("reactivate"),
            $("body").on("click", ".velaShowPassword", function (c) {
                var a = $(this),
                    b = a.prev("input");
                "password" == b.attr("type") ? (b.attr("type", "text"), a.text("Hide")) : (b.attr("type", "password"), a.text("Show"));
            });
    }),
    (vela.Drawers = (function () {
        var a = function (b, a, c, d) {
            if (
                ((this.$nodes = { parent: $("body, html"), page: $("#pageContainer"), moved: $(".isMoved") }),
                (this.config = $.extend({ close: ".jsDrawerClose", open: ".jsDrawerOpen" + a, openClass: "jsDrawerOpen", dirOpenClass: "jsDrawerOpen" + a }, d)),
                (this.position = a),
                (this.iscart = c),
                (this.$drawer = $("#" + b)),
                !this.$drawer.length)
            )
                return !1;
            (this.drawerIsOpen = !1), this.init();
        };
        return (
            (a.prototype.init = function () {
                $(this.config.open).on("click", $.proxy(this.open, this)), this.$drawer.find(this.config.close).on("click", $.proxy(this.close, this));
            }),
            (a.prototype.open = function (a) {
                if ("modal" == window.ajaxcart_type && this.iscart) {
                    var b = !1;
                    this.$drawer.modal(),
                        a ? a.preventDefault() : (b = !0),
                        a && a.stopPropagation && (a.stopPropagation(), (this.$activeSource = $(a.currentTarget))),
                        this.config.onDrawerOpen && "function" == typeof this.config.onDrawerOpen && (b || this.config.onDrawerOpen());
                } else {
                    var b = !1;
                    if ((a ? a.preventDefault() : (b = !0), a && a.stopPropagation && (a.stopPropagation(), (this.$activeSource = $(a.currentTarget))), this.drawerIsOpen && !b)) return this.close();
                    this.$nodes.moved.addClass("is-transitioning"),
                        "0" == $("#CartCount").text() ? ($("#cartDrawer").removeClass("not_empty_cart"), $("#cartDrawer").addClass("empty_cart")) : ($("#cartDrawer").removeClass("empty_cart"), $("#cartDrawer").addClass("not_empty_cart")),
                        this.$drawer.prepareTransition(),
                        this.$nodes.parent.addClass(this.config.openClass + " " + this.config.dirOpenClass),
                        (this.drawerIsOpen = !0),
                        this.trapFocus(this.$drawer, "drawer_focus"),
                        this.config.onDrawerOpen && "function" == typeof this.config.onDrawerOpen && (b || this.config.onDrawerOpen()),
                        this.$activeSource && this.$activeSource.attr("aria-expanded") && this.$activeSource.attr("aria-expanded", "true"),
                        this.$nodes.page.on("touchmove.drawer", function () {
                            return !1;
                        }),
                        this.$nodes.page.on(
                            "click.drawer",
                            $.proxy(function () {
                                return this.close(), !1;
                            }, this)
                        );
                }
            }),
            (a.prototype.close = function () {
                this.drawerIsOpen &&
                    ($(document.activeElement).trigger("blur"),
                    this.$nodes.moved.prepareTransition({ disableExisting: !0 }),
                    this.$drawer.prepareTransition({ disableExisting: !0 }),
                    this.$nodes.parent.removeClass(this.config.dirOpenClass + " " + this.config.openClass),
                    (this.drawerIsOpen = !1),
                    this.removeTrapFocus(this.$drawer, "drawer_focus"),
                    $('body').css('overflowY', 'auto'),
                    this.$nodes.page.off(".drawer"));
            }),
            (a.prototype.trapFocus = function (a, b) {
                a.attr("tabindex", "-1"),
                    a.focus(),
                    $(document).on(b ? "focusin." + b : "focusin", function (b) {
                        a[0] === b.target || a.has(b.target).length || a.focus();
                    });
            }),
            (a.prototype.removeTrapFocus = function (b, a) {
                b.removeAttr("tabindex"), $(document).off(a ? "focusin." + a : "focusin");
            }),
            a
        );
    })()),
    (window.velatheme = window.velatheme || {}),
    (vela.velaBannerTop = function () {
        var a = new Date();
        a.setTime(a.getTime() + 3e5),
            "function" == typeof $.cookie &&
                ("closed" == $.cookie("velaBannerTop") ? $("#bannerTop").removeClass("active") : $("#bannerTop").addClass("active"),
                $("#bannerTop .btn-bannerTop").click(function () {
                    $("#bannerTop").hasClass("active") ? ($.cookie("velaBannerTop", "closed", a), $("#bannerTop").removeClass("active")) : ($.cookie("velaBannerTop", "opened", a), $("#bannerTop").addClass("active"));
                }));
    }),
    setTimeout(function () {
        $(vela.init);
        var b = document.querySelectorAll(".sitemap_modal");
        if (
            (M.Modal.init(b),
            jQuery(document).on("click", ".size_guide", function (a) {
                a.preventDefault(),
                    "Core Bralette" == jQuery(this).data("product-type") 
                        ? (jQuery(".ebyPantyGuide").hide(), jQuery(".ebyBraGuide").hide(), jQuery(".ebyBraletteGuide").show(), jQuery(".ebyTankGuide").hide())
                        : "Core Bra" == jQuery(this).data("product-type") ? (jQuery(".ebyPantyGuide").hide(), jQuery(".ebyBraletteGuide").hide(), jQuery(".ebyBraGuide").show(), jQuery(".ebyTankGuide").hide())
                        : "Tank" == jQuery(this).data("product-type")
                        ? (jQuery(".ebyBraletteGuide").hide(), jQuery(".ebyBraGuide").hide(), jQuery(".ebyPantyGuide").hide(), jQuery(".ebyTankGuide").show())
                        : (jQuery(".ebyBraletteGuide").hide(), jQuery(".ebyBraGuide").hide(), jQuery(".ebyPantyGuide").show(), jQuery(".ebyTankGuide").hide()),
                    jQuery(".template-collection .pop_size").is(":visible") ? jQuery(".template-collection .pop_size").fadeOut() : jQuery(".template-collection .pop_size").fadeIn();
            }),
            jQuery(".pop_wrapper_backing").click(function () {
                jQuery(".pop_size").fadeOut();
            }),
            jQuery("span.colz_pop").click(function () {
                jQuery(".pop_size").fadeOut();
            }),
            jQuery("span.colz_pop_qa").click(function () {
                jQuery(".pop_size_qa").fadeOut();
            }),
            setTimeout(function () {
                var privy_embedded_form_1716982 = document.querySelector(".privy-embedded-form-1716982");
                if(privy_embedded_form_1716982 != null) {
                    var a = document.querySelector(".privy-embedded-form-1716982").contentWindow;
                    window.addEventListener("message", function (b) {
                        b.source === a && "eby access granted." === b.data && (window.document.querySelector(".ebyModalModuleWrapper").style.display = "none");
                    });
                }
            }),
            document.addEventListener("rebuy.add", async function (a) {
                let prodAddedName = !!a.detail.product.title ? a.detail.product.title : "bundle";
                console.log(":: upsell ADDtoCART event ::", a.detail.product.selected_variant),
                    a.detail.product.selected_variant &&
                        ((window.liQ = window.liQ || []),
                        window.liQ.push({
                            event: "addToCart",
                            email: window.customer_email,
                            items: [{ id: a.detail.product.selected_variant.id.toString(), price: a.detail.product.selected_variant.price, quantity: a.detail.product.qty, currency: "USD" }],
                        })),
                    window.location.href.indexOf("/build-your-box") >= 0
                        ? M.toast({ html: "Success! Added " + a.detail.product.title + " to your first box.", classes: 'ebyAtcAlert success', displayLength: 1250 })
                        : (M.toast({ html: "Success! Added " + prodAddedName + " to your cart.", classes: 'ebyAtcAlert success', displayLength: 1250 }),
                          (window.location.href.indexOf("/products") >= 0 || window.location.href.indexOf("/pages") >= 0) && jQuery(".jsDrawerOpenRight").trigger("click")),
                    console.log(a.detail.widget.data.cart.total_price),
                    $(".motivator-bar").length > 0 && a.detail.widget.data.cart.total_price && checkMotivatorBanner(a.detail.widget.data.cart.total_price / 100),
                    setTimeout(function () {
                        if (document.querySelector(".skips-btn")) {
                            let a = document.querySelector(".skips-btn");
                            if (a.fireEvent) a.fireEvent("onclick");
                            else {
                                var b = document.createEvent("Events");
                                b.initEvent("click", !0, !1), a.dispatchEvent(b);
                            }
                        }
                    }, 300);
                //push to ga4
                const rebuyWidgets = ["75385", "74714", "75387", "75389"];
                const widgetId = rebuyWidgets.indexOf(a.detail.widget.id) 
                // fc 031623
                if(widgetId >= 0){
                    const widgetPdpObj = a.detail
                        // grab the price, title, vendor, product type, selected variant 
                    for(const widgetSelected of widgetPdpObj.widget.data.products){
                        
                        if(widgetSelected.selected){

                            gtag("event", "add_to_cart", {
                                currency: "USD",
                                value: parseInt(widgetSelected.selected_variant.price),
                                page_location: window.location.pathname,
                                page_title: document.title,
                                event_category: widgetSelected.title,
                                event_label: 'atc_type-rebuy_bundle',
                                items: [
                                    {
                                        item_id: widgetSelected.id,
                                        item_name: widgetSelected.title,
                                        affiliation: widgetSelected.vendor,
                                        index: 0,
                                        item_category: widgetSelected.product_type,
                                        item_variant: widgetSelected.selected_variant.title,
                                        price: parseInt(widgetSelected.selected_variant.price),
                                        currency: "USD",
                                        quantity: 1,
                                    },
                                ],
                            });
                        }
                    }
                    /*
                      ********************************************************
                      * Bundle brapacks start  fc 041123
                      * products/black-support-bralette-2-pack 
                      * Price is with shopify functions 
                      ********************************************************
                    */      
                    const bundleId23 = $("#eby-bundle-bras23").attr('data-bundlepdp');
                    if(typeof bundleId23 == 'string'){

                        // check if bundle has different colors
                        const mixBundle = document.getElementById('eby-bundle-bras23');
                        let mixStr = mixBundle.dataset.bundlepdp2;;
                        let mixStrSheer = mixBundle.dataset.mainvr;
    
                        let isMixedBlnk = 'bra_bundle_pack';
                        if( mixStrSheer.indexOf('::') !== -1 ){
                            const ababab = mixStrSheer.split('::')
                            isMixedBlnk = mixStrSheer.split('::').indexOf('6664648458284') == -1 ? 'bra_bundle_pack' : 'bra_bundle_pack_sheer';
                        }
                        // if it does add 1 of each
                        if (mixStr.length > 10) {
                            await mainBundleBralette(bundleId23, 1, 'bra_bundle_pack');
                            await mainBundleBralette(mixStr, 1, isMixedBlnk);
                        } else { 
                            await mainBundleBralette(bundleId23, 2, isMixedBlnk);
                        }
                        // Main method for POST request
                        async function mainBundleBralette(bundleIds, n, mixType){
                            // convert variant and ids to keys and val
                            const variantSend = bndlSizeObj(bundleIds);
                            // variant selected by user
                            const bndlSelectedSize = document.getElementById("productSelect").selectedOptions[0].innerText;
                            // grab the selected variant
                            const removeVariantId = a.detail.product[0].id;
                            // find the key and send the new variant id
                            const idSend = findIdMap(bndlSelectedSize, variantSend);
                            const bundleItems = {
                                "items": [
                                    { quantity: n, id: idSend, properties: { [mixType]: !0, "Shipping Option": "Ecommerce WH" } },
                                ]
                            }
                            try {
                                const response = await fetch('/cart/add.js', {
                                  method: 'POST',
                                  headers: {
                                    'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify(bundleItems)
                                });
                                const postData = await response.json();
                                console.log('Send first pack', postData.items[0]);
                              
                                // Remove the bundle from the cart
                                const removeBndl = { quantity: 0, id: removeVariantId };
                                const removeResponse = await fetch('/cart/change.js', {
                                  method: 'POST',
                                  headers: {
                                    'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify(removeBndl)
                                });
                                const removeData = await removeResponse.json();
                                console.log('Change bnld to 0', removeData);
                            } catch (error) {
                                console.error('Error', error);
                            }
                              
                            function bndlSizeObj(data){
                                let newVariants = new Map();
                                const tempData = data.split(':');
                  
                                for(const el of tempData){
                                  const [size, varId] = el.split('_');
                                  newVariants.set(size, varId);
                                }
                                return newVariants
                            }
                            function findIdMap(str, obj){
                                const newStr = str.split('-')[0].trim();
                                return obj.get(newStr);
                            }
                        }
                        /*
                          ********************************************************
                          * End bundle post 
                          ********************************************************
                        */
                      
                    }
                } else {
                    gtag("event", "add_to_cart", {
                        currency: "USD",
                        value: parseInt(a.detail.product.selected_variant.price),
                        page_location: window.location.pathname,
                        page_title: document.title,
                        event_category: a.detail.product.title,
                        event_label: 'atc_type-rebuy_def',
                        items: [
                            {
                                item_id: a.detail.product.id,
                                item_name: a.detail.product.title,
                                affiliation: a.detail.product.vendor,
                                index: 0,
                                item_category: a.detail.product.product_type,
                                item_variant: a.detail.product.selected_variant.title,
                                price: parseInt(a.detail.product.selected_variant.price),
                                currency: "USD",
                                quantity: 1,
                            },
                        ],
                    });
                  
                }
                let e = document.querySelector(".jsDrawerOpenRight #rebuy-widget-" + a.detail.widget.id + " .rebuy-product-actions"),
                    c = document.querySelector(".ebyQuizApp #rebuy-widget-" + a.detail.widget.id + " .rebuy-product-actions");
                e && $(".ebyMinicart").trigger("click"),
                    c && (c.style.display = "none"),
                    $("body").hasClass("template-holidayLanding") &&
                        ($(".header-minicart-wrapper").removeClass("shop").addClass("checkout"),
                        $(".header-checkoutbtn-wrapper").removeClass("shop").addClass("checkout"),
                        $(".ebyHeaderCtaWrapper").removeClass("join").addClass("buy"),
                        $(".velaCartTop").removeClass("empty").addClass("avail"),
                        $(".cartIndicator").addClass("ebyMinicartHasCount"));
                let b = a.detail.product;
                if ("Surprise Panty Pack" === b.product_type) {
                    var d, f;
                    console.log("::pack about to be added::", b),
                        (d = b.tags
                            .split(", ")
                            .filter(function (a, b) {
                                return a.indexOf("collection:") >= 0 ? a : "";
                            })[0]
                            .replace("collection:", "")),
                        (f = b),
                        console.log("triggered"),
                        $.ajax({ url: window.location.origin + "/collections/" + d, type: "GET" })
                            .done(function (a) {
                                if (a) {
                                    var b = $.parseJSON(a).reduce(
                                        function (b, c) {
                                            let a = c.tags.filter(function (a, b) {
                                                    return a.indexOf(f.id + "::S&DSIZE") >= 0 ? a : "";
                                                }),
                                                d = f.option1;
                                            if (a.length > 1) {
                                                let e = a.filter(function (a, b) {
                                                    return a.indexOf("S&DSIZE:" + d) >= 0 ? a.split(":") : "";
                                                });
                                                e.length > 0 && d === e[0].split("::")[1].replace("S&DSIZE:", "") && b.push(c);
                                            }
                                            return 1 == a.length && d === a[0].split("::")[1].replace("S&DSIZE:", "") && b.push(c), b;
                                        },
                                        [],
                                        f
                                    );
                                    console.log("products to add to the pack", b);
                                    let c = b.reduce(function (a, b) {
                                            let c = b.variants.filter(function (a, b) {
                                                return a.option1 === f.option1 ? a : "";
                                            });
                                            return a.push({ id: c[0].id, quantity: 1, properties: { "Shipping Option": "Ecommerce WH", product_type: "Sub Subscription", included_in_pack: !0 } }), a;
                                        }, []),
                                        d = c.map(function (a, b) {
                                            return a.id;
                                        });
                                    $.ajax({
                                        type: "POST",
                                        url: "/cart/add.js",
                                        data: { items: c },
                                        dataType: "json",
                                        beforeSend: function () {},
                                        success: function (a) {
                                            console.log("successful add to cart"),
                                                jQuery.getJSON("/cart.js", function (e, g) {
                                                    let b = e.items,
                                                        c = b.reduce(function (a, b, c) {
                                                            return +b.id == +f.selected_variant_id && a.push(c), a;
                                                        }, []),
                                                        a = b[c[0]].properties;
                                                    (a.product_type = "Main Subscription"),
                                                        (a.pack_parent = !0),
                                                        (a.subscription_ids = d.join(", ")),
                                                        $.ajax({ type: "POST", url: "/cart/change.js", data: { line: c[0] + 1, properties: a }, dataType: "json", success: function (a) {} });
                                                });
                                        },
                                    });
                                }
                            })
                            .fail(function (a) {
                                console.log("esapi-error", a);
                            });
                }
            }),
            $("body").on("click", ".gorgias-web-messenger-container-button", function (a) {
                $("#gorgias-web-messenger-container").fadeIn(), Smooch.open(), gtag("event", "btn_click__open_gorgias_chat", { link_text: a.target.innerText, link_url: a.target.href, link_id: a.target.id, link_title: a.target.title });
            }),
            document.addEventListener('rebuy.beforeReady', function(event){
                console.log('rebuy.beforeReady event', event.detail);
                let SALE_LIBRARY = ["PB","KL","SL","DP","BO","FB","SP","BI","P3","BK","NU","EB","PO","LG","P4","GR"];
                let SALE_DISCOUNTS = [50,50,72,72,30,72,30,30,42,25,25,50,50,50,50,50];
                let SALE_COTTON_LIBRARY = ["BO","LG","BK","FR"];
                let SALE_COTTON_DISCOUNTS = [50,60,50,60];
              
                // sale price check
                // check if any product has a sale discount
              
                if (event.detail.widget.data.products.length > 0) {
                  event.detail.widget.data.products.map(function (prod) {
                    //console.log(":: rebuy product to update price for sale ::", prod);
                    if (prod.tags.indexOf('memsale2023') >= 0) {
                      prod.variants.map(function (prodVariant) {
                        // if (prod.product_type.indexOf('Mesh') >= 0) {
                        //   prodVariant.compare_at_price = (+prodVariant.price - (+prodVariant.price * 25 / 100)) * 100;
                        // } else if (prod.product_type.indexOf('Silk') >= 0) {
                        //   prodVariant.compare_at_price = (+prodVariant.price - (+prodVariant.price * 50 / 100)) * 100;
                        // } else {
                        //   let codeIndex = SALE_LIBRARY.indexOf(prodVariant.sku.slice(7,9));
                        //   //prodVariant.price = +prodVariant.price - (+prodVariant.price * SALE_DISCOUNTS[codeIndex] / 100) + ".00";
                        //   prodVariant.compare_at_price = (+prodVariant.price - (+prodVariant.price * SALE_DISCOUNTS[codeIndex] / 100)) * 100;
                        // }
                        prodVariant.compare_at_price = (+prodVariant.price - (+prodVariant.price * 40 / 100)) * 100;
                        
                      });
                    }
                  });
                }
            }),
            document.addEventListener("rebuy.ready", function (a) {
                console.log("rebuy.ready event", a.detail);

                if (window.location.pathname.indexOf('/products') >= 0) {
                  if (!document.querySelector('#AddToCartText')) {
                    console.log('hotfix for oos trigger');
                    document.querySelector('#AddToCart').disabled = false;
                    document.querySelector('#AddToCart').innerHTML = '<span id="AddToCartText">ADD TO CART |</span>';
                  }
                }

                if (a.detail.widget.id == 3906) {
                  // update sidecart products' names, fabrics, and colors
                  let sidecartUpsellProducts = a.detail.widget.data.products;
                  for (let i = 0; i < sidecartUpsellProducts.length; i++) {
                    let colorNameForWidget = vela.ebyProdTitleFormatter(sidecartUpsellProducts[i].title, 'color');
                    if (colorNameForWidget.indexOf('Exotic Botanical') >= 0) {
                        jQuery('.eby_sidecart_rec_wrapper .product-id-'+ sidecartUpsellProducts[i].id+ ' .r---product-title---22').text("Highwaisted");
                        jQuery('.eby_sidecart_rec_wrapper .product-id-'+ sidecartUpsellProducts[i].id+ ' .r---product-color---22').text("E. Botanical");
                    } else {
                      jQuery('.eby_sidecart_rec_wrapper .product-id-'+ sidecartUpsellProducts[i].id+ ' .r---product-title---22').text(vela.ebyProdTitleFormatter(sidecartUpsellProducts[i].title, 'style'));
                       jQuery('.eby_sidecart_rec_wrapper .product-id-'+ sidecartUpsellProducts[i].id+ ' .r---product-color---22').text(vela.ebyProdTitleFormatter(sidecartUpsellProducts[i].title, 'color')); 
                    }
                    jQuery('.eby_sidecart_rec_wrapper .product-id-'+ sidecartUpsellProducts[i].id+ ' .r---product-fabric---22').text(vela.ebyProdTitleFormatter(sidecartUpsellProducts[i].title, 'fabric'));
                  }
                }
              
                let b = document.querySelector("#rebuy-widget-" + a.detail.widget.id + " .rebuy-product-title"),
                    c = document.querySelector("#rebuy-widget-" + a.detail.widget.id + " .rebuy-product-image");
                b &&
                    c &&
                    (b.addEventListener("click", function (a) {
                        return a.stopPropagation(), a.preventDefault(), !1;
                    }),
                    b.setAttribute("href", "javascript:void(0);"),
                    c.addEventListener("click", function (a) {
                        return a.stopPropagation(), a.preventDefault(), !1;
                    }),
                    c.setAttribute("href", "javascript:void(0);")),
                    (-1 != navigator.platform.indexOf("iPhone") || -1 != navigator.platform.indexOf("iPod")) && $(".rebuy-select option[value='34449596448812']").attr("disabled", !0).remove();
              
            }),
            jQuery("body").on("click", ".eby-header-nav-container .mega-nav-column .nav-column-header", function (a) {
                if ((console.log(":x:", a), a.target.href.indexOf("#navlink-") >= 0)) {
                    let b = a.target.href.slice(a.target.href.indexOf("#navlink-"), a.target.href.length);
                    console.log(":: default modal popup ::", b.replace("#navlink-", "")), vela.addEbyMembershipBox("cms", { styleGroup: b.replace("#navlink-", ""), colorGroup: null, sizeGroup: null, planGroup: null });
                }
                gtag("event", "link_click__nav_link", { link_text: a.target.innerText, link_url: a.target.href, link_id: a.target.id, link_title: a.target.title });
            }),
            jQuery("body").on("click", "a.getMembershipGlobalLink", function (a) {
                if (a.target.href.indexOf("#navlink-") >= 0) {
                    let b = a.target.href.slice(a.target.href.indexOf("#navlink-"), a.target.href.length);
                    console.log(":: default modal popup ::", b.replace("#navlink-", "")), vela.addEbyMembershipBox("cms", { styleGroup: b.replace("#navlink-", ""), colorGroup: null, sizeGroup: null, planGroup: null });
                }
                gtag("event", "btn_click__open_sub_funnel_general_cta", { link_text: a.target.innerText, box_pref: snippet.replace("#navlink-", "") });
            }),
            document.getElementById("learnAboutMembership") &&
                null != document.querySelector(".membershipInfoPopup") &&
                document.querySelector(".membershipInfoPopup").addEventListener("click", (a) => {
                    console.log(":: membership info popup init ::"), $.fancybox.open(jQuery("#learnAboutMembership"));
                }),
            jQuery("body").on("mouseenter", ".snize-ac-results", function (a) {
                console.log("update header"), jQuery(".ebyGlobalSearchbar.desktopVer").closest(".mega-nav").siblings("a").addClass("hoverTemp");
            }),
            jQuery("body").on("mouseleave", ".snize-ac-results", function (a) {
                console.log("update header"), jQuery(".ebyGlobalSearchbar.desktopVer").closest(".mega-nav").siblings("a").removeClass("hoverTemp");
            }),
            window.location.href.indexOf("#navlink-") >= 0)
        ) {
            let a = window.location.href.slice(window.location.href.indexOf("#navlink-"), window.location.href.length).replace("#navlink-", "");
            console.log(":: default modal popup ::", a),
                "default" === a
                    ? vela.addEbyMembershipBox("default", { styleGroup: null, colorGroup: null, sizeGroup: null, planGroup: null })
                    : vela.addEbyMembershipBox("cms", { styleGroup: a, colorGroup: null, sizeGroup: null, planGroup: null });
        }
        jQuery("body").on("click", ".ebyMicroBtn.joinNow", function (a) {
            // prevent parents to access on click
            a.stopPropagation();
            if ((console.log("data-subscribe-1", a.target), a.target.getAttribute("data-subscribe"))) {
                let b = a.target.getAttribute("data-subscribe");
                vela.addEbyMembershipBox(b, { styleGroup: null, colorGroup: null, sizeGroup: null, planGroup: null, prodsOfInterest: [] });
            }
        }),
            jQuery("body").on("click", ".quickAddMembershipBtn", function (a) {
                if ((console.log("data-subscribe-2", a.target), a.target.getAttribute("data-subscribe"))) {
                    let b = a.target.getAttribute("data-subscribe");
                    vela.addEbyMembershipBox(b, { styleGroup: a.target.getAttribute("data-sg"), colorGroup: a.target.getAttribute("data-cg"), sizeGroup: null, planGroup: a.target.getAttribute("data-pg"), prodsOfInterest: [] });
                }
            }),
            jQuery("body").on("click", "#clearFiltersBtn", function (a) {
                console.log(":: clear all ::", a.target);
            }),
            jQuery("body").on("click", "#closeMobViewBtn", function (a) {
                console.log(":: close filters modal ::", a.target), jQuery("#collFiltersModule").removeClass("mobViewActive");
            }),
            jQuery("body").on("click", "#openMobViewFilters", function (a) {
                console.log(":: close filters modal ::", a.target), jQuery("#collFiltersModule").addClass("mobViewActive");
            }),
            $(".ebyBtnTracker").on("click", function (a) {
                console.log("::ebytest:: click");
                var b = a.target.getAttribute("data-ebyval").replace("$", "");
                window.ga("send", "event", { eventCategory: a.target.getAttribute("data-ebycat"), eventLabel: a.target.getAttribute("data-ebylab"), eventAction: a.target.getAttribute("data-ebyact"), eventValue: Math.floor(b) });
            }),
            jQuery("body").on("click", ".prodTitleQuickViewBtn", function (a) {
                console.log(":: toggle productTitleQuickInfo ::", a.target), jQuery(a.target).closest(".velaProBlock").find(".prodSecondaryTileface").toggleClass("active");
            }),
            jQuery().collapsible &&
                (jQuery(".collapsible.expandable").length > 0 &&
                    (window.innerWidth > 770 ||
                        (jQuery(".ebyBannerSummaryHeader.mobileVer").length > 0 &&
                            (window.location.pathname.indexOf("invisible-cotton") >= 0 ||
                                window.location.pathname.indexOf("thong-panties") >= 0 ||
                                window.location.pathname.indexOf("feels-like-this") >= 0 ||
                                window.location.pathname.indexOf("seamless-tank-top") >= 0) &&
                            jQuery(".ebyBannerSummaryHeader.mobileVer").addClass("active")),
                    jQuery(".collapsible.expandable").collapsible({ accordion: !1 })),
                jQuery(".collapsible.accordion").length > 0 && jQuery(".collapsible.accordion").collapsible(),
                jQuery(".collapsible.cmsAccordion").length > 0 && jQuery(".collapsible.cmsAccordion").collapsible());
        let c = document.querySelectorAll('a[href^="#"]');
        for (let d of c)
            d.addEventListener("click", (c) => {
                let a = d.getAttribute("href");
                if ("#" !== a) {
                    let b = document.querySelector(a);
                    b && (b.scrollIntoView({ behavior: "smooth", block: "start" }), history.pushState(null, null, a), c.preventDefault());
                }
            });
        jQuery("#goToTop").on("click", function (a) {
            console.log("clicked scroll to top");
            var b = jQuery(a.target);
            b.addClass("rotate"),
                setTimeout(function () {
                    b.removeClass("rotate");
                }, 1e3);
        }),
            jQuery("body").on("click", ".ebyChatLink", function (a) {
                window.GorgiasChat && window.GorgiasChat.open();
            }),
            "/pages/faq" === window.location.pathname && document.referrer.indexOf("/products/") >= 0
                ? (jQuery("html, body").animate({ scrollTop: 450 }, "slow"),
                  jQuery(".ebyReturnsFaqWrapper h3").trigger("click"),
                  setTimeout(function () {
                      jQuery(".ebyReturnsFaqWrapper .autoOpen h3").trigger("click");
                  }, 100))
                : "/pages/faq" === window.location.pathname && "#contact-us" === window.location.hash && jQuery(".ebyContactFaqWrapper h3").trigger("click"),
            jQuery("body").on("click", "#makeMyCustomBoxBtn", function () {
                var a = window.location.pathname.indexOf("/products") >= 0 ? "pdp" : "other";
                gtag("event", "makeMyCustomBoxClick", { event_category: "startingPoint-" + window.location.pathname, event_label: "lastViewing-" + a, event_value: "" });
            }),
            jQuery("body").on("click", "button[data-btnpath='sub_init-main']", function () {
                var a = window.location.pathname;
                gtag("event", "clicked_to_start_sub_path", { event_category: "startingPoint-" + a, event_label: "wayfinding_click_event", event_value: "" });
            }),
            jQuery("body").on("click", "button[data-btnpath='ecomm_init-main']", function () {
                var a = window.location.pathname;
                gtag("event", "clicked_to_start_ecomm_path", { event_category: "startingPoint-" + a, event_label: "wayfinding_click_event", event_value: "" });
            }),
            $("body").on("ajaxCart.afterCartLoad", function (b, a) {
                "drawer" == window.ajaxcart_type &&
                    (console.log(":: cmd :: open cart", a),
                    jQuery(".cartIconWrapper").addClass("animate__bounce"),
                    setTimeout(function () {
                        jQuery(".cartIconWrapper").removeClass("animate__bounce");
                    }, 300));

                    // how many parent products; loop over all products and check properties for keys; tally up
                    let cartItemCount = 0;
                    let finalCartCount = a.items.length;
                    a.items.map(function (cartItem, index) {
                        if (Object.keys(cartItem.properties).length > 0) {
                            for (let i = 0; i < Object.keys(cartItem.properties).length; i++) {
                              if (Object.keys(cartItem.properties)[i] === 'included_in_custombox' || Object.keys(cartItem.properties)[i] === 'hidden_collateral' || Object.keys(cartItem.properties)[i] === 'included_in_pack' || Object.keys(cartItem.properties)[i] === 'included_in_membershipbox'){
                                cartItemCount = cartItemCount + 1;
                                return;
                              }
                            }
                        }
                    });
                    $('#CartCount').text(finalCartCount - cartItemCount);
                    $('#CartCountMobile').text(finalCartCount - cartItemCount);
            }),
            $("#collections .velaSwatchProduct li").click(function () {
                if (($("#collections .velaSwatchProduct li").css({ background: "transparent" }), $("#collections .velaSwatchProduct li").removeClass("active"), -1 == (color = $(this).children("label").css("background-color")).indexOf("a")))
                    var a = color.replace(")", ", 0.5)").replace("rgb", "rgba");
                $(this).addClass("active"), $(this).css({ background: a });
            }),
            $(".template-product .proBoxInfo .swatch-element").click(function () {
                $(".template-product .proBoxInfo .swatch-element label").parent().css({ background: "transparent" }), $(".template-product .proBoxInfo .swatch-element label").removeClass("active");
                var a = "rgba(128, 128, 128, 0.5)";
                if (-1 == (color = $(this).children("label").css("background-color")).indexOf("a")) var a = color.replace(")", ", 0.5)").replace("rgb", "rgba");
                $(this).addClass("active"), $(this).css({ background: a });
            }),
            jQuery().owlCarousel && jQuery(".proList .owl-carousel").owlCarousel({ margin: 0, responsiveClass: !0, responsive: { 0: { items: 1, nav: !0 }, 600: { items: 2, nav: !1 }, 1e3: { items: 3, nav: !0, loop: !1 } } }),
            $(".modelSizeSelection a").on("click", function () {
                $(".modelSizeSelection a").removeClass("active"), $(this).addClass("active"), "large" == $(this).data("size") ? console.log("change to lview") : console.log("change to sview");
            }),
            window.location.href.indexOf("reviews") >= 0 &&
                setTimeout(function () {
                    $("body").on("click", "a.stamped-review-title.stamped-style-color-link", function (a) {
                        console.log("stamped link click"), a.preventDefault();
                    });
                }, 1e3);
    }),
    $(document).ready(function () {
        $(".btnAddToCart").on("click", function (e) {
            // fc 040523
            const isSelectedSize = selectSizeCheck();
            if(isSelectedSize){
                M.toast({html: 'Please Choose Your Size', classes: 'ebyAtcAlert didntsize error', displayLength: 1250});
                e.preventDefault();
                e.stopImmediatePropagation();
                e.stopPropagation();
            
                return false;
            }
        }),
            jQuery("body").on("click", ".r-btn", function (a) {
                a.preventDefault(),
                    (a.target.disabled = !0),
                    jQuery.getJSON("/cart.js", function (b, c) {
                        jQuery.ajax({
                            type: "POST",
                            crossDomain: !0,
                            url: window.APIDomain + window.otherAPI + "index.php",
                            data: { data: b },
                            dataType: "json",
                            success: function (g) {
                                var b,
                                    e,
                                    c,
                                    f,
                                    d = "https://checkout.rechargeapps.com/r/checkout/" + g.checkout.token;
                                //console.log(':go to rcheckout:', d);
                                
                        		var currentUtms = window.getAttributes();
                                if (!!currentUtms.attributes) {
                                   d += "?" + Object.keys(currentUtms.attributes).map(function(key, index){return key + "=" + currentUtms.attributes[key]}).join('&'); 
                                }
                                
                                (d = ((b = d), (c = (e = $(".subscription-offer")).data("enabled")), (f = e.data("coupon")), void 0 === c || void 0 === f || !0 !== c ? b : `${b}`)), (location.href = d), (a.target.disabled = !1);
                            },
                        });
                    });
            }),
            $("body").on("click", ".acc_title", function () {
                $(this).parent().hasClass("active")
                    ? ($(this).parent().removeClass("active"), $(this).find(".ebyicon-close-thin:before").css("content", "e836"), $(this).parent().find(".acc_content").slideUp(300))
                    : ($(this).parent().addClass("active"), $(this).find(".ebyicon-close-thin:before").css("content", ""), $(this).parent().find(".acc_content").slideDown(300));
            }),
            $("body").on("click", ".motivator-bar__wrapper__fixedLink", function (a) {
                let c = a.target.getAttribute("data-ribbon-mode"),
                    b = "dest-" + a.target.getAttribute("data-ribbon-url");
                gtag("event", b, { event_category: "clicks_of_interest", event_label: "clicked-" + c, event_value: "" }),
                    gtag("event", "select_promotion__ribbon", { creative_name: "header_ribbon", promotion_name: a.target.innerText, url_sent_to: b }),
                    console.log(":: ClcEv ::", { ribbonMode: c, ribbonUrl: b });
            }),
            $("body").on("click", ".atcNoteAvatar", function (a) {
                jQuery(".eby-header").removeClass("ehHide ehHidden"), vela.RightDrawer.open();
                $('body').css('overflowY', 'hidden');
            }),
            $("body").on("click", ".btn.loopBtnFinish", function (a) {
                gtag("event", "tutorial_complete__return_exchange");
            }),
            $("body").on("click", ".item.epcWrapper a, .carousel-item.ept a", function (c) {
                let a = jQuery(c.target).closest(".epcWrapper"),
                    b = jQuery(a).closest(".velaCollections");
                gtag("event", "select_item", {
                    currency: "USD",
                    page_location: window.location.pathname, 
                    page_title: document.title,
                    event_category: a[0].getAttribute("data-prodtitle"),
                    item_list_id: b.data("coll_handle"),
                    item_list_name: b.data("coll_title"),
                    items: [
                        {
                            item_id: a[0].getAttribute("data-prodsku"),
                            item_name: a[0].getAttribute("data-prodtitle"),
                            item_category: a[0].getAttribute("data-prodtype"),
                            price: parseInt(Shopify.formatMoney(a[0].getAttribute("data-prodprice")).replace("$", "")),
                            quantity: 1,
                            affiliation: "EBY",
                            index: 0
                        },
                    ],
                });
            }),
            jQuery('body').on('click', 'header.eby-header a', function (ev) {
                console.log(": init cce :", ev.target);
                let dataUrl = ev.target.href,
                    dataTitle = ev.target.innerText,
                    dataLinkElem = jQuery(ev.target);
                let isMobileNav = dataLinkElem.hasClass('m_link') || dataLinkElem.hasClass('m_s_link');
                let isDeskNav = dataLinkElem.hasClass('d_link') || dataLinkElem.hasClass('d_s_link');
                let isSubNav = dataLinkElem.hasClass('ms_link');
              
                if (!!isMobileNav) {
                    gtag('event', 'primary_wf:mob_navigation_click', {
                      'event_category': 'primary_wf_link_title:' + dataTitle,
                      'event_label': 'primary_wayfinding:' + dataUrl,
                      'event_value': ''
                    });
                } else if (!!isDeskNav) {
                    gtag('event', 'primary_wf:desk_navigation_click', {
                      'event_category': 'primary_wf_link_title:' + dataTitle,
                      'event_label': 'primary_wayfinding:' + dataUrl,
                      'event_value': ''
                    });
                } else if (!!isSubNav) {
                    gtag('event', 'primary_wf:sub_navigation_click', {
                      'event_category': 'primary_wf_link_title:' + dataTitle,
                      'event_label': 'primary_wayfinding:' + dataUrl,
                      'event_value': ''
                    });
                } else {
                    gtag('event', 'primary_wf:misc_navigation_click', {
                      'event_category': 'primary_wf_link_title:' + dataTitle,
                      'event_label': 'primary_wayfinding:' + dataUrl,
                      'event_value': ''
                    });
                }
            }),
            $("body").on("submit", "#join-the-movement", function (a) {
                a.preventDefault(), console.log(":: form submit attempt ::", a.target), a.target;
                var b = { email: jQuery("#k_jtm_id_email").val(), creative_id: "footer_signup" };
                geq.suppress();
                jQuery.ajax({
                    type: "POST",
                    crossDomain: !0,
                    url: window.APIDomain + window.otherAPI + "newsletter-signup.php",
                    data: { data: b },
                    dataType: "json",
                    success: function (a) {
                        console.log("::eby signup success::", a),
                            a && console.log("check data", a),
                            jQuery("#k_jtm_id_email").val(""),
                            gtag("event", "sign_up__attentive_footer_form", { copy_context: jQuery("#join-the-movement .helper-text").text() }),
                            M.toast({ html: '<span class="atcNoteAvatar"><header><p class="bold">SIGNED UP</p><p>Woot! Look our for our emails moving forward.</p></header></span>', classes: "ebyAtcAlert newsletterSignupMsg success" });
                    },
                    error: function (a, b) {
                        console.log("::eby signup failure::", { text: b, xhr: a }),
                            jQuery("#k_jtm_id_email").val(""),
                            a.responseText.indexOf("has already been taken") > 0 &&
                                M.toast({ html: '<span class="atcNoteAvatar"><header><p class="bold">OOPS!</p><p>Something went wrong. Please try again.</p></header></span>', classes: "ebyAtcAlert newsletterSignupMsg error" });
                    },
                });
            }),
            jQuery(".pcsWrapper").each(function (c, a) {
                var b = $("." + a.className.split(" ")[a.classList.length - 1]).find("a"),
                    d = !1;
                (a.scrollTop = 0), (a.scrollLeft = 0);
                let e = { top: 0, left: 0, x: 0, y: 0 };
                var f = function (b) {
                        let c = b.clientX - e.x,
                            f = b.clientY - e.y;
                        0 !== c && (d = !0), (a.scrollTop = e.top - f), (a.scrollLeft = e.left - c);
                    },
                    g = function (b) {
                        a.removeEventListener("mousemove", f), a.removeEventListener("mouseup", g), (a.style.cursor = "grab"), a.style.removeProperty("user-select"), b.clientX - e.x == 0 && (d = !1);
                    };
                a.addEventListener("mousedown", function (b) {
                    (a.style.cursor = "grabbing"), (a.style.userSelect = "none"), (e = { left: a.scrollLeft, top: a.scrollTop, x: b.clientX, y: b.clientY }), a.addEventListener("mousemove", f), a.addEventListener("mouseup", g);
                }),
                    b.each(function (b, a) {
                        a.addEventListener("click", function (a) {
                            !0 === d && a.preventDefault();
                        });
                    });
            }),
            setInterval(function () {
                jQuery(".motivator-bar.ribbonOne").toggleClass("active"), jQuery(".motivator-bar.ribbonTwo").toggleClass("active");
            }, 5e3);
    });

vela.initTbopProductQty = function (elemSelector) {
    console.log(': pull choice stock units init :');

    // loop through the products allocated for this and get stock
    Promise.all([ebyStockCheckApiForUse(6785792376876, "ecomm"), ebyStockCheckApiForUse(6773506277420, "ecomm"), ebyStockCheckApiForUse(5327776809004, "ecomm")])
    .then(responses => {
      console.log(':: all requests are complete ::', responses);

      //cache the inven data on all products
      // reduce down to one size model
      var freepantyObj = {
        "xs" : null,
        "sm" : null,
        "md" : null,
        "lg" : null,
        "xl" : null,
        "2x" : null,
        "3x" : null,
        "4x" : null
      };
      var prdIvenData = responses.map((prodIvenData, index)=>{return prodIvenData.prodInventoryData}).reduce(function(acc, prdObj) { prdObj.map(function(inven, index) { acc.push(inven) }); return acc;}, []);

      prdIvenData.map(function (prdIventoryItem, index) {
        if (!freepantyObj[prdIventoryItem.variantValue]) {
          if (prdIventoryItem.avail_qty_left >= 3) {
            freepantyObj[prdIventoryItem.variantValue] = prdIventoryItem.variantId;
          }
        }
      });

      console.log(": freepanty allocations rdy:", freepantyObj);

      jQuery('#nudge-bogo_popup-tbop input').each(function (index, elem) {
        elem.setAttribute("data-freepanty-id", freepantyObj[elem.getAttribute('value')]);
      });
      
    });
    
};
vela.productPage = function (options) {
    var moneyFormat = options.money_format,
        variant = options.variant,
        selector = options.selector;
    var $addToCart = $('#AddToCart'),
        $productPrice = $('#ProductPrice'),
        $comparePrice = $('#ComparePrice'),
        $quantityElements = $('.qtySelector, .qtySelector + .velaQty'),
        $addToCartText = $('#AddToCartText');

  	// stock check on all swatch options avaibable
  	var variantProducts = options.selector.product.variants;
    console.log(': func vela.productPage :', options);

    if (variant) {
        console.log(variant);
        var stock;
        // fc 041123
        const bundleId23 = $("#eby-bundle-bras23").attr('data-bundlepdp');
        var variantInfo = window.productInfo;
       if(window.productInfo != undefined){
            stock = variantInfo[variant.id].locations[0].stock;
        }
        console.log(":: stock qty I ::", {
        stock:stock,
        variant: variant
        });
        const productVariantId = options.selector.product;

        if(typeof bundleId23 === 'string'){
            // variant selected by user
            const bndlSelectedSize = document.getElementById("productSelect").selectedOptions[0].innerText;
            const variantsSend = bndlSizeObj(bundleId23); 
        } else {
            ebyStockCheck(options.selector.product);
        }
        // fc 041123
        function bndlSizeObj(data){
            let newVariants = new Map();
            const tempData = data.split(':');
            const mainPdpId = document.getElementById('eby-bundle-bras23').dataset.mainvr;

            tempData.forEach((el) => {
                const [size, varId] = el.split('_');
                newVariants.set(size, varId);
            });
            if(mainPdpId.indexOf('::') === -1){
                disableVariantSoldout(mainPdpId);
            } else {
                const twoBralette = mainPdpId.split('::');
                twoBralette.forEach( (pdpId, i) => disableVariantSoldout(pdpId, i) );
            }
        }
        // disable variant size swatch if soldout 
        async function disableVariantSoldout(pdpId, i){
            const returnStockCheck = await ebyStockCheckApiForUse(pdpId, 'ecomm');

            returnStockCheck.prodInventoryData.forEach((newVariant) => {
                // loop and grab the size xs and use it to find the id
                if(newVariant.avail_qty_left <= 5){
                    const keyVariant = newVariant.variantValue;
                    // add solout and remove available if element has it
                    soldoutDisable(keyVariant, i)
                }
            });
        }
        function soldoutDisable(key, i){
            const bundleId = document.getElementById("eby-bundle-bras23");
            const typePdp = bundleId.dataset.typepdp;

            if(typePdp === "set"){
                soldoutSets(key, i);
            } else {
                soldoutNormalPdp(key);
            }
        }
        function soldoutSets(key, i){
            const foundSoldout = document.querySelector(`#setVariant23-${i} .variant-sets-${key}`);
            if(foundSoldout instanceof HTMLElement){
                foundSoldout.disabled = true;
            } else {
                console.error(`Couldn't find key of => #setVariant23-${i} .variant-sets-${key}`);
            }
        }
        function soldoutNormalPdp(key){
            const foundSoldout = document.querySelector(`.js-swatch .swatch-element.${key}`);
            foundSoldout.classList.remove('available');
            foundSoldout.classList.add('soldout');
        }
        
        // end of bundle check fc 041123
      if ((variant.available && stock === undefined) || (variant.available && stock > 1)) {
          if (!!document.querySelector('#purchase_type_autodeliver_subs')) {
            if (!document.querySelector('#purchase_type_autodeliver_subs').checked) {
            	document.querySelector(".payment_terms").classList.add("show-shoppay");
            }
          }

          var variantTitle = variant.public_title;
          var grp = '';
          var smallGrp = ['xs','sm','md','lg','xl'];
      	  var isBralette = variantTitle.indexOf('Bralette') >= 0 || variantTitle.indexOf('Bra') >= 0;

          if(variantTitle.includes('/')){
            var sizes = variantTitle.split(' / ');
            var small = 0;
            var large = 0;
            $(sizes).each(function(k,v){
              if(smallGrp.includes(v)){
                small = small+1;
              }else{
                large = large+1;
              }
            });
            if(small == 2){grp = 'small';}
            if(large == 2){grp = 'large';}
          }else{
            if(smallGrp.includes(variantTitle)){
              grp = 'small';
            }else{
              grp = 'large';
            }
          }

        if(grp != ''){
            $('.modelSizeSelection .size-btn').removeClass('active');
            if(grp == 'small'){
                $('.tpo_slider').addClass('hide');
                $('#currentSizeSelection').html("Model wearing size small");
                $('.modelSizeSelection #smallSizeSelection').addClass('active');
                $('.tpo_slider[data-slidefor=small]').removeClass('hide');
                $('.tpo_slider[data-slidefor=small]').trigger('refresh.owl.carousel');
            }else{
                if (isBralette) {
                  	$('#currentSizeSelection').html("Model wearing size large-plus");
                } else {
                  	$('#currentSizeSelection').html("Model wearing size 1X");
                }
                $('.tpo_slider').addClass('hide');
                $('.modelSizeSelection #largeSizeSelection').addClass('active');
                $('.tpo_slider[data-slidefor=large]').removeClass('hide');
                $('.tpo_slider[data-slidefor=large]').trigger('refresh.owl.carousel');
            }
        }else{
            $('.tpo_slider').addClass('hide');
            $('.modelSizeSelection #smallSizeSelection').addClass('active');
            $('.tpo_slider[data-slidefor=small]').removeClass('hide');
            $('.tpo_slider[data-slidefor=small]').trigger('refresh.owl.carousel');
        }

        $('#smallSizeSelection').click(() => {
            $('.tpo_slider').addClass('hide');
            $('.modelSizeSelection #smallSizeSelection').addClass('active hide');
            $('.modelSizeSelection #largeSizeSelection').removeClass('hide');
            $('.tpo_slider[data-slidefor=small]').removeClass('hide');
            $('.tpo_slider[data-slidefor=large]').addClass('hide');
            $('.tpo_slider[data-slidefor=small]').trigger('refresh.owl.carousel');
        });
        $('#largeSizeSelection').click(() => {
            $('.tpo_slider').addClass('hide');
      		if (isBralette) {
      			$('#currentSizeSelection').html("Model wearing size large-plus");
            } else {
            	$('#currentSizeSelection').html("Model wearing size 1X");
            }
            $('.modelSizeSelection #largeSizeSelection').addClass('hide active');
            $('.modelSizeSelection #smallSizeSelection').removeClass('hide');
            $('.tpo_slider[data-slidefor=large]').removeClass('hide');
            $('.tpo_slider[data-slidefor=small]').addClass('hide');
            $('.tpo_slider[data-slidefor=large]').trigger('refresh.owl.carousel');
        });

        if($('.AddBundleProduct').length > 0){
          //console.log(window.packProductIds);
          window.subProductDetails;
          var isAvailable = true;
          var stocks = [];
          var subProductsIDs = [];
          var subProducts = [];
          if (variant.name.indexOf('Mystery') >= 0) {
            
            console.log(':: heyyy its a mystery pack ::', {
              variant: variant,
              subProdDetails: window.subProductDetails
            });
            var packIdsToCheck = jQuery('#mystery-pack-ids').val().slice(1).split(',');
            window.packIdsToAddIfAvail = [];
            packIdsToCheck.map(function (pid, index) {
                tomitProductInventoryInfo.getProductsInventoryInformation([pid]).then(function(e){
                  //console.log(':mPID checked:', e);

                  let sizeVariantIdOfProdRequested = Object.keys(e[pid].product.variants).filter(function (id, index) { 
                    //console.log('ola!', id);
                    return e[pid].product.variants[id].title == options.variant.title; 
                  })[0];
                  
                  var s = e[pid].product.variants[sizeVariantIdOfProdRequested].inventoryItem.locations[0].available;
                  stocks.push(s);
                  //console.log('::mPID stock check final::', s);
                  if(s <= 1){
                    isAvailableAllOption = false;
                  } else {
                    window.packIdsToAddIfAvail.push(sizeVariantIdOfProdRequested);
                  }
                });
            });
            
          } else {
            $('.bundle-products .single-product').each(function(key,value){
              var val = $(value).find('select option').filter(function () { return $(this).html() == variant.public_title; }).val();
              var p = $(value).data('product');
              subProductsIDs.push(p);
              subProducts[p] = val;
              //console.log(val);

              var isAvailableAllOption = true;
              if(window.packProductIds != undefined){
                tomitProductInventoryInfo.getProductsInventoryInformation([p]).then(function(e){
                  console.log(e);
                  var s = e[p].product.variants[val].inventoryItem.locations[0].available;
                  stocks.push(s);
                  console.log('::stock check final::', s);
                  if(s <= 1){
                    isAvailableAllOption = false;
                  }
                });
              }
              //console.log(isAvailableAllOption);
              if(val == undefined || isAvailableAllOption == false){
                isAvailable = false;
              }else{
                $(value).find('select').val(val).change();
              }
            });
          }
            

          	//console.log(subProductsIDs);
          //console.log(subProducts);
          //console.log(window.subProductDetails);
          if(window.subProductDetails == undefined){
            //console.log('hasStock');
            console.log(':: stock checking IV, variable subProductsIDs.join(,) ::', subProductsIDs.join(','));
            $.ajax({
              url:'https://api.shopify-inventory.jtcinteractive.com/shop/eby-by-sofia-vergara.myshopify.com/multi_variant_locations/'+subProductsIDs.join(','),
              type:'get',
              async:false,
              success:function (data) {
                //console.log(data);
                window.subProductDetails = data;
                $(subProductsIDs).each(function(k,v){
                  var variantID = subProducts[v];

                  if (!!variantID) {
                  	var subProductStock = data[v].product.variants[variantID].inventoryItem.locations[0].available;
                    //console.log(v +" == "+subProductStock);
                    stocks[variantID] = subProductStock;
                    if(subProductStock > 1){

                    }else{
                      isAvailable = false;
                    }
                  } else {
                  	// if any one of the products is not available
                    isAvailable = false;
                  }

                });
              }
            });
          }else{
            var data = window.subProductDetails;
            $(subProductsIDs).each(function(k,v){
              var variantID = subProducts[v];

              if (!!variantID) {
              	var subProductStock = data[v].product.variants[variantID].inventoryItem.locations[0].available;
                //console.log(v +" == "+subProductStock);
                stocks[variantID] = subProductStock;
                if(subProductStock > 0){
                  //stocks.push(subProductStock);
                }else{
                  //isAvailable = false;
                }
              } else {
              	//isAvailable = false;
              }

            });
          }


          //console.log(isAvailable);
          //console.log(stocks);
          if(isAvailable == false || +stock <= 1){
            console.log('new', {
              isAvailable: isAvailable,
              ids: $(subProductsIDs)
            });
            $addToCart.addClass('disabled').prop('disabled', true);
            $addToCartText.html("Sold Out");
            $quantityElements.hide();
          }else{
            console.log('asd', {
              isAvailable: isAvailable,
              ids: $(subProductsIDs)
            });
            $addToCart.removeClass('disabled').prop('disabled', false);
            $addToCartText.html("Add to Cart");
            $quantityElements.show();
          }
        }else{

          let coreColors = ("black,castor grey,grey,puritan grey,castle wall,brush,nude,fallen rock,sunkissed,umber,port,espresso,mauvewood,fuchsia festival,poppy red,hyper pink,strawberry ice,coral pink,roseata fleur,rose clay,rose dust,keepsake lilac,laurel green,sulfur spring,lime punch,cactus,beveled glass,blue topaz,caribbean sea,fjord blue,ocean depths,provincial blue,blue iris,blue opal,cadet,raindrop,white").split(',');
          let haveCore = false,
              haveLimited = false;

          console.log(':: core colors ::', coreColors);

          if(stock != undefined){
            if(stock <= 5){

              if($addToCartText.attr('data-need-color') == undefined || $addToCartText.attr('data-need-color') != 'true') {
                $addToCart.addClass('disabled').prop('disabled', true);
                $addToCartText.html("Sold Out");
              } else {
                $addToCartText.attr('data-text','Sold Out');

              }
              $quantityElements.hide();

              if ($('.swatch-variant-name').length > 0) {
                var oosText = $('.swatch-variant-name').html().replace(' - only a few left','');
                 // fc 030823 what is this 
                if (typeof jQuery('.swatch-view-item.swatch-active').getAttribute('orig-value') === 'function'){

                    if (coreColors.indexOf(jQuery('.swatch-view-item.swatch-active').getAttribute('orig-value').toLowerCase()) >= 0) {
                        $('.radioTypeColors-tab[for="colorCore"] .swatch-variant-name').html(oosText);
                    } else {
                        $('.radioTypeColors-tab[for="colorLimited"] .swatch-variant-name').html(oosText);
                    }
                }
              }

            }else{

              console.log("::stock checked::", options);
              // FC 021623 is this needed 
              if($addToCartText.attr('data-need-color') == undefined || $addToCartText.attr('data-need-color') != 'true') {
                $addToCart.removeClass('disabled').prop('disabled', false);

                if (options.selector.product.type === "Core Underwear") {
                  $addToCartText.html("Add to Cart");
                } else {
                  $addToCartText.html("Add to Cart");
                }
              } else {
                if (options.selector.product.type === "Core Underwear") {
                  $addToCartText.attr('data-text','Add to Cart');
                } else {
                  $addToCartText.attr('data-text','Add to Cart');
                }
              }
              if ($('.swatch-variant-name').length > 0 && $('.swatch-variant-name').html().indexOf(' - only a few left') < 0) {
                console.log(':swatchCheck:');
                var oosText = $('.swatch-variant-name').html();
                //$('.swatch-variant-name').html(oosText);
              }
              $quantityElements.show();
            }
          }
        }

  		$('.back_in_stock').removeClass('false');
      } else {

        if (!!document.querySelector(".payment_terms")) {
        	document.querySelector(".payment_terms").classList.remove("show-shoppay");
        }

        var variantTitle = variant.public_title;
        var grp = '';
        var smallGrp = ['xs','sm','md','lg','xl'];
        var isBralette = variantTitle.indexOf('Bralette') >= 0 || variantTitle.indexOf('Bra') >= 0;

        if(variantTitle.includes('/')){
          var sizes = variantTitle.split(' / ');
          var small = 0;
          var large = 0;
          $(sizes).each(function(k,v){
            if(smallGrp.includes(v)){
              small = small+1;
            }else{
              large = large+1;
            }
          });
          if(small == 2){grp = 'small';}
          if(large == 2){grp = 'large';}
        }else{
          if(smallGrp.includes(variantTitle)){
            grp = 'small';
          }else{
            grp = 'large';
          }
        }

        if(grp != ''){
            $('.modelSizeSelection .size-btn').removeClass('active');
            if(grp == 'small'){
                $('.tpo_slider').addClass('hide');
                $('#currentSizeSelection').html("Model wearing size small");
                $('.modelSizeSelection #smallSizeSelection').addClass('active');
                $('.tpo_slider[data-slidefor=small]').removeClass('hide');
                $('.tpo_slider[data-slidefor=small]').trigger('refresh.owl.carousel');
            }else{
                if (isBralette) {
                  	$('#currentSizeSelection').html("Model wearing size large-plus");
                } else {
                  	$('#currentSizeSelection').html("Model wearing size 1X");
                }
                $('.tpo_slider').addClass('hide');
                $('.modelSizeSelection #largeSizeSelection').addClass('active');
                $('.tpo_slider[data-slidefor=large]').removeClass('hide');
                $('.tpo_slider[data-slidefor=large]').trigger('refresh.owl.carousel');
            }
        }else{
            $('.tpo_slider').addClass('hide');
            $('.modelSizeSelection #smallSizeSelection').addClass('active');
            $('.tpo_slider[data-slidefor=small]').removeClass('hide');
            $('.tpo_slider[data-slidefor=small]').trigger('refresh.owl.carousel');
        }

        $('#smallSizeSelection').click(() => {
            $('.tpo_slider').addClass('hide');
            $('.modelSizeSelection #smallSizeSelection').addClass('active hide');
            $('.modelSizeSelection #largeSizeSelection').removeClass('hide');
            $('.tpo_slider[data-slidefor=small]').removeClass('hide');
            $('.tpo_slider[data-slidefor=large]').addClass('hide');
            $('.tpo_slider[data-slidefor=small]').trigger('refresh.owl.carousel');
        });
        $('#largeSizeSelection').click(() => {
            $('.tpo_slider').addClass('hide');
      		if (isBralette) {
      			$('#currentSizeSelection').html("Model wearing size large-plus");
            } else {
            	$('#currentSizeSelection').html("Model wearing size 1X");
            }
            $('.modelSizeSelection #largeSizeSelection').addClass('hide active');
            $('.modelSizeSelection #smallSizeSelection').removeClass('hide');
            $('.tpo_slider[data-slidefor=large]').removeClass('hide');
            $('.tpo_slider[data-slidefor=small]').addClass('hide');
            $('.tpo_slider[data-slidefor=large]').trigger('refresh.owl.carousel');
        });

        $addToCart.addClass('disabled').prop('disabled', true);
        $addToCartText.html("Sold Out");
        $quantityElements.hide();
		$('.back_in_stock').addClass('false');
		//$('#klaviyo-bis-iframe').contents().find('#klaviyo-bis-modal #variants option').innerText = variant.id;
		//$('#klaviyo-bis-iframe').contents().find('#klaviyo-bis-modal #variants option').value = variant.title;

      }
      var sizeSelectedForShipNotice = options.variant.title;
      if (jQuery('#sizesToPutOnNotice').val().split('|').indexOf(sizeSelectedForShipNotice) >= 0) {
        jQuery('#ship_notice').attr('data-status', 'active');
      } else {
        jQuery('#ship_notice').attr('data-status', 'inactive');
      }
      
      $productPrice.html( Shopify.formatMoney(variant.price, moneyFormat) );
      if (variant.compare_at_price > variant.price) {
        $comparePrice
        .html(Shopify.formatMoney(variant.compare_at_price, moneyFormat))
        .show();
      } else {
        $comparePrice.hide();
      }
      if (window.swatch_enable) {
        var form = $('#' + selector.domIdPrefix).closest('form');
        for (var i=0,length=variant.options.length; i<length; i++) {
          var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
          if (radioButton.length > 0) {
            // fc 030123
            //radioButton.get(0).checked = true;
            var headerValue = form.find('.swatch[data-option-index="' + i + '"] .js-swatch-display');
            headerValue.text(variant.options[i]);
          }
        }
      }
      $('.productSKU')
      .html('<label>' + "SKU" + ':</label> ' + variant.sku);
      if (variant.available) {
        $('.productAvailability').removeClass('outstock');
        $('.productAvailability').addClass('instock');
        $('.productAvailability')
        .html('<label>' + "Availability" + ':</label> ' + "In stock");
      } else{
        $('.productAvailability').removeClass('instock');
        $('.productAvailability').addClass('outstock');
        $('.productAvailability').html('<label>' + "Availability" + ':</label> ' + "Unavailable");
      }
      if (window.currencies) {
        Currency.convertAll(window.currency, $('.jsvela-currency__item.active').data('value'), 'span.money', 'money_format');
      }
    } else {
        //fc 021623 is this needed
        $addToCart.addClass('disabled').prop('disabled', true);
        $addToCartText.html("Unavailable");
        $quantityElements.hide();
    }
    if (variant && variant.featured_image) {
        var originalImage = $(".proFeaturedImage img");
        var newImage = variant.featured_image;
        var element = originalImage[0];
        Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
            $('#productThumbs img').each(function() {
                var parentThumbImg = $(this).parent();
                var idProductImage = $(this).parent().data("imageid");
                if (idProductImage == newImage.id) {
                    $(this).parent().trigger('click');
                    return false;
                }
            });
        });
    }

    // Color swatch hover effects
    $(document).ready(function () {
      $(".swatch-element-color").hover(function(){
        var title = $(this).attr("data-title");
        $(".swatch-variant-name-color").text(title);
      }, function() {
        $(".swatch-variant-name-color").text($(".swatch-variant-name-color").attr("data-init-text"));
      });
      $(".swatch-element-print").hover(function(){
        var title = $(this).attr("data-title");
        $(".swatch-variant-name-print").text(title);
      }, function() {
        $(".swatch-variant-name-print").text($(".swatch-variant-name-print").attr("data-init-text"));
      });
    });

    jQuery('body').on('click touchstart', '.swatch.size label', function (ev) {
        var sizeSelectedForShipNotice = ev.target.innerText.toLowerCase();
        //console.log(':log of size:', sizeSelectedForShipNotice);
        if (jQuery('#sizesToPutOnNotice').val().split('|').indexOf(sizeSelectedForShipNotice) >= 0) {
          jQuery('#ship_notice').attr('data-status', 'active');
        } else {
          jQuery('#ship_notice').attr('data-status', 'inactive');
        }
    });
  
	// ajax swatch click
    jQuery('body').off('click', '.swatch-element label').on('click', '.swatch-element label', function (ev) {
        ev.stopPropagation();
      	console.log(":: swatch fire ::", ev.target);

	    let colorNeeded = ev.target.getAttribute("for").length > 0 ? ev.target.getAttribute("for").split('-')[1] : false;
      	if (!colorNeeded) {
      		// no swatch found
          	console.log(':: swatch click event error ::', ev.target);
        } else {
            colorNeeded = colorNeeded.replace("_", " ");
        	let prodInColorReq = window.pdpRelProducts[colorNeeded];
          	console.log(':: swatch product requested ::', prodInColorReq);

            let isColor = ev.target.getAttribute('for').indexOf('swatch_c') >= 0;
            gtag("event", "swatch_click_cp", {
              event_category: isColor ? "swatch_color_clicked" : "swatch_print_clicked",
              event_label: isColor ? colorNeeded.toLowerCase() + ", color" : colorNeeded.toLowerCase() + ", print",
              event_value: parseFloat($("#productDataStore").attr("data-price")),
              page_location: window.location.pathname,
              page_title: document.title
            });

            var currentPrdObj = !!window.pdpRelProducts[colorNeeded.toLowerCase()] ? window.pdpRelProducts[colorNeeded.toLowerCase()].data : window.productObj;
            console.log(':  prerunning swatch stock check :', currentPrdObj);

            // replace all elements on page with current color requested
            var current = $(window);
            if (typeof prodInColorReq !== 'undefined') {
              $.ajax('/products/'+ prodInColorReq.handle,{
                type: 'GET',
                dataType: "html",
                success: function(response) {
                    // console.log(':: product html ::', response);
                    $(".proBoxPrimary").replaceWith($(response).find(".proBoxPrimary"));
                    $(".details-content-background").replaceWith($(response).find(".details-content-background"));
                    history.replaceState(null, "", prodInColorReq.handle);
                    // update page title
                    document.title = jQuery(response).filter('title')[0].innerText.trim();
                    // Color swatch hover effects
                    $(document).ready(function () {
                      var productId = parseInt($("#productDataStore").attr("data-product-id"));
                      console.log(':  running swatch stock check :', currentPrdObj);
                      ebyStockCheck(currentPrdObj);
                      StampedFn.loadBadges();
                      ebyLazyLoad();
                      runCarouselArrows();
                      vela.pdp_es = null;
                      vela.initDropdowns();
                      selectSizeCheck();
                      Rebuy.init();
                      Rebuy.widgets.shift();
                      if (document.querySelectorAll('.collapsible').length > 0) {
                          var elems = document.querySelectorAll('.collapsible');
                          M.Collapsible.init(elems);
                      }
                      $(".swatch-element-color").hover(function(){
                        var title = $(this).attr("data-title");
                        $(".swatch-variant-name-color").text(title);
                      }, function() {
                        $(".swatch-variant-name-color").text($(".swatch-variant-name-color").attr("data-init-text"));
                      });
                      $(".swatch-element-print").hover(function(){
                        var title = $(this).attr("data-title");
                        $(".swatch-variant-name-print").text(title);
                      }, function() {
                        $(".swatch-variant-name-print").text($(".swatch-variant-name-print").attr("data-init-text"));
                      });

                      let selectedSizeSwatch = jQuery('.swatch.size input:checked');
                      if (!!selectedSizeSwatch.closest('.swatch-element').hasClass('soldout')) {
                          // select the next one
                          jQuery('.swatch.size .swatch-element.available').first().find('input').trigger('click');
                      }
                      
                      var productPrice = parseInt($("#productDataStore").attr("data-price"));
                      var productType = $("#productDataStore").attr("data-type");
                      var productTitle = $("#productDataStore").attr("data-title");
                      var productSize = $("#productSelect").find('option:selected').text().split("-")[0];
                      var productVendor = $("#productDataStore").attr("data-vendor");
                      var cartValue = $("#productDataStore").attr("data-cart-value");
                      var product = {
                        'products': [{
                          'variantId': $('#productSelect').val(),
                          'id': productId,
                          'name': productTitle,
                          'price': productPrice,
                          'productType': productType
                          }]
                      };
                      window.dataLayer.push(product, {
                        'event': 'Product',
                        'pageType': 'Product',
                      });
                      if (typeof gtag !== "undefined") {
                        gtag("event", "view_item", {
                          currency: "USD",
                          value: productPrice,
                          page_location: window.location.pathname, 
                          page_title: document.title,
                          event_category: productTitle,
                          items: [{
                            item_id: productId,
                            item_name: productTitle,
                            affiliation: productVendor,
                            index: 0,
                            item_category: productType,
                            price: productPrice,
                            quantity: 1,
                            item_variant: productSize
                          }]
                        });
                        let liteItem = {
                            Name: productTitle,
                            ProductID: productId,
                            ImageURL: !!jQuery('.pdpImagePanel .active img')[0] ? jQuery('.pdpImagePanel .active img')[0].src : "",
                            URL: window.location.href,
                            Brand: productVendor,
                            Price: productPrice
                        };
                        geq.event('Viewed Product Reclaim', liteItem);
                      }
                      if (typeof ttq !== "undefined") {
                        ttq.instance('CBK4Q5RC77U0CJTABNJG').track('ViewContent', {
                          content_id: productId,
                          content_type: "product",
                          content_category: productType,
                          content_name: productTitle,
                          quantity: 1,
                          price: productPrice,
                          value: cartValue,
                          currency: 'USD'
                        });
                      }
                      if (typeof fbq !== "undefined") {
                        fbq('track', 'ViewContent', {
                          content_type: "product_group",
                          content_ids: [productId],
                          value: productPrice,
                          content_name: productTitle + " - " + productSize,
                          currency: "USD",
                          content_category: productType
                        })
                      }
                    });
                  
                    runCarouselArrows2()
                    if ($('#productSelect').val() === null) {
                      $('#AddToCart').addClass('disabled').prop('disabled', true);
                      $('#AddToCartText').html("Sold Out");
                    } else {
                      history.replaceState(null, "", `?variant=${$('#productSelect').val()}`);
                    };
                }
              });
            } else if ($(ev.target).attr("data-available") === "true") {
              // Size variant handler
              $('#productSelect').val($(ev.target).attr("data-id"));
              history.replaceState(null, "", `?variant=${$('#productSelect').val()}`);
              setTimeout(() => {
                  $('#AddToCart').removeClass('disabled').prop('disabled', false);
                  $('#AddToCartText').html("Add to Cart");
              },100)
            } else {
              history.replaceState(null, "", `?variant=${$('#productSelect').val()}`);
              setTimeout(() => {
                  $('#AddToCart').addClass('disabled').prop('disabled', true);
                  $('#AddToCartText').html("Sold Out");
              },200)
            }
        }

    });

    // subscription add to cart toggler
    jQuery('body').on('click touchend', '.addToCartToggleButton', function (e) {
        console.log(': click on toggler :', e.target);
        let toggleBtn = jQuery(e.target);
        // hide the rebuy bundle 
        const rebyBundle = document.querySelector('.rebuy-bundler-2023');
        const bndlPdps = document.querySelector('.temporary-total');
        if (!!toggleBtn.hasClass('active')) {
          // nothing
        } else {
          // toggle
          jQuery('.addToCartToggleButton').toggleClass('active');
          // is subscription active
          let isSubActive = toggleBtn.attr('data-addtocart-type') === 'subscribe';
          if (!!isSubActive) {
            // 'subscribe-mode' activate
            // hide onetime addToCartBtn
            // show sub addToCartBtn
            console.log(': activate sub addtocart mode :');
            jQuery('#addToCartPdpWrapper').toggleClass('onetime-active').toggleClass('subscribe-active');
            //jQuery('#AddToCartSubscribe').toggleClass('active');
            $(rebyBundle).removeClass('active');
            $(bndlPdps).removeClass('active');
            
            const rebuyWidgets = ["75385", "74714", "75387", "75389"];
            const widgetBundle = Rebuy.widgets.find(widget => rebuyWidgets.includes(widget.id))
            setTimeout(() => {
                deselectAddOns(widgetBundle);
            }, 0);
            console.log("finished deselecting");
          } else {
            // 'onetime-mode' activate
            // show onetime addToCartBtn
            // hide sub addToCartBtn
            console.log(': activate sub addtocart mode :');
            jQuery('#addToCartPdpWrapper').toggleClass('subscribe-active').toggleClass('onetime-active');
            //jQuery('#AddToCartSubscribe').toggleClass('active');
            $(rebyBundle).addClass('active')
            $(bndlPdps).addClass('active')
          }
        }
    });

};
function deselectAddOns(widget) {
    for (let i = 0; i < widget.data.products.length; i++) {
        if ((widget.data.products[i].selected = true)) {
            widget.data.products[i].selected = false;
        }
    }
    const r = new RebuyBundleTotal();   
    const s = new SubscriberPrice();

    const subPrice = document.getElementById("subs-mn-price-23 ");
    
    if(!subPrice){
      r.main();
    } else if(subPrice){
      s.main();
    } 
}

/*
    ****************************************************************
    ********************* Carousel Fc 091622 ***********************
    ****************************************************************
*/
class EbyAddEventMobile {
    constructor(){
      this.thumbNails = []
      this.counter = 0
      this.element = ''
      this.arrowLeft = ''
      this.arrowRight = ''
      this.lastMove = null
      this.firstMove = null
      this.touchState = 0
      this.x1 = 0
      this.x2 = 0
      this.y1 = 0
      this.y2 = 0
    }

    mobileTouch(dataId, thumbElements, element, index){
        this.element = element
        this.thumbNails = thumbElements
        
        if(element.className.includes('active')){
            this.counter = index
        }
      
        this.dataId = dataId

        if ('ontouchstart' in window) {
            element.addEventListener('touchstart', (event) => 
                this.triggerEvent(event, dataId, thumbElements, element, index), 'passive')   
        } else{
            element.addEventListener('click', (event) => 
                this.triggerEvent(event, dataId, thumbElements, element, index), 'passive')   
        }
    }
    mobileArrowTouch(el1, el2){
        this.arrowLeft = el1
        this.arrowRight = el2

        if ('ontouchstart' in window) {
            el1.addEventListener('touchstart', (event) => 
                this.triggerState(event,'left'), 'passive')

            el2 .addEventListener('touchstart', (event) => 
                this.triggerState(event, 'right'), 'passive')
        } else {
            el1.addEventListener('click', (event) => 
                this.triggerState(event,'left'), 'passive')

            el2 .addEventListener('click', (event) => 
                this.triggerState(event, 'right'), 'passive')
        }
    }
    triggerEvent(event, dataId, thumbElements, element, index){
        event.preventDefault()
        event.stopPropagation()
        const $pdpHero = document.getElementById('slider-' + dataId)
        const $removePrevious = document.querySelector('.pdp-image-pannel-wrapper.active')

        this.resetActive(thumbElements)
        // this.counter = index

        element.classList.add('active')
        $removePrevious.classList.remove("active");
        $pdpHero.classList.add("active");

        this.dataId = dataId 
        this.thumbNails = thumbElements

    }
    resetActive(thumbList){
        for(let i = 0; i < thumbList.length; i++){
            thumbList[i].classList.remove("active");
        }
    }
    triggerState(event, type, dataId){
        event.preventDefault()
        event.stopPropagation()
        this.carousel(type)
    }
    carousel(type){
      
        switch(type){
            // if is right then go up to the lenght and if > then back to 0
            case 'right':
                this.counter = this.counter === (this.thumbNails.length - 1)
                ? this.counter = 0 :  this.counter + 1
            
                const getImgId = this.thumbNails[this.counter].dataset.imageid
                this.main(getImgId)
            
                break
            case 'left':
                // if is left then go down if is < 0 then go to length -1 
                this.counter = this.counter === 0 ? this.thumbNails.length - 1 : this.counter - 1

                const getImgId2 = this.thumbNails[this.counter].dataset.imageid
                this.main(getImgId2)

                break
            default: 
              throw new Error('Neither left or Right in __Hero Arrows__')
        }
    }

    main(dataId){
        const $pdpHero = document.getElementById('slider-' + dataId)
        const $removePrevious = document.querySelector('.pdp-image-pannel-wrapper.active')

        this.resetActive(this.thumbNails)

        $removePrevious.classList.remove("active");
        $pdpHero.classList.add("active");

        this.thumbNails[this.counter].classList.add('active')
    }

    // add scrolling
    mobileScroll(element){
        element.addEventListener('touchstart', (event) => this.triggerStart(event))
        element.addEventListener('touchend', (event) => this.triggerEnd(event))
    }
    // read the start of the mouse .touches[0].pageX
    triggerStart(event){
        event.preventDefault()
        this.firstMove = event.touches[0].pageX

        this.x1 = this.firstMove
        this.y1 = event.touches[0].pageY
        
        console.log('x1 y1 ', this.x1, this.y1)
        this.touchState = true
    }
    // read the start of the mouse
    triggerEnd(event){
        this.lastMove = event.changedTouches[0].pageX

        this.x2 = this.lastMove
        this.y2 = event.changedTouches[0].pageY
        
        console.log('x2 y2 ', this.x2, this.y2)
        
        const thetaY = this.y2 - this.y1
        
        const thetaX = this.x2 - this.x1

        const angle = Math.atan2(thetaY, thetaX ) * (180 / Math.PI)
        console.log('math',  angle, thetaY)

        this.scrollingY(angle, this.y1)
        
        this.touchState = false
    }
    //direction
    checkDirection(type){
        this.carousel(type)
    }
    scrollingY(theta, y){
        const goUp = (theta > 50 ) && (theta < 120) 
        const goDown = (theta > -130) && (theta < -40)

      

        if(goUp){
             window.scroll({
                 top: 100,
                 left: 0,
                 behavior: 'smooth'
             })
        } 
        if(goDown){
            const newY = y  > 300 ? y - 100 : y - 20

            window.scroll({
                top: newY,
                left: 0,
                // behavior: 'smooth'
            })
        } 
        if(!goDown && !goUp){ 
            // check that firstmove is a number and the state has changed
            if(typeof this.firstMove == 'number' && this.touchState){
                // if 1st move is bigger then last return true  
                const sendLeft = this.lastMove > this.firstMove
                const sendRight = this.lastMove < this.firstMove
                
                if(sendLeft){
                    this.checkDirection('left')
                } 
                if(sendRight){
                    this.checkDirection('right')
                }
            }
        }
        
    }
}


function runCarouselArrows(){
    const $pdpThumbnail2022 = document.querySelectorAll('.slide.pdpImagePanneleby')
    const $arrowLeft = document.getElementById('eby-left-2022')
    const $arrowRight = document.getElementById('eby-right-2022')

    $pdpThumbnail2022[0].classList.add('active')
  
    const ebyCarouselArrows = new EbyAddEventMobile()  

    for(let i = 0; i < $pdpThumbnail2022.length; i++){
        const datasetId = $pdpThumbnail2022[i].dataset.imageid
        ebyCarouselArrows.mobileTouch(datasetId, $pdpThumbnail2022, $pdpThumbnail2022[i], i)
    }

    ebyCarouselArrows.mobileArrowTouch($arrowLeft, $arrowRight,$pdpThumbnail2022) 

    // scrolling 
    const $currentHero = document.querySelector('.pdpImagePanel-Slider-2022')
    
    // ebyCarouselArrows.mobileScroll($currentHero)
        
};

if( document.getElementById('eby-left-2022') !== null ){
  
/*
    ****************************************************************
    ********************* Carousel 2 Fc 091622 *********************
    ****************************************************************
*/

class EbyAddEventMobileReload {
    constructor(){
      this.thumbNails = []
      this.counter = 0
      this.element = ''
      this.arrowLeft = ''
      this.arrowRight = ''
      this.lastMove = null
      this.firstMove = null
      this.touchState = 0
      this.x1 = 0
      this.x2 = 0
      this.y1 = 0
      this.y2 = 0
    }

    mobileTouch(dataId, thumbElements, element, index){
        this.element = element
        this.thumbNails = thumbElements
        
        if(element.className.includes('active')){
            this.counter = index
        }
      
        this.dataId = dataId

        if ('ontouchstart' in window) {
            element.addEventListener('touchstart', (event) => 
                this.triggerEvent(event, dataId, thumbElements, element, index), 'passive')   
        } else{
            element.addEventListener('click', (event) => 
                this.triggerEvent(event, dataId, thumbElements, element, index), 'passive')   
        }
    }
    mobileArrowTouch(el1, el2){
        this.arrowLeft = el1
        this.arrowRight = el2

        if ('ontouchstart' in window) {
            el1.addEventListener('touchstart', (event) => 
                this.triggerState(event,'left'), 'passive')

            el2 .addEventListener('touchstart', (event) => 
                this.triggerState(event, 'right'), 'passive')
        } else {
            el1.addEventListener('click', (event) => 
                this.triggerState(event,'left'), 'passive')

            el2 .addEventListener('click', (event) => 
                this.triggerState(event, 'right'), 'passive')
        }
    }
    triggerEvent(event, dataId, thumbElements, element, index){
        event.preventDefault()
        event.stopPropagation()
        const $pdpHero = document.getElementById('slider-' + dataId)
        const $removePrevious = document.querySelector('.pdp-image-pannel-wrapper.active')

        this.resetActive(thumbElements)
        // this.counter = index

        element.classList.add('active')
        $removePrevious.classList.remove("active");
        $pdpHero.classList.add("active");

        this.dataId = dataId 
        this.thumbNails = thumbElements

    }
    resetActive(thumbList){
        for(let i = 0; i < thumbList.length; i++){
            thumbList[i].classList.remove("active");
        }
    }
    triggerState(event, type, dataId){
        event.preventDefault()
        event.stopPropagation()
        this.carousel(type)
    }
    carousel(type){
      
        switch(type){
            // if is right then go up to the lenght and if > then back to 0
            case 'right':
                this.counter = this.counter === (this.thumbNails.length - 1)
                ? this.counter = 0 :  this.counter + 1
            
                const getImgId = this.thumbNails[this.counter].dataset.imageid
                this.main(getImgId)
            
                break
            case 'left':
                // if is left then go down if is < 0 then go to length -1 
                this.counter = this.counter === 0 ? this.thumbNails.length - 1 : this.counter - 1

                const getImgId2 = this.thumbNails[this.counter].dataset.imageid
                this.main(getImgId2)

                break
            default: 
              throw new Error('Neither left or Right in __Hero Arrows__')
        }
    }

    main(dataId){
        const $pdpHero = document.getElementById('slider-' + dataId)
        const $removePrevious = document.querySelector('.pdp-image-pannel-wrapper.active')

        this.resetActive(this.thumbNails)

        $removePrevious.classList.remove("active");
        $pdpHero.classList.add("active");

        this.thumbNails[this.counter].classList.add('active')
    }

    // add scrolling
    mobileScroll(element){
        element.addEventListener('touchstart', (event) => this.triggerStart(event))
        element.addEventListener('touchend', (event) => this.triggerEnd(event))
    }
    // read the start of the mouse .touches[0].pageX
    triggerStart(event){
        event.preventDefault()
        this.firstMove = event.touches[0].pageX

        this.x1 = this.firstMove
        this.y1 = event.touches[0].pageY
        
        console.log('x1 y1 ', this.x1, this.y1)
        this.touchState = true
    }
    // read the start of the mouse
    triggerEnd(event){
        this.lastMove = event.changedTouches[0].pageX

        this.x2 = this.lastMove
        this.y2 = event.changedTouches[0].pageY
        
        console.log('x2 y2 ', this.x2, this.y2)
        
        const thetaY = this.y2 - this.y1
        
        const thetaX = this.x2 - this.x1

        const angle = Math.atan2(thetaY, thetaX ) * (180 / Math.PI)
        console.log('math',  angle, thetaY)

        this.scrollingY(angle, this.y1)
        
        this.touchState = false
    }
    //direction
    checkDirection(type){
        this.carousel(type)
    }
    scrollingY(theta, y){
        const goUp = (theta > 50 ) && (theta < 120) 
        const goDown = (theta > -130) && (theta < -40)
          
        if(goUp){
              window.scroll({
                  top: 50,
                  left: 0,
                  behavior: 'smooth'
              })
          } 
          if(goDown){
              const newY = y  > 300 ? y - 100 : y - 20
              window.scroll({
                  top: newY,
                  left: 0,
                  behavior: 'smooth'
              })
          } 
          if(!goDown && !goUp){
              // check that firstmove is a number and the state has changed
              if(typeof this.firstMove == 'number' && this.touchState){
                  // if 1st move is bigger then last return true  
                  const sendLeft = this.lastMove > this.firstMove
                  const sendRight = this.lastMove < this.firstMove
                  
                  if(sendLeft){
                      this.checkDirection('left')
                  } 
                  if(sendRight){
                      this.checkDirection('right')
                  }
              }
          }
          
    }
}

function runCarouselArrows2(){  
    const $pdpThumbnail2022 = document.querySelectorAll('.slide.pdpImagePanneleby')
    const $arrowLeft = document.getElementById('eby-left-2022')
    const $arrowRight = document.getElementById('eby-right-2022')
  
    $pdpThumbnail2022[0].classList.add('active')

    // console.log($pdpThumbnail2022)
    const ebyCarouselArrows2 = new EbyAddEventMobileReload()  

    for(let i = 0; i < $pdpThumbnail2022.length; i++){
        const datasetId = $pdpThumbnail2022[i].dataset.imageid
        ebyCarouselArrows2.mobileTouch(datasetId, $pdpThumbnail2022, $pdpThumbnail2022[i], i)
    }
    ebyCarouselArrows2.mobileArrowTouch($arrowLeft, $arrowRight,$pdpThumbnail2022) 

    // scrolling 
    const $currentHero = document.querySelector('.pdpImagePanel-Slider-2022')
    
    // ebyCarouselArrows2.mobileScroll($currentHero)

    
    // $pdpThumbnail2022[0].style.border = '1px solid #00082f'
    // $pdpThumbnail2022[0].style.boxShadow = '0px 0px 3px 0px #00082f' 
};

  $(document).ready(function () {
    runCarouselArrows();  
  });
}
// fc 040523
function selectSizeCheck(){
    
    const isProductPath = isProductsPage();
    if(!isProductPath) {
        return false;
    }

    const bundleAndSets = document.querySelector('#eby-bundle-bras23');
    if(bundleAndSets){
        const isPageSet = bundleAndSets.dataset.typepdp;
        if(isPageSet === 'set'){
            return isSetChosen(); 
        }
    } else {
        return restPdps();
    }

    function isSetChosen(){
        const setBra = document.getElementById('setVariant23-0');
        const setPant = document.getElementById('setVariant23-1');
        if (setBra.value === '' || setPant.value === '') {
            // if any selector has not been chosen then return true to run the alert
            return true;
        } else {
            return false;
        }
    }
    function restPdps(){
        const swatchSizeWrap = document.querySelectorAll('.isVariantSwatch23');   
        for(const el of swatchSizeWrap){  
          if(el.checked === true)
            return false;
        }
        return true;
    }
    function isProductsPage() {
      const urlRegex = '/products/';
      const path = window.location.pathname;
      const finalUrl = path.includes(urlRegex);

      return finalUrl;
    }
}

