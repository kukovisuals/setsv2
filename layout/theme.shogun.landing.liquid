{% comment %}
Auto-generated by Shogun.
This file can be re-written at any time.
{% endcomment %}

<!doctype html>
<!--[if IE 9]> <html class="ie9 no-js" lang="{{ shop.locale }}"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!-->
  <html class="no-js" lang="{{ shop.locale }}"> <!--<![endif]-->
  
<head>
  
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="theme-color" content="#FBF9F7" />
    <meta name="p:domain_verify" content="76d37e972c49ccf70309e4224eae0c2c" />
    {% capture seo_title %}
      {{ page_title }}
      {% if current_tags %}
        {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}{% endif %}
      {% if current_page != 1 %}&ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}
      {% unless page_title contains shop.name %}&ndash; {{ shop.name }}{% endunless %}
    {% endcapture %}
    <title>{{ seo_title }}</title>
    <link rel="canonical" href="{{ canonical_url }}">
    <meta name="format-detection" content="telephone=no">
    {% if handle contains 'last-call-seamless-underwear' or handle contains 'giveaway' or handle contains 'sakura' or handle contains 'roseata' or template contains 'premium_new' or template contains 'parisian-summer-luxury' or handle contains 'shop-bralette-set-deal' %}
      <meta name="robots" content="noindex">
    {% endif %}
    {% if handle contains 'roseata' or handle contains 'sakura' or template contains 'premium_new' or template contains 'parisian-summer-luxury' %}
      <meta property="og:image" content="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/768---IMG---LUXE-1_2x_0367b37d-a53d-4651-86d5-91c1d1304d20.jpg?v=1628520959" />
      <meta name="twitter:image" content="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/768---IMG---LUXE-1_2x_0367b37d-a53d-4651-86d5-91c1d1304d20.jpg?v=1628520959" />
    {% endif %}
    {% if settings.favicon != blank %}
      <link
        rel="shortcut icon"
        href="{{ settings.favicon | img_url: '32x32' }}"
        type="image/png">
    {% endif %}
    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}
    <script type="lazyload2" data-src="https://www.googletagmanager.com/gtag/js?id=G-SM2BTQY1PF"></script>
    {%- if request.design_mode or template contains 'cart' or template contains 'checkout' -%}
      {{ content_for_header }}
    {%- else -%}
      {% capture content_for_header2 %}
        {{ content_for_header }}{% endcapture %}
      {{ content_for_header2 | replace: ' defer="defer" ', ' type="lazyload2" ' | replace: " src=", " data-src=" | replace: "window.addEventListener('load', asyncLoad, false);", "window.addEventListener('wnw_load', asyncLoad, false);" | replace: "DOMContentLoaded", "DOMContentLoaded2" }}
      <script>
        var trekkie = [];
        trekkie.integrations = !0;
      </script>
    {%- endif -%}

    {% render 'preload-snippet' %}
    {% render 'min-styles' %}
    {% render 'vela-header-styles' %}
    {% render 'vela-header-javascript' %}
    {% render 'social-meta-tags' %}

    <script type="lazyload2" data-src="//www.searchanise.com/widgets/shopify/init.js?a=6P3j6o7u5W&amp;shop=eby-by-sofia-vergara.myshopify.com"></script>
    <script
      type="text/javascript"
      defer
      src="https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=L32yAn&shop=eby-by-sofia-vergara.myshopify.com"></script>
    <style>
      @font-face {
        font-display: swap;
        font-family: eby;
        src: url('data:application/octet-stream;base64,') format('woff2');
        font-weight: 400;
        font-style: normal;
        font-display: swap
      }
    </style>

  {% render 'shogun-head' %}  

</head>

  {%- if template contains 'customer' -%}
    {%- assign velaBodyClass = 'template-account' -%}
  {%- endif -%}
  {%- if settings.loading_enable -%}
    {%- assign bodyPreLoading = 'bodyPreLoading' -%}
  {%- endif -%}
  
<body id="{{ page_title | handle }}" class="{% if template contains 'shogun' %}shg-page {% endif %}{% if canonical_url contains 'last-call' %}last_cols_page{% endif %} {% if template contains "page.dutchess-luxe" or template contains "luxe-new-color-set" or template contains "discount-lp" or template contains 'premium_new' or template contains 'parisian-summer-luxury' or template contains 'luxe-final' or template == 'page.strawberry-ice' or template == 'page.blue-meadow' or template contains 'cotton-bralette' or template == 'page.poppy-red-and-pose'  %}premium_news{% endif %} template-{{ template | split: '.' | first }} {% if template == "search" %}template-collection{% endif %} {{ velaBodyClass }}{% if settings.header_float_enable %} velaFloatHeader{% endif %} {{ bodyPreLoading }} {% if template.suffix contains 'filter' %}filterBodyTemplate{% endif %} {% if customer.tags contains 'Active Subscriber' %}loggedIn{% else %}loggedOut{% endif %}{% if customer.tags contains 'Active Subscriber' %} isMember{% endif %}{% if template contains 'mesh' or template contains 'only-bra-lp' or template contains 'silky-separates' or page.handle contains 'spring-sets' %} template-page-special{% endif %} bfx-price-container bfx-checkout-container bfx-remove-element-container">
  
  
  {{ content_for_layout }}
  {{ 'wnw-optimization.js' | asset_url | script_tag }}
  <script
      defer
      type="text/javascript"
      src="{{ 'jquery.2.2.3.js' | asset_url }}"></script>
<script
      defer
      type="text/javascript"
      src="{{ 'material-ui.js' | asset_url }}"></script>
<script
      defer
      type="text/javascript"
      src="{{ 'vendor.js' | asset_url }}"></script>
<script type="lazyload2" data-src="{{ 'vendor-extended.js' | asset_url }}"></script>
<script type="text/javascript" defer> // if cookie for Canada is set, turn off afterpay
        var afterpay_shop_currency = {{ shop.currency | json }};
        var afterpay_cart_currency = {{ cart.currency.iso_code | json }};
        var afterpay_shop_money_format = {{ shop.money_format | json }};
        var afterpay_shop_permanent_domain = {{ shop.permanent_domain | json }};
        var afterpay_theme_name = {{ theme.name | json }};
        var afterpay_product = {{ product | json }};
        var afterpay_current_variant = {{ product.selected_or_first_available_variant | json }};
        var afterpay_cart_total_price = {{ cart.total_price | json }};
        var afterpay_js_snippet_version = '1.0.10';
                            var afterpay_product_selector = '.payment_terms';

      </script>
<script type="lazyload2" data-src="https://static.afterpay.com/shopify-afterpay-javascript.js"></script>
<script defer src="https://global.prd.borderfree.com/cdn/tracking/v1/dist/borderfreeOrderTracking.min.js"></script>
<script type="lazyload2" data-src="https://unpkg.com/@loophq/onstore-sdk@latest/dist/loop-onstore-sdk.js"></script>
<script type="lazyload2">
      setTimeout(function() {
      function asyncLoad() {
                            var urls = [
                                "https:\/\/static.rechargecdn.com\/static\/js\/recharge.js?shop=eby-by-sofia-vergara.myshopify.com",
                                "https:\/\/inventorylocations.checkmyapp.net\/inventory-location.js?shop=eby-by-sofia-vergara.myshopify.com",
                                "https:\/\/cdn.attn.tv\/eby\/dtag.js?shop=eby-by-sofia-vergara.myshopify.com",
                            ];
                            for (var i = 0; i < urls.length; i++) {
                                var s = document.createElement('script');
                                s.type = 'text/javascript';
                                s.defer = true;
                                s.src = urls[i];
                                var x = document.getElementsByTagName('script')[0];
                                x.parentNode.insertBefore(s, x);
                            }
                            };
                            if(window.attachEvent) {
                            window.attachEvent('onload', asyncLoad);
                            } else {
                            window.addEventListener('load', asyncLoad, false);
                            }
                        });
                        setTimeout(function() {
                            if (!!LoopOnstore) {
                            LoopOnstore.init({ 
                                key: "f0475fc5ab089ff316161e19efe6a583edd70ef9", 
                                attach: ".btn.loopBtnFinish" 
                            });
                            let isLoopActive = LoopOnstore.isActive();
                            if (!!isLoopActive) {
                                gtag('event', 'tutorial_begin__return_exchange');
                                window.history.pushState = "/collections/best-sellers?utm_campaign=loop-shopping&utm_medium=loop-cta-click&utm_source=loop-email";
                            }
                            }
                        },3000);
                        Shopify.customerVIP =
      {% if customer.tags contains "Active Subscriber" %}true{% else %}false{% endif %};
      {% unless template == 'index' %}
        const getCartItemsAttributeMap = (optionNames = []) => {
        const map = {};
                                const items = Rebuy.Cart.items();
                                if (items.length) {
                                for (let i = 0; i < items.length; i++) {
                                    const item = items[i];
                                    for (let x = 0; x < item.options_with_values.length; x++) {
                                    const option = item.options_with_values[x];
                                    if (optionNames.length == 0 || optionNames.includes(option.name)) {
                                        if (typeof map[option.name] == 'undefined') {
                                        map[option.name] = [];
                                        }
                                        if (!map[option.name].includes(option.value)) {
                                        map[option.name].push(option.value);
                                        }
                                    }
                                    }
                                }
                                }
                                return (!!Object.keys(map).length) ? map : null;
                            }
                            const autoSelectVariantsByAttributeMap = (products, map) => {
                                if (products && map) {
                                for (let i = 0; i < products.length; i++) {
                                    const product = products[i];
                                    const productMap = {
                                    option1: null,
                                    option2: null,
                                    option3: null
                                    };
                                    for (let x = 0; x < product.options.length; x++) {
                                    const option = product.options[x];
                                    if (option.name in map) {
                                        const optionKey = `option${x+1}`;
                                        productMap[optionKey] = option.values.filter(value => map[option.name].includes(value));
                                    }
                                    }
                                    if (!!Object.keys(productMap).length) {
                                    let selectedVariant = product.variants[0];
                                    let selectedVariantRank = 0;
                                    for (let x = 0; x < product.variants.length; x++) {
                                        const variant = product.variants[x];
                                        let variantRank = 0;
                                        for (let o = 1; o <= 3; o++) {
                                        const optionKey = `option${o}`;
                                        if (variant[optionKey] == null && productMap[optionKey] == null || Array.isArray(productMap[optionKey]) && productMap[optionKey].includes(variant[optionKey])) {
                                            variantRank++;
                                        }
                                        }
                                        if (variantRank > selectedVariantRank) {
                                        selectedVariant = variant;
                                        selectedVariantRank = variantRank;
                                        }
                                    }
                                    // Select the best matching variant
                                    product.selected_variant_id = selectedVariant.id;
                                    product.selected_variant = selectedVariant;
                                    product.option1 = selectedVariant.option1;
                                    product.option2 = selectedVariant.option2;
                                    product.option3 = selectedVariant.option3;
                                    }
                                }
                                }
                            }
                            document.addEventListener('rebuy:cart.change', function(event){
                                for (let i = 0; i < Rebuy.widgets.length; i++) {
                                autoSelectVariantsByAttributeMap(Rebuy.widgets[i].data.products, getCartItemsAttributeMap());
                                }
                            });
                            document.addEventListener('rebuy.productsChange', function(event){
                                autoSelectVariantsByAttributeMap(event.detail.products, getCartItemsAttributeMap());
                            });
      {% endunless %}
    </script>
<script id="gorgias-chat-widget-install-v3" 
    src="https://config.gorgias.chat/bundle-loader/01GYCC84NYSFC012CBWH1FWKZ5?source=shopify1click">
</script>
<script id="gorgias-chat-shopify-install">!function(_){_.SHOPIFY_PERMANENT_DOMAIN="{{shop.permanent_domain}}",_.SHOPIFY_CUSTOMER_ID="{{customer.id}}",_.SHOPIFY_CUSTOMER_EMAIL="{{customer.email}}"}(window||{});
</script>
<script
        type="text/javascript"
        src="{{ 'jquery.cookie.js' | asset_url }}"
        defer></script>
<script
        defer
        type="text/javascript"
        src="{{ 'vendor-account.js' | asset_url }}"></script>
<script
        defer
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"
        integrity="sha512-UdIMMlVx0HEynClOIFSyOrPggomfhBKJE28LKl8yR3ghkgugPnG6iLfRfHwushZl1MOPSY6TsuBDGPK2X4zYKg=="
        crossorigin="anonymous"></script>
<script
            type="text/javascript"
            src="{{ 'vela-account.js' | asset_url }}"
            defer></script>
<script
            type="text/javascript"
            src="{{ 'vela-account.js' | asset_url }}"
            defer></script>
  <style type="text/css">
    body, html {
      width: 100% !important;
      background: white !important;
    }
  </style>
  
</body>

</html>
