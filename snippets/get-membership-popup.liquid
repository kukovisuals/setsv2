<div id="nudge-getMembershipPopup" class="ebyNudgePopup nudge-getMembershipPopup modal modal-fixed-footer ebyAnimate">
  <div class="ebyNudgePopupInnerWrapper modal-content">
    <div class="ebyNudgePopupInnerWrapperHeader">
      	<div class="ebyBtnWrapper">
          <button id="backBtnMembershipPopup" class="backBtnMembershipPopup ebyicon-back-link-arrow pOne_tOne"></button>
          <button class="closeEbyMembershipPopup linkBtn">Close</button>
          <article id="cbp-minicart-wrapper" class="cbp-minicartWrapper">
            <ul class="cbp-minicart">
              <li id="cbp-minicart_slot-1" class="cbMinicartSlot">
              </li>
              <li id="cbp-minicart_slot-2" class="cbMinicartSlot">
              </li>
              <li id="cbp-minicart_slot-3" class="cbMinicartSlot">
              </li>
            </ul>
          </article>
      	</div>
      	<div class="owl-carousel owl-theme">
          	<div id="changeMyBoxPanel" class="changeMyBoxPanel panelSlide item activeSlide" data-width="640" data-height="auto" >
              	<p class="subSectionPagination" id="bp-pagination"><span id="bp-page">1</span> of 3</p>
              	<p class="modalHeader changeMyBoxPanelTitle">choose your box â€” <span class="membershipBoxHeaderPrice">$39</span></p>

              	<section id="allPrefGroupChoice" class="chooseStyleGroupWrapperCore panelContent panelContentOne">
<!--                   <p class="subSectionTitle">Select your experience</p> -->

                  <div class="dash-boxChoiceWrapper mainOption styleGroupChoice subSectionInnerWrapper">
<!--                       <div class="dash-boxChoiceOption primeOpt curate">
                          <button class="ebyDashSelectBtn" data-type="select-styleGroup" data-val="curate-a-box">
                            <span class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/membership-supscriptions-quarterly.jpg"/>
                            </span>
                            <span class="boxDescription">
                              <p class="modalOptHeader">We Choose</p>
                              <span>Surprise &amp; Delight</span>
                            </span>
                        </button>
                      </div> -->
                      <div class="dash-boxChoiceOption primeOpt custom">
                        <button class="ebyDashSelectBtn" name="update-styleGroup" data-val="custom_box" id="makeMyCustomBoxBtn">
                        	<span class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---custom---greyopt.jpg"/>
                            </span>
                            <span class="boxDescription">
                              <p class="modalOptHeader">Custom Box</p>
                              <p>You pick each one</p>
                            </span>
                        </button>
                      </div>
                      <div class="dash-boxChoiceOption secOpt curate mx">
                        <button class="ebyDashSelectBtn" name="update-styleGroup" data-val="mixed_styles">
                            <span class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---mixed_styles---greyopt.jpg">
                            </span>
                            <span class="boxDescription">
                              <p class="boxSelectionTitle modalOptHeader">Mixed Styles</p>
                              <p>We curate a variety</p>
                            </span>
                        </button>
                      </div>
                      <div class="dash-boxChoiceOption secOpt curate ab">
                        <button class="ebyDashSelectBtn" name="update-styleGroup" data-val="all_briefs">
                        	<span class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---all_briefs---greyopt.jpg">
                            </span>
                            <span class="boxDescription">
                              <p class="boxSelectionTitle modalOptHeader">Briefs</p>
                              <p>Same styles on repeat</p>
                            </span>
                        </button>
                      </div>
                      <div class="dash-boxChoiceOption secOpt curate ahw">
                        <button class="ebyDashSelectBtn" name="update-styleGroup" data-val="all_highwaisted">
                        	<div class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---all_highwaisted---greyopt.jpg">
                            </div>
                            <span class="boxDescription">
                              <p class="boxSelectionTitle modalOptHeader">High Waisted</p>
                              <p>Same styles on repeat</p>
                            </span>
                        </button>
                      </div>
                      <div class="dash-boxChoiceOption secOpt curate at">
                        <button class="ebyDashSelectBtn" name="update-styleGroup" data-val="all_thongs">
                        	<span class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---all_thongs---greyopt.jpg">
                            </span>
                            <span class="boxDescription">
                              <p class="boxSelectionTitle modalOptHeader">Thongs</p>
                              <p>Same styles on repeat</p>
                            </span>
                        </button>
                      </div>
                      <div class="dash-boxChoiceOption secOpt curate fc">
                        <button class="ebyDashSelectBtn" name="update-styleGroup" data-val="full_coverage">
                        	<span class="boxBgImgWrapper">
                              <img class="lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---full_coverage---greyopt.jpg">
                            </span>
                            <span class="boxDescription">
                              <p class="boxSelectionTitle modalOptHeader">Full Coverage</p>
                              <p>A variety but no thongs</p>
                            </span>
                        </button>
                      </div>
                  </div>
<!--                    <a class="ebyicon-link-arrow learnMoreSubLink" href="/pages/membership">See Membership Perks</a> -->
              	</section>

                <input id="changeMyBoxPanel-selections" type="hidden" value="" />
          	</div>

          	<div id="changeMySizePanel" class="changeMyPrefsPanel panelSlide item" data-width="640" data-height="auto">
              	<p class="subSectionPagination" id="bp-pagination"><span id="bp-page">2</span> of 3</p>
              	<p class="modalHeader changeMyPrefsPanelTitle">choose your panty size</p>

                <section id="allPrefGroupChoiceSizes" class="dash-boxChoiceWrapper allPrefGroupChoice panelContent panelContentThree">
                  <div class="sizeguideButtonWrapper">
                    <button id="sizeguide_open_btn-panty" data-sizeguidetoopen="panty" class="sizeGuideBtnToggle openBtn">Size Guide</button>
                  </div>
                  <div class="subSectionInnerWrapper">
                    <div class="dash-prefChoiceOptions sizeGroup">
                        <ul class="sizeOptListing">
                          <li class="sortOpt alt">
                            <label for="pantySize-xs" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="xs" data-val="xs" data-sizecopy="Size: XS" data-sizeOpt="xs" id="pantySize-xs">
                              <span>XS<small class="colorgroup_subtext">00-2</small></span>
                            </label>
                          </li>
                          <li class="sortOpt alt">
                            <label for="pantySize-sm" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="sm" data-val="sm" data-sizecopy="Size: S" data-sizeOpt="sm" id="pantySize-sm">
                              <span>S<small class="colorgroup_subtext">2-4</small></span>
                            </label>
                          </li>
                          <li class="sortOpt alt">
                            <label for="pantySize-md" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="md" data-val="md" data-sizecopy="Size: M" data-sizeOpt="md" id="pantySize-md">
                              <span>M<small class="colorgroup_subtext">6-8</small></span>
                            </label>
                          </li>
                          <li class="sortOpt alt">
                            <label for="pantySize-lg" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="lg" data-val="lg" data-sizecopy="Size: L" data-sizeOpt="lg" id="pantySize-lg">
                              <span>L<small class="colorgroup_subtext">10-12</small></span>
                            </label>
                          </li>
                          <li class="sortOpt alt">
                            <label for="pantySize-xl" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="xl" data-val="xl" data-sizecopy="Size: XL" data-sizeOpt="xl" id="pantySize-xl">
                              <span>XL<small class="colorgroup_subtext">14-16</small></span>
                            </label>
                          </li>
<!--                           <li class="sortOpt alt">
                            <label for="pantySize-1x" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="1x" data-val="1x" data-sizecopy="Size: 1X" data-sizeOpt="1x" id="pantySize-1x">
                              <span>1X<small class="colorgroup_subtext">16-18w</small></span>
                            </label>
                          </li> -->
                          <li class="sortOpt alt">
                            <label for="pantySize-2x" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="2x" data-val="2x" data-sizecopy="Size: 2X" data-sizeOpt="2x" id="pantySize-2x">
                              <span>2X<small class="colorgroup_subtext">18-20w</small></span>
                            </label>
                          </li>
                          <li class="sortOpt alt">
                            <label for="pantySize-3x" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="3x" data-val="3x" data-sizecopy="Size: 3X" data-sizeOpt="3x" id="pantySize-3x">
                              <span>3X<small class="colorgroup_subtext">22-24w</small></span>
                            </label>
                          </li>
                          <li class="sortOpt alt">
                            <label for="pantySize-4x" class="sadOptLabel">
                              <input class="with-gap" name="boxPref-sizes" type="radio" value="4x" data-val="4x" data-sizecopy="Size: 4X" data-sizeOpt="4x" id="pantySize-4x">
                              <span>4X<small class="colorgroup_subtext">26-28w</small></span>
                            </label>
                          </li>
                        </ul>
                    </div>
<!--                   	<div class="dash-prefChoiceOptions colorGroup">
                        <div class="boxPrefTitleWrapper">
                          <p>Color</p>
                        </div>
                        <ul class="optionsListing colorOptListing switchMode">
                          <li class="prefChoiceOption colors">
                            <label for="only-neutrals" class="">
                              <input class="with-gap" type="radio" name="boxPref-colors" value="nu" data-val="neutrals" data-colorcopy="Neutral Colors"  data-colorOpt="neutrals" id="only-neutrals" />
                              <span>Neutral Colors</span>
                            </label>
                          </li>
                          <li class="prefChoiceOption colors">
                            <label for="mixed-colors" class="">
                              <input class="with-gap"type="radio" name="boxPref-colors" value="mx" data-val="mixed" data-colorcopy="Mixed Colors" data-colorOpt="mixed" id="mixed-colors">
                              <span>Mixed Colors</span>
                            </label>
                          </li>
                        </ul>
                    </div>
                    <div class="dash-prefChoiceOptions planGroup">
                        <div class="boxPrefTitleWrapper">
                          <p>Plan</p>
                        </div>
                        <ul class="optionsListing planOptListing switchMode">
                            <li class="prefChoiceOption plans">
                              <label for="every-three-months" class="">
                                <input class="with-gap" type="radio" name="boxPref-plans" data-pack="3" value="quarterly" id="every-three-months" data-plancopy="3 Panty" data-val="quarterly" data-planOpt="quarterly" />
                                <span>3 panties every<br>3 months - $39</span>
                              </label>
                            </li>
                            <li class="prefChoiceOption plans">
                              <label for="every-six-months" class="">
                                <input class="with-gap"type="radio" name="boxPref-plans" data-pack="5" value="semi-annual" id="every-six-months" data-plancopy="6 Panty" data-val="semi-annual" data-planOpt="semi-annual" >
                                <span>5 panties every<br>6 months - $65</span>
                              </label>
                            </li>
                        </ul>
                    </div> -->
                  </div>
                  <article id="sizeguide_panel_wrapper-panty" class="sizeguidePanelWrapper">
                  	<img class="lazyload" width="350" height="350" alt="EBY Panty Sizing Guide" title="EBY Panty Sizing Guide" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sizeguide---panty---color-coded.jpg?v=1652914370" />
                  	<button id="sizeguide_close_btn-panty" data-sizeguidetoclose="panty" class="sizeGuideBtnToggle closeBtn">Hide Guide</button>
                  </article>
                </section>

<!--               	<section id="membershipBoxReview" class="dash-boxChoiceWrapper summaryOfMembershipWrapper panelContent panelContentFour panelHide">
                  <p class="subSectionTitle"><span id="orderSummMembershipName" class="membershipBoxSelectedTitle"></span></p>

                  <div class="subSectionInnerWrapper">
                    <div class="membershipBoxSummaryImgWrapper">
                      <img class="membershipBoxSummaryImg lazyload" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/membership-supscriptions-quarterly.jpg" />
                    </div>
                    <div class="membershipBoxSummaryPrefs">
                      <ul>
                        <li class="membershipBoxSummaryOption sizeOption">
                          <span>Size</span>
                          <p id="orderSummMembershipSize"></p>
                        </li>
                        <li class="membershipBoxSummaryOption colorOption">
                          <span>Color</span>
                          <p id="orderSummMembershipColor"></p>
                        </li>
                        <li class="membershipBoxSummaryOption planOption">
                          <span>Plan</span>
                          <p id="orderSummMembershipPlan"></p>
                        </li>
                      </ul>
                    </div>
                    <div class="membershipBoxSummarySchedule">
                      	<p class="planDetails">Membership renews every <span class="membershipPlanSelectedTitle"></span> months</p>
                      	<p>Once youâ€™re a member, enjoy perks like</p>
                      	<p>FREE shipping and VIP discounts on all orders</p>
                    </div>
                  </div>
              	</section> -->

                <input id="changeMySizePanel-selections" type="hidden" value="" />
            </div>

          	<div id="changeMyColorPanel" class="changeMyPrefsPanel panelSlide item" data-width="640" data-height="auto">
              	<p class="subSectionPagination" id="bp-pagination"><span id="bp-page">3</span> of 3</p>
              	<p id="sad-summary-title" class="modalHeader changeMyPrefsPanelTitle"><span class="step-3a">choose your colors</span><span class="step-3b">subscription summary</span></p>

                <section id="allPrefGroupChoiceColors" class="dash-boxChoiceWrapper allPrefGroupChoice allPrefGroupChoiceColor panelContent panelContentThree">

                  <div class="subSectionInnerWrapper">
					<div class="dash-prefChoiceOptions colorGroup">
                        <ul class="optionsListing colorOptListing switchMode">
                          <li class="prefChoiceOption colors">
                            <label for="only-neutrals" class="sadOptLabel">
                              <input class="with-gap" type="radio" name="boxPref-colors" value="nu" data-val="neutrals" data-colorcopy="Neutral Colors"  data-colorOpt="neutrals" id="only-neutrals" />
                              <span>
                                <img width="65" height="30" class="sad-optionImg lazyload" style="max-width:65px;margin:0 auto 1.5rem;" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/SWATCH_-_neutrals.png" />
                                Neutral
                                <small>Selection of beige, grey, &amp; black</small>
                              </span>
                            </label>
                          </li>
                          <li class="prefChoiceOption colors">
                            <label for="mixed-colors" class="sadOptLabel">
                              <input class="with-gap"type="radio" name="boxPref-colors" value="mx" data-val="mixed" data-colorcopy="Mixed Colors" data-colorOpt="mixed" id="mixed-colors">
                              <span>
                                <img width="65" height="30" class="sad-optionImg lazyload" style="max-width:65px;margin:0 auto 1.5rem;" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/SWATCH_-_colors-prints.png" />
                                Mixed
                                <small>A pairing of any color, tone, or print</small>
                              </span>
                            </label>
                          </li>
                        </ul>
                    </div>
                  </div>
                </section>

              	<section id="membershipBoxReview" class="dash-boxChoiceWrapper summaryOfMembershipWrapper summaryOfMembershipWrapper-a panelContent panelContentFour panelHide">

                  <div class="subSectionInnerWrapper">
                    <div class="membershipBoxSummaryImgWrapper">
                      <img class="membershipBoxSummaryImg lazyloaded" data-src="" />
                    </div>
                    <div class="membershipBoxSummaryPrefs">
                      <p class="subSectionTitle"><span id="orderSummMembershipName" class="membershipBoxSelectedTitle"></span></p>
                      <ul>
                        <li class="membershipBoxSummaryOption planOption">
<!--                           <span>Plan</span> -->
                          <p id="orderSummMembershipPlan"></p>
                        </li>
                        <li class="membershipBoxSummaryOption colorOption">
<!--                           <span>Color</span> -->
                          <p id="orderSummMembershipColor"></p>
                        </li>
                        <li class="membershipBoxSummaryOption sizeOption">
<!--                           <span>Size</span> -->
                          <p id="orderSummMembershipSize"></p>
                        </li>
                      </ul>
                    </div>
                  </div>
                  <div class="membershipBoxSummarySchedule">
                    <div style="margin-bottom:0.5rem;" class="planDetails">
                      <i class="ebyicon-cycle"></i>
                      <p>
                        <span>3 NEW panties every <span class="membershipPlanSelectedTitle"></span> months</span>
                        <span>Easily skip or cancel anytime</span>
                      </p>
                    </div>
<!--                       <p style="margin-bottom:0.5rem;">With an active membership box, enjoy perks like:</p> -->
<!--                       <p style="margin-bottom:0.5rem;"><i class="ebyicon-shipping"></i>  Free shipping on all orders</p> -->
<!--                       <p style="margin-bottom:0.5rem;"><i class="ebyicon-promo"></i>  Member savings on products</p> -->
<!--                       <p style="margin-bottom:0.5rem;"><i class="ebyicon-sub_skip"></i>Easily skip or swap next box</p> -->
                      <!--<p style="margin-bottom:0.5rem;"><i class="ebyicon-ebybolt"></i>Impact women-owned businesses</p> -->
                  </div>
              	</section>

                <input id="changeMyColorPanel-selections" type="hidden" value="" />
            </div>

          	<div id="makeMySelectionsPanel" class="changeMyPrefsPanel panelSlide item" data-width="640" data-height="auto">
              	<p class="subSectionPagination" id="bp-pagination"><span id="bp-page">3</span> of 3</p>
              	<p id="cb-summary-title" class="modalHeader changeMyPrefsPanelTitle"><span class="step-3a">choose panties</span><span class="step-3b">subscription summary</span></p>

                <section id="allPrefGroupChoicePanties" class="dash-boxChoiceWrapper allPrefGroupChoice allPrefGroupChoicePanties panelContent panelContentThree">

                  <div class="subSectionInnerWrapper">
					<div class="dash-prefChoiceOptions selectionGroupFilters sizeGroup">
                        <ul id="cbp-opt-listing-filters" data-filterset="all" class="optionsListing colorOptListing cb-filterListWrapper sizeOptListing capsuleMode">
                          <li class="sortOpt styleChoiceOption opt-all">
                            <label for="cbp_filter_opt-all" class="cbOptLabel">
                              <input class="with-gap" type="radio" checked="checked" name="boxFilter-style" value="all" data-val="all" data-stylecopy="All"  data-styleopt="all" id="cbp_filter_opt-all" />
                              <span>All</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-bikini">
                            <label for="cbp_filter_opt-bikini" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-style" value="bikini" data-val="bikini" data-stylecopy="Bikini" data-styleopt="bikini" id="cbp_filter_opt-bikini">
                              <span>Bikini</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-brief">
                            <label for="cbp_filter_opt-brief" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-style" value="brief" data-val="brief" data-stylecopy="Brief" data-styleopt="brief" id="cbp_filter_opt-brief">
                              <span>Brief</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-cheeky">
                            <label for="cbp_filter_opt-cheeky" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-style" value="cheeky" data-val="cheeky" data-stylecopy="Cheeky" data-styleopt="cheeky" id="cbp_filter_opt-cheeky">
                              <span>Cheeky</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-highwaisted">
                            <label for="cbp_filter_opt-highwaisted" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-style" value="highwaisted" data-val="highwaisted" data-stylecopy="Highwaisted" data-styleopt="highwaisted" id="cbp_filter_opt-highwaisted">
                              <span>High Waisted</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-highwaisted_thong">
                            <label for="cbp_filter_opt-highwaisted_thong" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-style" value="highwaisted_thong" data-val="highwaisted_thong" data-stylecopy="Highwaisted Thong" data-styleopt="highwaisted_thong" id="cbp_filter_opt-highwaisted_thong">
                              <span>High Waisted Thong</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-thong">
                            <label for="cbp_filter_opt-thong" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-style" value="thong" data-val="thong" data-stylecopy="Thong" data-styleopt="thong" id="cbp_filter_opt-thong">
                              <span>Thong</span>
                            </label>
                          </li>
                        </ul>
                    </div>
                    <section class="cbp-optListingWrapper">
                      <ul id="cbp-opt-listing" class="cbp-optListing" data-filterset="all">
                      </ul>
<!--                       <div id="cbp-opt-pagination">
                        {% if paginate.next %}
                        <a href="{{ paginate.next.url }}">&nbsp;</a>
                        {% endif %}
                      </div> -->
                    </section>
                  </div>

                </section>

              	<section id="membershipCustomBoxReview" class="dash-boxChoiceWrapper summaryOfMembershipWrapper summaryOfMembershipWrapper-b panelContent panelContentFour panelHide">
                  <div class="subSectionInnerWrapper">
                    <div id="cbp-summaryWrapper" class="membershipBoxSummaryProds">
                      <ul id="membership-custom-selections-list" class="cbMinicartExpandedListing">
                        <li id="cbp-minicart_exp_slot-1" class="cbMinicartExpandedSlot">
                          <div class="cbMinicartExpandedSlotPrdTile"><p>Select A Panty</p></div>
                          <input type="hidden" id="cbp-minicart_exp_slot_val-1" name="cb_minicart_exp_data" value="">
                        </li>
                        <li id="cbp-minicart_exp_slot-2" class="cbMinicartExpandedSlot">
                          <div class="cbMinicartExpandedSlotPrdTile"><p>Select A Panty</p></div>
                          <input type="hidden" id="cbp-minicart_exp_slot_val-2" name="cb_minicart_exp_data" value="">
                        </li>
                        <li id="cbp-minicart_exp_slot-3" class="cbMinicartExpandedSlot">
                          <div class="cbMinicartExpandedSlotPrdTile"><p>Select A Panty</p></div>
                          <input type="hidden" id="cbp-minicart_exp_slot_val-3" name="cb_minicart_exp_data" value="">
                        </li>
                      </ul>
                      </div>
                    <div class="membershipBoxSummaryPrefs custom_box">
                      <p class="subSectionTitle">
                        <span id="orderSummMembershipName" class="membershipBoxSelectedTitle">Custom Box</span>
                        <span id="orderSummCusMembershipSize"></span>
                      </p>
                    </div>
                    <div class="membershipBoxSummarySchedule">
                      <div style="margin-bottom:0.5rem;" class="planDetails">
                        <i class="ebyicon-cycle"></i>
                        <p>
                          <span>3 NEW panties every <span class="membershipPlanSelectedTitle"></span> months</span>
                          <span>Easily skip or cancel anytime</span>
                        </p>
                      </div>
                    </div>
                  </div>
              	</section>

                <input id="makeMySelectionsPanel-selections" type="hidden" value="" />
            </div>

          	<div id="makeMySelectionsPlusAFreeOnePanel" class="changeMyPrefsPanel panelSlide item" data-width="640" data-height="auto">
              	<p class="subSectionPagination" id="bp-pagination" style="color:#d0021b;visibility:hidden;">customers rated these 4.9 out of 5!</p>
              	<p id="boxplusaddon-summary-title" class="modalHeader changeMyPrefsPanelTitle"><span class="step-3a">add a bralette to your order</span><small>Pick from our best sellers</small></p>

                <section id="allPrefGroupChoiceAddon" class="dash-boxChoiceWrapper allPrefGroupChoice allPrefGroupChoicePanties panelContent panelContentThree">

                  <div class="subSectionInnerWrapper">
					<div class="dash-prefChoiceOptions selectionGroupFilters sizeGroup">
                      	<ul id="aos-opt-listing-filters" data-filterset="all" class="initialFilterState optionsListing colorOptListing cb-filterListWrapper sizeOptListing capsuleMode">
                          <li class="sortOpt styleChoiceOption opt-xs">
                            <label for="aos_filter_opt-xs" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="xs" data-val="xs" data-sizecopy="XS" data-sizeopt="xs" id="aos_filter_opt-xs">
                              <span>XS</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-sm">
                            <label for="aos_filter_opt-sm" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="sm" data-val="sm" data-sizecopy="S" data-sizeopt="sm" id="aos_filter_opt-sm">
                              <span>S</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-md">
                            <label for="aos_filter_opt-md" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="md" data-val="md" data-sizecopy="M" data-sizeopt="md" id="aos_filter_opt-md">
                              <span>M</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-lg">
                            <label for="aos_filter_opt-lg" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="lg" data-val="lg" data-sizecopy="L" data-sizeopt="lg" id="aos_filter_opt-lg">
                              <span>L</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-xl">
                            <label for="aos_filter_opt-xl" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="xl" data-val="xl" data-sizecopy="XL" data-sizeopt="xl" id="aos_filter_opt-xl">
                              <span>XL</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-xsdd">
                            <label for="aos_filter_opt-xsdd" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="xsdd" data-val="xsdd" data-sizecopy="XSDD" data-sizeopt="xsdd" id="aos_filter_opt-xsdd">
                              <span>XSDD</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-sdd">
                            <label for="aos_filter_opt-sdd" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="sdd" data-val="sdd" data-sizecopy="SDD" data-sizeopt="sdd" id="aos_filter_opt-sdd">
                              <span>SDD</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-mdd">
                            <label for="aos_filter_opt-mdd" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="mdd" data-val="mdd" data-sizecopy="MDD" data-sizeopt="mdd" id="aos_filter_opt-mdd">
                              <span>MDD</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-ldd">
                            <label for="aos_filter_opt-ldd" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="ldd" data-val="ldd" data-sizecopy="LDD" data-sizeopt="ldd" id="aos_filter_opt-ldd">
                              <span>LDD</span>
                            </label>
                          </li>
                          <li class="sortOpt styleChoiceOption opt-xldd">
                            <label for="aos_filter_opt-xldd" class="cbOptLabel">
                              <input class="with-gap"type="radio" name="boxFilter-aosize" value="xldd" data-val="xldd" data-sizecopy="XLDD" data-sizeopt="xldd" id="aos_filter_opt-xldd">
                              <span>XLDD</span>
                            </label>
                          </li>
                        </ul>
                        <div class="sizeguideButtonWrapper braletteWrapper" style="text-align: center;">
                          <button id="sizeguide_open_btn-bralette" data-sizeguidetoopen="bralette" class="sizeGuideBtnToggle openBtn">Size Guide</button>
                        </div>
                    </div>
                    <section class="cbp-optListingWrapper">
                      <ul id="aos-opt-listing" class="cbp-optListing" data-filterset="xs">
                      </ul>
<!--                       <div id="cbp-opt-pagination">
                        {% if paginate.next %}
                        <a href="{{ paginate.next.url }}">&nbsp;</a>
                        {% endif %}
                      </div> -->

                    </section>
                  </div>
                  <article id="sizeguide_panel_wrapper-bralette" class="sizeguidePanelWrapper">
                  	<img class="lazyload" width="350" height="350" alt="EBY Bralette Sizing Chart" title="EBY Bralette Sizing Chart" data-src="https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sizeguide---bralette---color-coded.jpg?v=1652914370" />
                  	<button id="sizeguide_close_btn-bralette" data-sizeguidetoclose="bralette" class="sizeGuideBtnToggle closeBtn">Hide Guide</button>
                  </article>
                </section>


                <input id="makeMyAddonSelectionsPanel-selections" type="hidden" value="" />
            </div>
      	</div>
    </div>
  </div>
  <div class="modal-footer">
    <div id="esp-button_wrapper" class="dashBtnWrapper hidden">
      <button id="ebyAddAnAddonBtn" class="subPanelBtn ebyAddonBtn" data-type="ebyAddAnAddonBtn" data-val="addABralette" >Add A<br/>Bralette?</button>
      <button id="ebyAddToCartPopupSaveBtn" class="ebyDashPopupSaveBtn submitSelect" disabled data-type="ebyAddToCartPopupSaveBtn" data-val="addMembershipBox" >Add To Cart</button>
    </div>
  </div>
  <div class="membershipPopupPreloadingContainer">
    <div class="preloadingCenterWrapper">
      <div class="preloader-wrapper small active">
        <div class="spinner-layer spinner-blue-only">
          <div class="circle-clipper left">
            <div class="circle"></div>
          </div><div class="gap-patch">
          <div class="circle"></div>
          </div><div class="circle-clipper right">
          <div class="circle"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="tap-target cbpHowToGuideTwo" data-target="cbp-minicart-wrapper">
  <div class="tap-target-content">
    <h5>Your Box So Far</h5>
    <p>Add any 3 pairs you want!</p>
  </div>
</div>

<style>
  .modalHeader.changeMyPrefsPanelTitle .step-3b,
  .modalHeader.changeMyPrefsPanelTitle.lastStep .step-3a{
  	display:none;
  }
  .modalHeader.changeMyPrefsPanelTitle.lastStep .step-3b {
  	display:block;
  }
  #cbp-opt-listing[data-filterset="highwaisted"] .pTile[data-pstyle="high_cut_highwaisted"]{
    display: block;
  }
  #cbp-opt-listing img.img-responsive,
  #aos-opt-listing img.img-responsive {
  	height: auto !important;
  }
  .primeOpt.custom .ebyDashSelectBtn {
    position:relative;
  }
  .primeOpt.custom button#makeMyCustomBoxBtn:before {
      content: "* Most Popular *";
      position: absolute;
      font-size: 1rem;
      bottom: 0px;
      width: 100%;
      line-height: 1.5rem;
      background: #7e839f;
      color: #fff;
  }
  #nudge-getMembershipPopup.ebyNudgePopup .modal-content .subSectionInnerWrapper ul#cbp-opt-listing .item,
  #nudge-getMembershipPopup.ebyNudgePopup .modal-content .subSectionInnerWrapper ul#aos-opt-listing .item {
    max-width: 48%;
  }
  .ebyNudgePopupInnerWrapper .owl-carousel {width: 100%;}
  .ebyNudgePopupInnerWrapperHeader .owl-item {display: none; min-height: 373px;}
  .ebyNudgePopupInnerWrapperHeader .owl-item.active {display: block;}
  .ebyNudgePopupInnerWrapperHeader .owl-stage {width: 100% !important; transform: unset !important;}
  .sizeguidePanelWrapper {display:none;opacity:0;position: absolute;top: 135px;height: 100%;background: rgba(255,255,255,0.8);text-align: center;width: 100%;max-width:600px;
    -o-transition: 0.3s ease-in-out all;
    -moz-transition: 0.3s ease-in-out all;
    -webkit-transition: 0.3s ease-in-out all;
    transition: 0.3s ease-in-out all;
  }
  .sizeguidePanelWrapper.active{display:block;}
  .sizeguidePanelWrapper.visible{opacity:1;}
  .sizeGuideBtnToggle.closeBtn {
  	border:0;
    background:transparent;
    padding:0 1rem;
    color:#4A90E2;
    font-size:1.2rem;
    margin: 0.5rem auto 0;
    text-decoration:underline;
    position: absolute;
    right: 1rem;
    top: 0;
  }
  .sizeGuideBtnToggle.openBtn {
    border:0;
    background:transparent;
    padding:0 1rem;
    color:#4A90E2;
    text-decoration: underline;
    font-size:1.2rem;
  }
  #makeMySelectionsPlusAFreeOnePanel .modalHeader small {
    display: none;
    font-size: 1.2rem;
    color: #d0021b;
  }
  #nudge-getMembershipPopup.addOnIncluded .dashBtnWrapper:before {
  	display: none;
  }
  #nudge-getMembershipPopup.addOnIncluded .dashBtnWrapper {
  	justify-content:space-evenly;
    max-width:550px;
  }
  #nudge-getMembershipPopup.addOnIncluded button#ebyAddToCartPopupSaveBtn {
    width: 48% !important;
  }
  #nudge-getMembershipPopup.addOnIncluded button#ebyAddAnAddonBtn {
    display: block;
    width: 48%;
    padding: 0;
    text-transform: uppercase;
    font-weight: 300;
    font-size: 1.6rem;
  }
  button#ebyAddAnAddonBtn {
  	background: #fff;
    color: #000C48;
  }
  .addonProdAdd s {
    opacity:0.5;
  }
  #nudge-getMembershipPopup #esp-button_wrapper.dashBtnWrapper {
  	padding:0;
  }
  .tap-target-content{text-align:center;}.preloader-wrapper {display: inline-block;position: relative;width: 50px;height: 50px;}.preloader-wrapper.small {width: 36px;height: 36px;}.preloader-wrapper.big {width: 64px;height: 64px;}.preloader-wrapper.active {-webkit-animation: container-rotate 1568ms linear infinite;animation: container-rotate 1568ms linear infinite;}@-webkit-keyframes container-rotate {to {-webkit-transform: rotate(360deg);}}@keyframes container-rotate {to {-webkit-transform: rotate(360deg);transform: rotate(360deg);}}.spinner-layer {position: absolute;width: 100%;height: 100%;opacity: 0;border-color: #26a69a;}.spinner-blue, .spinner-blue-only {border-color: #4285f4;}.spinner-red, .spinner-red-only {border-color: #db4437;}.active .spinner-layer.spinner-blue {-webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both, blue-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both, blue-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;}.active .spinner-layer, .active .spinner-layer.spinner-blue-only {opacity: 1;-webkit-animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;animation: fill-unfill-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;}@-webkit-keyframes fill-unfill-rotate {12.5% {-webkit-transform: rotate(135deg);}25% {-webkit-transform: rotate(270deg);}37.5% {-webkit-transform: rotate(405deg);}50% {-webkit-transform: rotate(540deg);}62.5% {-webkit-transform: rotate(675deg);}75% {-webkit-transform: rotate(810deg);}87.5% {-webkit-transform: rotate(945deg);}to {-webkit-transform: rotate(1080deg);}}@keyframes fill-unfill-rotate {12.5% {-webkit-transform: rotate(135deg);transform: rotate(135deg);}25% {-webkit-transform: rotate(270deg);transform: rotate(270deg);}37.5% {-webkit-transform: rotate(405deg);transform: rotate(405deg);}50% {-webkit-transform: rotate(540deg);transform: rotate(540deg);}62.5% {-webkit-transform: rotate(675deg);transform: rotate(675deg);}75% {-webkit-transform: rotate(810deg);transform: rotate(810deg);}87.5% {-webkit-transform: rotate(945deg);transform: rotate(945deg);}to {-webkit-transform: rotate(1080deg);transform: rotate(1080deg);}}@-webkit-keyframes blue-fade-in-out {from {opacity: 1;}25% {opacity: 1;}26% {opacity: 0;}89% {opacity: 0;}90% {opacity: 1;}100% {opacity: 1;}}@keyframes blue-fade-in-out {from {opacity: 1;}25% {opacity: 1;}26% {opacity: 0;}89% {opacity: 0;}90% {opacity: 1;}100% {opacity: 1;}}.gap-patch {position: absolute;top: 0;left: 45%;width: 10%;height: 100%;overflow: hidden;border-color: inherit;}.gap-patch .circle {width: 1000%;left: -450%;}.circle-clipper {display: inline-block;position: relative;width: 50%;height: 100%;overflow: hidden;border-color: inherit;}.circle-clipper .circle {width: 200%;height: 100%;border-width: 3px;border-style: solid;border-color: inherit;border-bottom-color: transparent !important;border-radius: 50%;-webkit-animation: none;animation: none;position: absolute;top: 0;right: 0;bottom: 0;}.circle-clipper.left .circle {left: 0;border-right-color: transparent !important;-webkit-transform: rotate(129deg);transform: rotate(129deg);}.circle-clipper.right .circle {left: -100%;border-left-color: transparent !important;-webkit-transform: rotate(-129deg);transform: rotate(-129deg);}.active .circle-clipper.left .circle {-webkit-animation: left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;animation: left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;}.active .circle-clipper.right .circle {-webkit-animation: right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;animation: right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both;}@-webkit-keyframes left-spin {from {-webkit-transform: rotate(130deg);}50% {-webkit-transform: rotate(-5deg);}to {-webkit-transform: rotate(130deg);}}@keyframes left-spin {from {-webkit-transform: rotate(130deg);transform: rotate(130deg);}50% {-webkit-transform: rotate(-5deg);transform: rotate(-5deg);}to {-webkit-transform: rotate(130deg);transform: rotate(130deg);}}@-webkit-keyframes right-spin {from {-webkit-transform: rotate(-130deg);}50% {-webkit-transform: rotate(5deg);}to {-webkit-transform: rotate(-130deg);}}@keyframes right-spin {from {-webkit-transform: rotate(-130deg);transform: rotate(-130deg);}50% {-webkit-transform: rotate(5deg);transform: rotate(5deg);}to {-webkit-transform: rotate(-130deg);transform: rotate(-130deg);}}#spinnerContainer.cooldown {-webkit-animation: container-rotate 1568ms linear infinite, fade-out 400ms cubic-bezier(0.4, 0, 0.2, 1);animation: container-rotate 1568ms linear infinite, fade-out 400ms cubic-bezier(0.4, 0, 0.2, 1);}@-webkit-keyframes fade-out {from {opacity: 1;}to {opacity: 0;}}@keyframes fade-out {from {opacity: 1;}to {opacity: 0;}}
</style>
<script type="text/javascript" defer>
"use strict";var Ajaxinate=function(e){var i=e||{},n={pagination:".AjaxinatePagination",method:"scroll",container:".AjaxinateLoop",offset:0,loadingText:"Loading",callback:null};this.settings=Object.assign(n,i),this.addScrollListeners=this.addScrollListeners.bind(this),this.addClickListener=this.addClickListener.bind(this),this.checkIfPaginationInView=this.checkIfPaginationInView.bind(this),this.stopMultipleClicks=this.stopMultipleClicks.bind(this),this.destroy=this.destroy.bind(this),this.containerElement=document.querySelector(this.settings.container),this.paginationElement=document.querySelector(this.settings.pagination),this.initialize()};Ajaxinate.prototype.initialize=function(){if(this.containerElement){var e={click:this.addClickListener,scroll:this.addScrollListeners};e[this.settings.method]()}},Ajaxinate.prototype.addScrollListeners=function(){this.paginationElement&&(document.addEventListener("scroll",this.checkIfPaginationInView),window.addEventListener("resize",this.checkIfPaginationInView),window.addEventListener("orientationchange",this.checkIfPaginationInView))},Ajaxinate.prototype.addClickListener=function(){this.paginationElement&&(this.nextPageLinkElement=this.paginationElement.querySelector("a"),this.clickActive=!0,this.nextPageLinkElement!==null&&this.nextPageLinkElement.addEventListener("click",this.stopMultipleClicks))},Ajaxinate.prototype.stopMultipleClicks=function(e){e.preventDefault(),this.clickActive&&(this.nextPageLinkElement.innerHTML=this.settings.loadingText,this.nextPageUrl=this.nextPageLinkElement.href,this.clickActive=!1,this.loadMore())},Ajaxinate.prototype.checkIfPaginationInView=function(){var e=this.paginationElement.getBoundingClientRect().top-this.settings.offset,i=this.paginationElement.getBoundingClientRect().bottom+this.settings.offset;e<=window.innerHeight&&i>=0&&(this.nextPageLinkElement=this.paginationElement.querySelector("a"),this.removeScrollListener(),this.nextPageLinkElement&&(this.nextPageLinkElement.innerHTML=this.settings.loadingText,this.nextPageUrl=this.nextPageLinkElement.href,this.loadMore()))},Ajaxinate.prototype.loadMore=function(){this.request=new XMLHttpRequest,this.request.onreadystatechange=function(){if(this.request.readyState===4&&this.request.status===200){var i=this.request.responseXML.querySelectorAll(this.settings.container)[0],n=this.request.responseXML.querySelectorAll(this.settings.pagination)[0];this.containerElement.insertAdjacentHTML("beforeend",i.innerHTML),this.paginationElement.innerHTML=n.innerHTML,this.settings.callback&&typeof this.settings.callback=="function"&&this.settings.callback(this.request.responseXML),this.initialize()}}.bind(this),this.request.open("GET",this.nextPageUrl),this.request.responseType="document",this.request.send()},Ajaxinate.prototype.removeClickListener=function(){this.nextPageLinkElement.addEventListener("click",this.stopMultipleClicks)},Ajaxinate.prototype.removeScrollListener=function(){document.removeEventListener("scroll",this.checkIfPaginationInView),window.removeEventListener("resize",this.checkIfPaginationInView),window.removeEventListener("orientationchange",this.checkIfPaginationInView)},Ajaxinate.prototype.destroy=function(){var e={click:this.removeClickListener,scroll:this.removeScrollListener};return e[this.settings.method](),this};

/***
* Call popup for adding a subscription to your cart.
*
* params:
* @modalType(str)     => 'default', 'pdp-curate', 'pdp-custom', 'pdp-trial', 'sc-curate', 'sc-custom', 'sc-trial', 'coll-curate', 'coll-custom', 'coll-trial'
* @opts(obj) 		  => styleGroup(str), colorGroup(str), sizeGroup(str), planGroup(str)
***/
vela.addEbyMembershipBox = function (modalType, opts) {

  console.log(":: init addEbyMembershipBox ::", {
    modalType : modalType,
    opts: opts
  });

  window.opts = opts;

  /* const */
  const WELCOMEID = "34835462357036";
  const SFWH = "46033961004"; // use sub wh
  const ECWH = "46033928236";
  // inputs to update
  let modalBackBtn = jQuery("#backBtnMembershipPopup");
  /**/
  let currBoxSelectionEl = jQuery('#currSelectedMembershipName');
  let orderSummBoxSelectionEl = jQuery('#orderSummMembershipName');
  /**/
  let orderSummBoxSizeEl = jQuery('#orderSummMembershipSize');
  let orderSummBoxColorEl = jQuery('#orderSummMembershipColor');
  let orderSummBoxPlanEl = jQuery('#orderSummMembershipPlan');
  /**/
  let currBoxPlanSelectionEl = jQuery('#renewalScheduleCopy');
  // cache of products for new membership
  let membershipBoxProds = [];
  let curatedMembershipProds = [];
  let freepantyAvail = "";
  let firstpantyAvail = "";
  let customBoxInit = false;
  window.ebp_currstep = 0;
  window.hasPulledAddons = false;
  window.fsba = null;

  let isFreeAddonEnabled = true; // opts.isAddonIncluded
  /*end*/

  /* methods/utils */
  let initAddToCartBtn = function (toggle) {
  	let addToCartBtnEl = jQuery('#ebyAddToCartPopupSaveBtn');
    if (!!toggle) {
    	addToCartBtnEl.prop("disabled", false);
        jQuery('#nudge-getMembershipPopup #esp-button_wrapper.dashBtnWrapper').removeClass('hidden');
      	jQuery('#nudge-getMembershipPopup.ebyNudgePopup .modal-footer').removeClass('disable');
      	jQuery('#nudge-getMembershipPopup .modal-content').removeClass('disable');
    } else {
    	addToCartBtnEl.prop("disabled", true);
      	jQuery('#nudge-getMembershipPopup #esp-button_wrapper.dashBtnWrapper').addClass('hidden');
      	jQuery('#nudge-getMembershipPopup.ebyNudgePopup .modal-footer').addClass('disable');
      	jQuery('#nudge-getMembershipPopup .modal-content').addClass('disable');
    }
  };
  let initPreloader = function (toggle) {
  	let loader = jQuery('.membershipPopupPreloadingContainer');
    if (!!toggle) {
    	loader.fadeIn();
    } else {
    	loader.fadeOut();
    }
  };
  let getSortedCollectionByStock = function (stockLib, prdLib) {

    let stockProdLibrary = stockLib.reduce(function (acc, stockData) {
      if (stockData.location_id === +SFWH) {
        //console.log(':: inventory found ::', stockData.inventory_item_id);
        acc[stockData.inventory_item_id] = stockData.available;
      }

      return acc;
    }, {});

    return prdLib.map(function (prd, index) {
      prd.availQty = stockProdLibrary[prd.inventory_item_id];
      return prd;
    });
  };
  let getSortedCollectionByStockForFp = function (stockLib, prdLib) {

    let stockProdLibrary = stockLib.reduce(function (acc, stockData) {
      if (stockData.location_id === +ECWH) {
        //console.log(':: inventory found ::', stockData.inventory_item_id);
        acc[stockData.inventory_item_id] = stockData.available;
      }

      return acc;
    }, {});

    return prdLib.map(function (prd, index) {
      prd.availQty = stockProdLibrary[prd.inventory_item_id];
      return prd;
    });
  };
  let goToCheckout = function () {

    jQuery.getJSON('/cart.js', function (cart, textStatus) {

      jQuery.ajax({
        type: "POST",
        crossDomain : true,
        url: window.APIDomain+window.otherAPI+"index.php",
        data: {data: cart},
        dataType: 'json',
        success: function(data){
          jQuery('body').removeClass('velaCartAdding');
          var token = data.checkout.token;
          var url = 'https://checkout.rechargeapps.com/r/checkout/'+token;
          //hj('event', 'ebySubToCheckout');

          if (window.offerDataCoupon) {
            //url = `${url}&discount=${window.offerDataCoupon}`;
            url = `${url}`;
          } else {
            url = `${url}`;
          }

          window.ga('set', 'page', '/saved-my-box');
          window.ga('send', 'pageview');

          closeModal();
          // update minicart
          jQuery('.ebyMinicart').removeClass('isEmpty');
          jQuery('#CartCount').text(+jQuery('#CartCount').text() + 1);
          jQuery('#CartCountMobile').text(+jQuery('#CartCount').text() + 1);

          // setTimeout(function () {
          // 	vela.RightDrawer.open();
          //   console.log(':btn update:', url);
          // }, 300);

        }
      });

    });

  };
  /**/
  let checkDisabledAttributeOptions = function () {
  	let currentOpts = opts;
   	// check for sizes to disable
    let disableSizes = {
      online: false,
      restrictedByPlan: [],
      restrictedByColor: []
    };
    // check for plans to disable
    let disablePlans = {
      online: false,
      restrictedByColor: [],
      restrictedBySize: []
    };
    // check for colors to dsiable
    let disableColors = {
      online: false,
      restrictedBySize: [],
      restrictedByPlan: []
    };

    if (!!opts['colorGroup']) {
      	if (opts['colorGroup'] === "neutrals" || opts['colorGroup'] === "nu") {
      		// turn off semi-annual - XS and 1X-4X
            disableSizes.restrictedByColor = ["xs", "1x", "2x", "3x", "4x"];
          	disableSizes.online = true;

          	disablePlans.restrictedByColor = ["semi-annual"];
          	disablePlans.online = true;
        } else {
            disableSizes.restrictedByColor = [];
          	if (!opts['planGroup'] && !opts['sizeGroup']) {
          		disableSizes.online = false;
              	disablePlans.online = false;
          	}

            disablePlans.restrictedByColor = [];
            //disablePlans.online = false;
        }
    }

    if (!!opts['planGroup']) {
      	if (opts['planGroup'] === "semi-annual") {
      		// turn off semi-annual - XS and 1X-4X
            disableSizes.restrictedByPlan = ["xs", "1x", "2x", "3x", "4x"];
          	disableSizes.online = true;

          	disableColors.restrictedByPlan = ["semi-annual"];
          	disableColors.online = true;
        } else {
            disableSizes.restrictedByPlan = [];
          	if (!opts['planGroup'] && !opts['colorGroup']) {
          		disableSizes.online = false;
              	disableColors.online = false;
          	}
            //disableSizes.online = false;

            disableColors.restrictedByPlan = [];
            //disableColors.online = false;
        }
    }

    if (!!opts['sizeGroup']) {
      	let restrictedSizes = ["xs", "1x", "2x", "3x", "4x"];
      	if (restrictedSizes.indexOf(opts['sizeGroup']) >= 0) {
      		// turn off semi-annual - XS and 1X-4X
            disableColors.restrictedBySize = ["neutrals"];
          	disableColors.online = true;

          	disablePlans.restrictedBySize = ["semi-annual"];
          	disablePlans.online = true;
        } else {
            disableColors.restrictedBySize = [];
          	if (!opts['sizeGroup'] && !opts['colorGroup']) {
          		disableColors.online = false;
              	disablePlans.online = false;
          	}
            //disableColors.online = false;

            disablePlans.restrictedBySize = [];
            //disablePlans.online = false;
        }
    }

    // check for updates to be made
    if (!!disableSizes.online) {
      if (disableSizes.restrictedByPlan.length > 0) {
        disableSizes.restrictedByPlan.map(function (valKey, index) {
        	jQuery('#nudge-getMembershipPopup input[name="boxPref-sizes"][data-val="'+valKey+'"]').prop('disabled', true);
        });
      }
      if (disableSizes.restrictedByColor.length > 0) {
        disableSizes.restrictedByColor.map(function (valKey, index) {
        	jQuery('#nudge-getMembershipPopup input[name="boxPref-sizes"][data-val="'+valKey+'"]').prop('disabled', true);
        });
      }
    }
    if (!!disablePlans.online) {
      if (disablePlans.restrictedByColor.length > 0) {
        disablePlans.restrictedByColor.map(function (valKey, index) {
        	jQuery('#nudge-getMembershipPopup input[name="boxPref-plans"][data-val="'+valKey+'"]').prop('disabled', true);
        });
      }
      if (disablePlans.restrictedBySize.length > 0) {
        disablePlans.restrictedBySize.map(function (valKey, index) {
        	jQuery('#nudge-getMembershipPopup input[name="boxPref-plans"][data-val="'+valKey+'"]').prop('disabled', true);
        });
      }
    }
    if (!!disableColors.online) {
      if (disableColors.restrictedBySize.length > 0) {
        disableColors.restrictedBySize.map(function (valKey, index) {
        	jQuery('#nudge-getMembershipPopup input[name="boxPref-colors"][data-val="'+valKey+'"]').prop('disabled', true);
        });
      }
      if (disableColors.restrictedByPlan.length > 0) {
        disableColors.restrictedByPlan.map(function (valKey, index) {
        	jQuery('#nudge-getMembershipPopup input[name="boxPref-colors"][data-val="'+valKey+'"]').prop('disabled', true);
        });
      }
    }

    console.log(":: checked attributes seleted ::", {
      currentOpts: opts,
      disableSizes: disableSizes,
      disablePlans: disablePlans,
      disableColors: disableColors
    });

    if (!disableSizes.online && !disablePlans.online && !disableColors.online) {
    	jQuery('#nudge-getMembershipPopup input[name="boxPref-colors"]').prop('disabled', false);
      	jQuery('#nudge-getMembershipPopup input[name="boxPref-plans"]').prop('disabled', false);
      	jQuery('#nudge-getMembershipPopup input[name="boxPref-sizes"]').prop('disabled', false);
    }

  };
  let resetModal = function () {
  	  // find the inputs that are checked and uncheck them
      jQuery('#nudge-getMembershipPopup .dash-prefChoiceOptions input').prop('checked', false);
      // set panelHide classes to default
      jQuery('.panelContent.panelHide').removeClass('panelHide');
      jQuery('#membershipBoxReview').hide().addClass('panelHide');
      jQuery('#membershipCustomBoxReview').hide().addClass('panelHide');
      jQuery('#changeMyBoxPanel').show();
      jQuery('.chooseStyleGroupWrapper.panelContent').hide();
      jQuery('.chooseStyleGroupWrapperCore.panelContent').show();
      jQuery('.summaryOfMembershipWrapper-a').removeClass('panelHide');
      jQuery('#cbp-summaryWrapper').removeClass('complete');
      jQuery('.summaryOfMembershipWrapper-b').removeClass('panelHide');
      jQuery('#nudge-getMembershipPopup').removeClass('addOnIncluded');

      setTimeout(function () {
        jQuery('.panelContentTwo').addClass('panelHide');
        jQuery('.panelContentFour').addClass('panelHide');
        jQuery('input#cbp_filter_opt-all').prop('checked', true);
        jQuery('#cbp-opt-listing-filters').attr('data-filterset', 'all');
        jQuery('#aos-opt-listing-filters').attr('data-filterset', 'xs');
      },300);
      // set backBtn to default classes
      modalBackBtn.attr('class', 'backBtnMembershipPopup ebyicon-back-link-arrow pOne_tOne');
      initAddToCartBtn(false);
      // set remove any selectedAttr classes
      jQuery('.chooseStyleGroupWrapper .dash-boxChoiceOption').removeClass('selectedAttr');
      jQuery('#cbp-minicart-wrapper').removeClass('online visible');
      jQuery('.panelSlide').removeClass('activeSlide');
      setTimeout(function() {
    	jQuery('#changeMyBoxPanel').addClass('activeSlide');
      }, 300);
      jQuery('#cbp-opt-listing').html('');
      jQuery('#aos-opt-listing').html('');
      jQuery('#cbp-minicart_slot-1').html('');
      jQuery('#cbp-minicart_slot-2').html('');
      jQuery('#cbp-minicart_slot-3').html('');
      membershipBoxProds = [];
      curatedMembershipProds = [];
      opts['styleGroup'] = null;
      opts['colorGroup'] = null;
      opts['sizeGroup'] = null;
      opts['planGroup'] = null;
      customBoxInit = false;
      window.ebp_currstep = 0;
      vela.cbCurrSelections = [];
      jQuery('#sad-summary-title').removeClass('lastSlide');
      jQuery('#cb-summary-title').removeClass('lastSlide');
      jQuery('#allPrefGroupChoiceColors').show();
      jQuery('#allPrefGroupChoicePanties').show();

      membershipBoxProds = [];
      curatedMembershipProds = [];
      freepantyAvail = "";
      firstpantyAvail = "";
      customBoxInit = false;
      window.ebp_currstep = 0;
      window.hasPulledAddons = false;
      window.fsba = null;
      window.opts = null;

      window.ga('set', 'page', '/leaving-my-box');
      window.ga('send', 'pageview');
  };
  let openModal = function () {
      let membershipPopupElem = document.querySelector("#nudge-getMembershipPopup");
      M.Modal.init(membershipPopupElem, {
        preventScrolling : true,
        dismissible : true
      });

      if (!!isFreeAddonEnabled) {
    	// add a class to the whole wrapper
        jQuery('#nudge-getMembershipPopup').addClass('addOnIncluded');
      }

      let membershipPopupModal = M.Modal.getInstance(membershipPopupElem);
      setTimeout(function () {
        membershipPopupModal.open();
      }, 300);

      window.ga('set', 'page', '/start-sub-funnel');
      window.ga('send', 'pageview');
      gtag("event", "popup_sub_funnel-open", { event_category: "psf_event", event_label: "sub_funnel_open", event_value: "" });
  };
  let closeModal = function () {
      let membershipPopupElem = document.querySelector("#nudge-getMembershipPopup");
      let owlPanels = jQuery('#nudge-getMembershipPopup .owl-carousel');
      let membershipPopupModal = M.Modal.getInstance(membershipPopupElem);

      //toDo: reset opts
	  resetModal();
      gtag("event", "popup_sub_funnel-close", { event_category: "psf_event", event_label: "sub_funnel_close", event_value: "" });

   	  membershipPopupModal.close();
      setTimeout(function () {
        membershipPopupModal.destroy();
        owlPanels.trigger('destroy.owl.carousel');
      }, 300);
  };
  /**/
  let checkOptionsProgress = function (opts) {
      	let isReady = true;
      	let attributes = Object.keys(opts);
      	attributes.map(function (attr, index) {
          console.log(':: checkOptionsProgress ::', {attr: attr, index: index });
          if (opts[attr] === null) {
            isReady = false;
          }
        });
        return isReady;
  };

  let checkBoxValues = function (opts) {
  	   let currColorGroup = jQuery('#nudge-getMembershipPopup .colorGroup .colorOptListing input:checked'),
           currSizeGroup  = jQuery('#nudge-getMembershipPopup .sizeOptListing input:checked');

        if (!!currSizeGroup) {
          if (!!currSizeGroup.val() !== opts['sizeGroup']) {
			opts['sizeGroup'] = currSizeGroup.val();
          }
        } else {
          // if there is currently no selection in the modal, then clear the data
          if(!!opts['sizeGroup']) {
          	opts['sizeGroup'] = null;
          }
        }
//     	if (!!currStyleGroup) {
//           if (!!currStyleGroup.val() !== opts['styleGroup']) {
// 			opts['styleGroup'] = currStyleGroup.val();
//           }
//         } else {
//           // if there is currently no selection in the modal, then clear the data
//           if(!!opts['styleGroup']) {
//           	opts['styleGroup'] = null;
//           }
//         }
    	if (!!currColorGroup) {
          if (!!currColorGroup.val() !== opts['colorGroup']) {
            opts['colorGroup'] = currColorGroup.val() === "mixed" || currColorGroup.val() === "mx" ? "mx" : "nu";
          }
        } else {
          // if there is currently no selection in the modal, then clear the data
          if(!!opts['colorGroup']) {
          	opts['colorGroup'] = null;
          }
        }
//     	if (!!currPlanGroup) {
//           if (!!currPlanGroup.val() !== opts['planGroup']) {
// 			opts['planGroup'] = currPlanGroup.val();
//           }
//         } else {
//           // if there is currently no selection in the modal, then clear the data
//           if(!!opts['planGroup']) {
//           	opts['planGroup'] = null;
//           }
//         }

      // update global
      window.opts = opts;
  };
  /**
  * @opts(obj) => attributes and values
  ***/
  let setGivenValues = function (optionsPreselected) {
  	let attributes = Object.keys(optionsPreselected);
    attributes.map(function (attr, index) {
      console.log(':: setGivenValues ::', { attr: attr, index: index, val: optionsPreselected[attr] });

      if (!!optionsPreselected[attr]) {
        let dataInput = "";

      	switch(attr) {
          case "styleGroup":
            currBoxSelectionEl.text(optionsPreselected[attr].replace("_", " "));
            // change btn and highlighted rim of current style group
            orderSummBoxSelectionEl.text(optionsPreselected[attr].replace("_", " "));
            console.log(':: set default styleGroup ::', optionsPreselected[attr]);
            opts['styleGroup'] = optionsPreselected[attr];
            opts['planGroup'] = "quarterly";
            // set backBtn to default classes
            modalBackBtn.attr('class', 'backBtnMembershipPopup ebyicon-back-link-arrow pTwo_tOne');
            jQuery('.panelSlide').removeClass('activeSlide');
            jQuery('#changeMySizePanel').addClass('activeSlide');
            orderSummBoxPlanEl.text("3 Pairs Inside");
            jQuery('#orderSummCusMembershipPlan').text("3 Pairs Inside");
            jQuery('.membershipPlanSelectedTitle').text('3');
            jQuery('.membershipBoxHeaderPrice').text('$39');
            if (opts['styleGroup'] === "custom_box") {
              initAddToCartBtn(false);
              opts['colorGroup'] = null;
              orderSummBoxColorEl.text('');
              //getBoxProgress();
            }
            currBoxSelectionEl.text(optionsPreselected[attr].replace("_", " "));
            orderSummBoxSelectionEl.text(optionsPreselected[attr].replace("_", " ")+ " Box");
            if (optionsPreselected[attr] !== "custom_box") {
              jQuery('.summaryOfMembershipWrapper .membershipBoxSummaryImg').attr('src', 'https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---'+optionsPreselected[attr].replace("_", "-")+'---greyopt.jpg');
            }

            break;
          case "sizeGroup":
            //currBoxSelectionEl.text(index);
            //currBoxSelectionEl.text(optionsPreselected[attr]);
            dataInput = jQuery("input[data-val='"+ optionsPreselected[attr].replace("_", " ") +"']");
            orderSummBoxSizeEl.text(dataInput.attr('data-sizecopy'));
            jQuery('#orderSummCusMembershipSize').text(dataInput.attr('data-sizecopy'));
            dataInput.prop("checked", true);

            // move the slider to where the option is visiable
            let sizeSlider = jQuery('.ebyNudgePopupInnerWrapper .capsuleMode')[0];

            setTimeout(function () {
                switch(optionsPreselected[attr]) {
                  case "md":
                    sizeSlider.scrollLeft = 150;
                    break;
                  case "lg":
                    sizeSlider.scrollLeft = 275;
                    break;
                  case "xl":
                    sizeSlider.scrollLeft = 400;
                    break;
                  case "1x":
                    sizeSlider.scrollLeft = 525;
                    break;
                  case "2x":
                    sizeSlider.scrollLeft = 650;
                    break;
                  case "3x":
                    sizeSlider.scrollLeft = 775;
                    break;
                  case "4x":
                    sizeSlider.scrollLeft = 820;
                    break;
                }
            }, 750);

            break;
          case "colorGroup":
            //currBoxSelectionEl.text(index);
            dataInput = jQuery("input[data-val='"+ optionsPreselected[attr].replace("_", " ") +"']");
            orderSummBoxColorEl.text(dataInput.attr('data-colorcopy'));
            dataInput.prop("checked", true);

            break;
          case "planGroup":
            //currBoxSelectionEl.text(index);

            dataInput = jQuery("input[data-val='"+ optionsPreselected[attr] +"']");
            orderSummBoxPlanEl.text(dataInput.attr('data-plancopy'));
            jQuery('#orderSummCusMembershipPlan').text(dataInput.attr('data-plancopy'));
            dataInput.prop("checked", true);

            // update price elems
            if (optionsPreselected[attr] === 'quarterly') {
            	jQuery('.membershipPlanSelectedTitle').text('3');
              	jQuery('.membershipBoxHeaderPrice').text('$39');
            } else if (optionsPreselected[attr] === 'semi-annual') {
            	jQuery('.membershipPlanSelectedTitle').text('6');
              	jQuery('.membershipBoxHeaderPrice').text('$65');
            }

            break;

          case "firstPantySelected":

            if (!!opts.firstPantySelected) {
              let firstProdVarId = opts.firstPantySelected.split("::")[0];
              console.log(": please add preselected product too :", firstProdVarId);

              var cbProdId = opts.firstPantySelected.split("::")[1],
                    cbProdVarId = firstProdVarId,
                    cbProdInfoStyle = opts.firstPantySelected.split("::")[3],
                    cbProdInfoColor = opts.firstPantySelected.split("::")[4],
                    cbProdInfo = cbProdInfoStyle.replace(/_/g, " ") + ":" + cbProdInfoColor.replace(/_/g, " ");
              // start loaders

              let prodCard = getCustomBoxCard(cbProdVarId, cbProdId, cbProdInfo);

              console.log(':: NEW cbPrd added ::', {
                cbBoxItem : prodCard
              });

              // custom box has started
              customBoxInit = true;
              addPrdToBox(prodCard);

              
          	}
            
            break;
        }
      }
    });
    // check if values need to be disabled
    checkDisabledAttributeOptions();
  };
  let saveBoxAttribute = function (attrVal, btn) {
      let attrKey = "";
      console.log(':: save attribute value init ::', {attrVal: attrVal, btn: btn});
      // update the popup copy
      if (btn.name === "update-styleGroup") {
          switch (attrVal) {
            case "custom_box":
              attrKey = "cb";
              currBoxSelectionEl.text(attrVal.replace("_", " "));
              orderSummBoxSelectionEl.text(attrVal.replace("_", " "));
              break;
            case "mixed_styles":
              attrKey = "mx";
              currBoxSelectionEl.text(attrVal.replace("_", " "));
              orderSummBoxSelectionEl.text(attrVal.replace("_", " ")+ " Box");
              // replace image
              jQuery('.summaryOfMembershipWrapper .membershipBoxSummaryImg').attr('src', 'https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---'+attrVal.replace("_", "-")+'---greyopt.jpg');
              break;
            case "full_coverage":
              attrKey = "fc";
              currBoxSelectionEl.text(attrVal.replace("_", " "));
              orderSummBoxSelectionEl.text(attrVal.replace("_", " ")+ " Box");
              jQuery('.summaryOfMembershipWrapper .membershipBoxSummaryImg').attr('src', 'https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---'+attrVal.replace("_", "-")+'---greyopt.jpg');
              break;
            case "all_highwaisted":
              attrKey = "hw";
              currBoxSelectionEl.text(attrVal.replace("_", " "));
              orderSummBoxSelectionEl.text(attrVal.replace("_", " ")+ " Box");
              jQuery('.summaryOfMembershipWrapper .membershipBoxSummaryImg').attr('src', 'https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---'+attrVal.replace("_", "-")+'---greyopt.jpg');
              break;
            case "all_thongs":
              attrKey = "at";
              currBoxSelectionEl.text(attrVal.replace("_", " "));
              orderSummBoxSelectionEl.text(attrVal.replace("_", " ")+ " Box");
              jQuery('.summaryOfMembershipWrapper .membershipBoxSummaryImg').attr('src', 'https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---'+attrVal.replace("_", "-")+'---greyopt.jpg');
              break;
            case "all_briefs":
              attrKey = "ab";
              currBoxSelectionEl.text(attrVal.replace("_", " "));
              orderSummBoxSelectionEl.text(attrVal.replace("_", " ")+ " Box");
              jQuery('.summaryOfMembershipWrapper .membershipBoxSummaryImg').attr('src', 'https://cdn.shopify.com/s/files/1/0313/4062/5964/files/sub-pop---'+attrVal.replace("_", "-")+'---greyopt.jpg');
              break;
          }
          // set highlighted areas of popup
          jQuery(btn).closest('.'+attrKey).addClass('selectedAttr');
      }

      // save to data object
      if (btn.name === "update-styleGroup") {
          opts['styleGroup'] = attrVal;
          opts['planGroup'] = 'quarterly';
          orderSummBoxPlanEl.text("3 Pairs Inside");
          jQuery('#orderSummCusMembershipPlan').text("3 Pairs Inside");
          jQuery('.membershipPlanSelectedTitle').text('3');
          jQuery('.membershipBoxHeaderPrice').text('$39');
          if (opts['styleGroup'] === "custom_box") {
            initAddToCartBtn(false);
            opts['colorGroup'] = null;
        	orderSummBoxColorEl.text('');
            //getBoxProgress();
          }

      } else if (btn.name === "boxPref-colors") {
		  //opts['colorGroup'] = attrVal;
          orderSummBoxColorEl.text(btn.getAttribute('data-colorcopy'));
      } else if (btn.name === "boxPref-sizes") {
      	  //opts['sizeGroup'] = attrVal;
          orderSummBoxSizeEl.text(btn.getAttribute('data-sizecopy'));
          jQuery('#orderSummCusMembershipSize').text(btn.getAttribute('data-sizecopy'))
          if (opts['styleGroup'] === "custom_box") {
        	// get cb products now
            console.log(': init pull cb products :', attrVal);
            fillInCbProdListing(btn.getAttribute('data-val'));
            // init the minicart
            jQuery('#cbp-minicart-wrapper').addClass('online');
            setTimeout(function () {
            	jQuery('#cbp-minicart-wrapper').addClass('visible');
            }, 200);
            
            if (vela.cbCurrSelections.length > 0 && !!opts['firstPantySelected']) {
              console.log(': custom box started already :');
            } else {
              vela.cbCurrSelections = [];
            }

          }

      } else if (btn.name === "boxPref-plans") {
      	  //opts['planGroup'] = attrVal;
          if (attrVal === "quarterly") {
        	 orderSummBoxPlanEl.text("3 Panty");
             jQuery('.membershipPlanSelectedTitle').text('3');
             jQuery('.membershipBoxHeaderPrice').text('$39');
          } else if (attrVal === "semi-annual") {
          	 orderSummBoxPlanEl.text("6 Panty");
             jQuery('.membershipPlanSelectedTitle').text('6');
             jQuery('.membershipBoxHeaderPrice').text('$65');
          } else {
           	 orderSummBoxPlanEl.text("1 Panty");
             jQuery('.membershipPlanSelectedTitle').text('1');
          }
      }

      console.log(":: opts updated ::", opts);

      // navigate
      if (!!opts['styleGroup'] && !!opts['colorGroup'] && !!opts['sizeGroup'] && !!opts['planGroup']) {
        // navigate to order summary
        console.log(':: navigate to order summary ::');
        // check position of panels
        if (btn.name === "update-styleGroup") {
        	// jump 2


          	//toggleBoxPanels();

          	if (opts['styleGroup'] === "custom_box") {
          		toggleOrderSummaryPanel('b');
          	} else {
          		toggleOrderSummaryPanel('a');
          	}

          	let panelKey = 1;
          	let panelId = "changeMySizePanel";
          	if (btn.name === "boxPref-sizes") {

                if (opts['styleGroup'] === "custom_box") {
                  panelKey = 3;
                  panelId = "makeMySelectionsPanel";
                } else {
                  panelKey = 2;
                  panelId = "changeMyColorPanel";
                }

          	}
            if (btn.name === "boxPref-colors") {
              console.log(': check if color panel needed :');
              panelKey = 3;
              panelId = "orderSummary-a";
            }
          	console.log(':: navigate to next panel ::', panelId);
          	toggleBoxPanels(panelId);
          	window.ebp_currstep += 1;
          	jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', 1);

        } else {
        	// jump 1
            if (opts['styleGroup'] === "custom_box") {
              toggleOrderSummaryPanel('b');
            } else {
              toggleOrderSummaryPanel('a');
            }
        }
      } else {
        if (btn.name === "update-styleGroup" || btn.name === "boxPref-sizes" || btn.name === "boxPref-colors") {
        	// navigate to pre panel
          	let panelKey = 1;
          	let panelId = "changeMySizePanel";
          	if (btn.name === "boxPref-sizes") {

                if (opts['styleGroup'] === "custom_box") {
                  panelKey = 3;
                  panelId = "makeMySelectionsPanel";
                } else {
                  panelKey = 2;
                  panelId = "changeMyColorPanel";
                }

          	}
            if (btn.name === "boxPref-colors") {
              console.log(': check if color panel needed :');
              panelKey = 3;
              panelId = "orderSummary-a";
            }
          	console.log(':: navigate to next panel ::', panelId);
          	toggleBoxPanels(panelId);
            //setTimeout(function (){
          	  window.ebp_currstep += 1;
              jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', panelKey);
            //},300);
        }
      }
  };
  let toggleBoxPanels = function (panelId) {
    //if (panelId === "orderSummary-a") {
    	// last screen
    //  	toggleOrderSummaryPanel('a');
    //} else {
        if (!!jQuery('.panelSlide').hasClass('activeSlide')) {
          jQuery('.panelSlide').each(function (index, slide) {
          	jQuery(slide).fadeOut(200).removeClass('activeSlide');
          });
          setTimeout(function () {
            jQuery('#'+panelId).fadeIn(200).addClass('activeSlide');
          }, 200);
        }
    //}

//     if (!!jQuery('.chooseStyleGroupWrapperCore').hasClass('panelHide')){
//         jQuery('.chooseStyleGroupWrapper').fadeOut().addClass('panelHide');
//         setTimeout(function () {
//           jQuery('.chooseStyleGroupWrapperCore').fadeIn().removeClass('panelHide');
//         }, 300);
//     }
  };
  /* pull the first 40 products and set up ajax paginate on the listing panel */
  let fillInCbProdListing = function (pantySize) {
    console.log(': start pull of cb :', pantySize);

    var ebyLazyLoad = function lazyLoader() { /* the document is now ready. */

      var lazyEls = [].slice.call(document.querySelectorAll("[data-src]"));

      function load(el) {
        var src = el.getAttribute("data-src");
        var srcset = el.getAttribute("data-srcset");
        
        if (src) { el.setAttribute("src", src); }
        if (srcset) { el.setAttribute("srcset", srcset); }
        el.removeAttribute("data-src");
        el.removeAttribute("data-srcset");
        el.classList.add("lazyloaded");
      }
      if ("IntersectionObserver" in window) {
        var lazyObserver = new IntersectionObserver(function(entries) {
          entries.forEach(function(entry) {
            if (entry.isIntersecting) {
              var el = entry.target;
              load(el);
              lazyObserver.unobserve(el);
            }
          });
        });

        lazyEls.forEach(function(el) {
          if (el.tagName === "SCRIPT") {
            load(el);
          }
          else {
            lazyObserver.observe(el);
          }
        });
      }
      else {
        lazyEls.forEach(load);
      }
      /* background lazyloading by class:visible */
      var lazyBackgrounds = [].slice.call(document.querySelectorAll(".lazy-background"));
      if ("IntersectionObserver" in window) {
        var lazyBackgroundObserver = new IntersectionObserver(function(entries, observer) {
          entries.forEach(function(entry) {
            if (entry.isIntersecting) {
              entry.target.classList.add("visible");
              lazyBackgroundObserver.unobserve(entry.target);
            }
          });
        });
        lazyBackgrounds.forEach(function(lazyBackground) {
          lazyBackgroundObserver.observe(lazyBackground);
        });
      }

    };

    var endlessScroll = new Ajaxinate({
        container: '#cbp-opt-listing',
        pagination: '#cbp-opt-pagination',
        offset: 1000,
        callback: function (e) {
          console.log(":: cbp-opt-pagination init ::", e);
          ebyLazyLoad();

          // potentially set up an event listener if they dont behave
      
      //           vela.cbSelectionsData.map(function (prod, index) {
      //             console.log(':: collStockedProdData ::', prod);
      //             if (prod.availQty > 1) {
      //               console.log(':: collStockedProdData, availQty ::', prod);
      //               jQuery('.ebyProdTile[data-prodsku="'+ prod.prodId +'"]').addClass('inStock');
      //               //setTimeout(function() {
      //               jQuery('.ebyProdTile[data-prodsku="'+ prod.prodId +'"]').find('.saleItemOptVal').val(prod.variantId);
      //               jQuery('.ebyProdTile[data-prodsku="'+ prod.prodId +'"]').find('.customBoxProdAdd.btnAddToCart').val(prod.variantId);
      //               //},100);
      //             }
      //           });

        }
    });

    var selectionData = {
      moduleId: "custombox_selections",
      modalSelectors: ".ebyCustomBoxModal",
      modalMinicartSelector: "#ebyCustomBoxModal",
      modalHowToSelector: ".cbHowToGuide",
      modalAlertSelector: "#ebyCustomBoxModalAlert",
      toolBarSelector: ".customboxToolbar",
      primarySorterSelector: ".sizeType .sizeOptListing",
      defaultOpt: "pantySize",
      defaultVal: "xs",
      isDiscountApplied: true
    };


    // if there is a panty of interest already

    window.ebyAjax(
      "GET",
      window.location.origin +'/collections/build-your-custom-box/products.json?limit=200',
      function (data) {
        //console.log(':: fire complete ::', data);
        window.cbFirstBoxProdData = JSON.parse(data).products;

        selectionData["selectedVal"] = pantySize;
        selectionData["frequency"] = "3";
        selectionData["defaultVal"] = pantySize;

      	// run func to make markup
      	console.log(': cb prod data ready for use :', window.cbFirstBoxProdData);
        let prodTileListingMarkup = "";

        // get all product ids and check their stock
        let cbProdIdList = window.cbFirstBoxProdData.reduce(function (acc, item) {
          acc += "," + item.id;
          return acc;
        }, "");

        cbProdIdList = cbProdIdList.slice(1);

        //var cleanCbProdData = ebyStockCheckApi(cbProdIdList, "ecomm");

        jQuery.ajax({
            type: "POST",
            crossDomain: !0,
            async: !0,
            url: window.APIDomain + window.otherAPI + "eby_stockcheck.php",
            data: { data: { variantOpt: "pantySize", variantOptVal: pantySize, prodIdList: cbProdIdList, warehouseKey:  "ecomm"} },
            beforeSend: function () {
                initPreloader(true);
            },
            dataType: "json",
            headers: { Authorization: "Bearer ddd345d2498c7717a7bbbe86d9d145dc", "Access-Control-Allow-Origin": "*" },
            success: function (a) {
                console.log(':: successful stock check api ::', a);
                initPreloader(false);
                if (a) {
                    let inventoryLibrary = a.inventoryHealthcheck.reduce(function(acc, invItem){ acc[invItem.inventory_item_id] = invItem.available; return acc;}, {});
    
                    let finalCbProdData = a.prodInventoryData.reduce(function (acc, item) {
                        acc[item.prodId] = inventoryLibrary[item.inventory_item_id];
                        return acc;
                    }, {});

                    window.cbFirstBoxProdData.map(function (item, index) {
                      console.log(': cb item payload :', item);
                      let availQty = finalCbProdData[item.id];

                      let isMembershipCopy = item.product_type === "Subscription Box" ? " isMembership" : " pTile";
                      let membershipInput = "";
                      let prodNameTitle = "";
                      let prodColorTitle = "";
                      let prodFabricTitle = "";
            
                      let sizesArray = ["xs", "sm", "md", "lg", "xl", "1x", "2x", "3x", "4x"];
                      let sizeVariantIndexKey = sizesArray.indexOf(pantySize);
                      if (!item.variants[sizeVariantIndexKey]) {
                        return;
                      }

                      if (availQty > 5) {
                          if (item.title.indexOf("Quarterly") >= 0) {
                          	membershipInput = "<input type='hidden' name='cbTilePrdId' id='cbTilePrdId-quarterly' value='"+ item.variants[sizeVariantIndexKey].id +"' />";
                          } else {
                          	membershipInput = "<input type='hidden' name='cbTilePrdId' id='cbTilePrdId-semi_annual' value='"+ item.variants[sizeVariantIndexKey].id +"' />";
                          }
                
                          item.tags.map(function (tag, index) {
                            if (tag.indexOf('pantyType-') >= 0 ) {
                              prodNameTitle = tag.replace("pantyType-", "").replace(/_/g, " ");
                            }
                            if (tag.indexOf('pantyColor-') >= 0 ) {
                              prodColorTitle = tag.replace("pantyColor-", "").replace(/_/g, " ");
                            }
                            if (tag.indexOf('pantyFabric-') >= 0 ) {
                              prodFabricTitle = tag.replace("pantyFabric-", "").replace(/_/g, " ");
                            }
                          });
                
                          if (item.images[0] === undefined) {
                            item.images[0] = {
                              src: "https://cdn.shopify.com/s/files/1/0313/4062/5964/files/480_-_PROD_-_subscription_-_default.jpg"
                            }
                          }
                
                          let prodTileMarkup = "<div class='item ebyProdTile saleProdTile newRelease"+ isMembershipCopy +"' data-addon-pprice='"+ +item.variants[0].price +"' data-pstyle='"+ prodNameTitle.replace(/ /g, "_") +"' data-pfabric='"+ prodFabricTitle.replace(/ /g, "_") +"'><div class='velaProBlock grid saleProdTileWrapper customBoxProdTile'><div class='velaProBlockInner'><div class='proHImage d-flex flexJustifyCenter saleProdHeader'><div class='proFeaturedImage'><img class='t1 img-responsive missy lazyload' alt='"+ item.title +"' data-src='"+ item.images[0].src +"' data-prodId='"+ item.id +"' width='157' height='231' /></div><div class='saleProdColorWrapper'><p class='saleProdColor'>"+prodFabricTitle+"</p></div></div><div class='proContent saleProdFooter'><div class='saleProdFooterCol'><h5 class='proName saleProdName'>"+ prodNameTitle +"</h5><p class='saleProdColor'>"+prodColorTitle+"</p><div class='proReviews'><span class='shopify-product-reviews-badge' data-id='"+ item.id +"'></span></div></div><div class='saleProdFooterCol buttonWrapperCol'><input class='saleItemOptVal' type='hidden' name='id' value='"+ item.variants[sizeVariantIndexKey].id +"' /><button class='btn customBoxProdAdd inStock btnAddToCart' data-prodId='"+ item.id +"' data-prodCard='"+ prodNameTitle +":"+ prodColorTitle +"' value='"+ item.variants[sizeVariantIndexKey].id +"'>Add</button></div></div></div></div>"+ membershipInput +"</div>";
                
                          prodTileListingMarkup += prodTileMarkup;
                      }
            
                      // if (!!item.variants[sizeVariantIndexKey]) {
                      //   if (!item.variants[sizeVariantIndexKey].available) {
                      //     return;
                      //   }
                      // } else {
                      // 	return;
                      // }
            
                    });
                    //vela.cbSelections(selectionData, window.cbFirstBoxProdData);
            
                    jQuery("#cbp-opt-listing").html(prodTileListingMarkup);
                    ebyLazyLoad();
                    
                }
            },
            error: function (a, b) {
                console.log("::stockcheck failure::", { text: b, xhr: a });
            },
        });

        /*
        window.cbFirstBoxProdData.map(function (item, index) {
          console.log(': cb item payload :', item);

          let isMembershipCopy = item.product_type === "Subscription Box" ? " isMembership" : " pTile";
          let membershipInput = "";
          let prodNameTitle = "";
          let prodColorTitle = "";
          let prodFabricTitle = "";

          let sizesArray = ["xs", "sm", "md", "lg", "xl", "1x", "2x", "3x", "4x"];
          let sizeVariantIndexKey = sizesArray.indexOf(pantySize);

          if (!!item.variants[sizeVariantIndexKey]) {
            if (!item.variants[sizeVariantIndexKey].available) {
              return;
            }
          } else {
          	return;
          }

          if (item.title.indexOf("Quarterly") >= 0) {
          	membershipInput = "<input type='hidden' name='cbTilePrdId' id='cbTilePrdId-quarterly' value='"+ item.variants[sizeVariantIndexKey].id +"' />";
          } else {
          	membershipInput = "<input type='hidden' name='cbTilePrdId' id='cbTilePrdId-semi_annual' value='"+ item.variants[sizeVariantIndexKey].id +"' />";
          }

          item.tags.map(function (tag, index) {
            if (tag.indexOf('pantyType-') >= 0 ) {
              prodNameTitle = tag.replace("pantyType-", "").replace(/_/g, " ");
            }
            if (tag.indexOf('pantyColor-') >= 0 ) {
              prodColorTitle = tag.replace("pantyColor-", "").replace(/_/g, " ");
            }
            if (tag.indexOf('pantyFabric-') >= 0 ) {
              prodFabricTitle = tag.replace("pantyFabric-", "").replace(/_/g, " ");
            }
          });

          if (item.images[0] === undefined) {
            item.images[0] = {
              src: "https://cdn.shopify.com/s/files/1/0313/4062/5964/files/480_-_PROD_-_subscription_-_default.jpg"
            }
          }

          let prodTileMarkup = "<div class='item ebyProdTile saleProdTile newRelease"+ isMembershipCopy +"' data-addon-pprice='"+ +item.variants[0].price +"' data-pstyle='"+ prodNameTitle.replace(/ /g, "_") +"' data-pfabric='"+ prodFabricTitle.replace(/ /g, "_") +"'><div class='velaProBlock grid saleProdTileWrapper customBoxProdTile'><div class='velaProBlockInner'><div class='proHImage d-flex flexJustifyCenter saleProdHeader'><div class='proFeaturedImage'><img class='t1 img-responsive missy lazyload' alt='"+ item.title +"' data-src='"+ item.images[0].src +"' data-prodId='"+ item.id +"' width='157' height='231' /></div><div class='saleProdColorWrapper'><p class='saleProdColor'>"+prodFabricTitle+"</p></div></div><div class='proContent saleProdFooter'><div class='saleProdFooterCol'><h5 class='proName saleProdName'>"+ prodNameTitle +"</h5><p class='saleProdColor'>"+prodColorTitle+"</p><div class='proReviews'><span class='shopify-product-reviews-badge' data-id='"+ item.id +"'></span></div></div><div class='saleProdFooterCol buttonWrapperCol'><input class='saleItemOptVal' type='hidden' name='id' value='"+ item.variants[sizeVariantIndexKey].id +"' /><button class='btn customBoxProdAdd inStock btnAddToCart' data-prodId='"+ item.id +"' data-prodCard='"+ prodNameTitle +":"+ prodColorTitle +"' value='"+ item.variants[sizeVariantIndexKey].id +"'>Add</button></div></div></div></div>"+ membershipInput +"</div>";

          prodTileListingMarkup += prodTileMarkup;

        });
        */
        //vela.cbSelections(selectionData, window.cbFirstBoxProdData);

        //jQuery("#cbp-opt-listing").html(prodTileListingMarkup);
        //ebyLazyLoad();

      }
    );
  };
  let toggleOrderSummaryPanel = function (type) {
    if (type === 'a') {
        jQuery('.allPrefGroupChoiceColor').fadeOut().addClass('panelHide');
      	jQuery('#sad-summary-title').toggleClass('lastStep');
        setTimeout(function () {
          jQuery('.summaryOfMembershipWrapper-a').fadeIn().removeClass('panelHide');
        }, 200);
    }
    if (type === 'b') {
      console.log('UPDATE CB header');
      jQuery('.allPrefGroupChoicePanties').fadeOut().addClass('panelHide');
      setTimeout(function () {
        jQuery('.summaryOfMembershipWrapper-b').fadeIn().removeClass('panelHide');
      }, 200);
    }
  };
  let navigateBackOne = function (btn) {

    let classKey = btn.className.replace('backBtnMembershipPopup ebyicon-back-link-arrow ', '');

    console.log(': navigate request :', classKey);
    let lastStep = "";

    switch(classKey) {
        //       case "pOne_tTwo":
        //         	modalBackBtn.removeClass('pOne_tOne').addClass('pOne_tTwo');
        //         break;
      case "pTwo_tOne":
        console.log(': navigate request back :', "pTwo_tOne - 1");

        window.ebp_currstep -= 1;
        lastStep = window.ebp_currstep;

        modalBackBtn.removeClass('pTwo_tOne').addClass('pOne_tOne');
        jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', lastStep);
        toggleScreens({
          "on": "#changeMyBoxPanel",
          "off": "#changeMySizePanel"
        });

        break;
      case "pThreeA_tOne":
        console.log(': navigate request back :', "pThreeA_tOne - 1");

        window.ebp_currstep -= 1;
        lastStep = window.ebp_currstep;

        opts["colorGroup"] = null;
        window.opts["colorGroup"] = null;

        modalBackBtn.removeClass('pThreeA_tOne').addClass('pTwo_tOne');
        jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', lastStep);
        toggleScreens({
          "on": "#changeMySizePanel",
          "off": "#changeMyColorPanel"
        });

        break;
      case "pThreeB_tOne":
        console.log(': navigate request back :', "pThreeB_tOne - 1");

        window.ebp_currstep -= 1;
        lastStep = window.ebp_currstep;

        // hide minicart
        jQuery('#cbp-minicart-wrapper').removeClass('online visible');

        modalBackBtn.removeClass('pThreeB_tOne').addClass('pTwo_tOne');
        jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', lastStep);
        toggleScreens({
          "on": "#changeMySizePanel",
          "off": "#makeMySelectionsPanel"
        });

        break;

      case "pThreeA_tTwo":
        console.log(': navigate request back :', "pThreeA_tTwo - 1");

        let sizesArray = ["sm", "md", "lg", "xl"];
              
        if (sizesArray.indexOf(window.opts.sizeGroup) < 0) {
          // skip the colorGroup screen
          window.ebp_currstep -= 1;
          lastStep = window.ebp_currstep;

          opts["colorGroup"] = null;
          window.opts["colorGroup"] = null;
          //opts["planGroup"] = null;
          //window.opts["colorGroup"] = null;

          jQuery('.allPrefGroupChoiceColor').fadeIn().removeClass('panelHide');
          jQuery('#sad-summary-title').removeClass('lastStep');
          setTimeout(function () {
            jQuery('.summaryOfMembershipWrapper-a').fadeOut().addClass('panelHide');
          }, 200);
          
          modalBackBtn.removeClass('pThreeA_tTwo').addClass('pTwo_tOne');
          jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', lastStep);
          toggleScreens({
            "on": "#changeMySizePanel",
            "off": "#changeMyColorPanel"
          });
  
          initAddToCartBtn(false);

        } else {
          modalBackBtn.removeClass('pThreeA_tTwo').addClass('pThreeA_tOne');
          jQuery('#sad-summary-title').removeClass('lastStep');
          //let prevStep = window.ebp_currstep - 1;
          //jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', prevStep);
          toggleScreens({
            "on": "#allPrefGroupChoiceColors",
            "off": "#membershipBoxReview"
          });
  
          initAddToCartBtn(false);
        }

        

        //modalBackBtn.removeClass('pThreeA_tOne').addClass('pThreeA_tTwo');
        break;
      case "pThreeB_tTwo":
        console.log(': navigate request back :', "pThreeB_tTwo - 1");

        modalBackBtn.removeClass('pThreeB_tTwo').addClass('pThreeB_tOne');
        //let prevStep = window.ebp_currstep - 1;
        //jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', prevStep);
        jQuery('#cb-summary-title').toggleClass('lastStep');
        toggleScreens({
          "on": "#allPrefGroupChoicePanties",
          "off": "#membershipCustomBoxReview"
        });

        initAddToCartBtn(false);
//         let prevStep = window.ebp_currstep - 1;
//         jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', prevStep);
        //modalBackBtn.removeClass('pThreeB_tOne').addClass('pThreeB_tTwo');
        break;

        case "pFour_tOne":

          console.log(': navigate request back :', "pFour_tOne - 1");



          if (opts['styleGroup'] === "custom_box") {

            window.ebp_currstep = 2;
            lastStep = window.ebp_currstep;

            modalBackBtn.removeClass('pFour_tOne').addClass('pThreeB_tTwo');
            jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', 3);

            toggleBoxPanels("makeMySelectionsPanel");
            initAddToCartBtn(true);
            jQuery("#ebyAddAnAddonBtn").removeClass('hidden');

            toggleScreens({
              "on": "#membershipCustomBoxReview",
              "off": "#makeMySelectionsPlusAFreeOnePanel"
            });
          } else {
            window.ebp_currstep -= 1;
            lastStep = window.ebp_currstep;

            modalBackBtn.removeClass('pFour_tOne').addClass('pThreeA_tTwo');
            jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', lastStep);

            toggleBoxPanels("changeMyColorPanel");
            initAddToCartBtn(true);
            jQuery("#ebyAddAnAddonBtn").removeClass('hidden');

            toggleScreens({
              "on": "#membershipBoxReview",
              "off": "#makeMySelectionsPlusAFreeOnePanel"
            });
          }



          break;
    }

//     if (!jQuery('.summaryOfMembershipWrapper').hasClass('panelHide')) {
//       // back up to the latest half step
//       console.log('what to do here?', jQuery('.summaryOfMembershipWrapper:not(".panelHide")'));

//     } else {
//       let prevStep = window.ebp_currstep - 1;
//       jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', prevStep);

//     }

  };
  let toggleScreens = function (config) {

    jQuery(config.off).fadeOut(200).removeClass('activeSlide');
    setTimeout(function () {
      jQuery(config.on).fadeIn(200).addClass('activeSlide');
    }, 200);

  };
  let updateBackBtn = function (key) {

    switch(key) {
//       case "pOne_tTwo":
//         	modalBackBtn.removeClass('pOne_tOne').addClass('pOne_tTwo');
//         break;
      case "pTwo_tOne":
        	modalBackBtn.removeClass('pOne_tOne').addClass('pTwo_tOne');
        break;
      case "pThreeA_tOne":
        	modalBackBtn.removeClass('pTwo_tOne').addClass('pThreeA_tOne');
        break;
      case "pThreeB_tOne":
        	modalBackBtn.removeClass('pTwo_tOne').addClass('pThreeB_tOne');
        break;

      case "pThreeA_tTwo":
            if (!!modalBackBtn.hasClass('pTwo_tOne')) {
              modalBackBtn.removeClass('pTwo_tOne');
            }
        	modalBackBtn.removeClass('pThreeA_tOne').addClass('pThreeA_tTwo');
        break;
      case "pThreeB_tTwo":
        	modalBackBtn.removeClass('pThreeB_tOne').addClass('pThreeB_tTwo');
        break;

      case "pFour_tOne":
        	modalBackBtn.removeClass('pThreeB_tTwo pThreeA_tTwo').addClass('pFour_tOne');
        break;
    }
  };

  let checkAddToCartBtn = function (prodsToCheck) {
    console.log(":: enableAddToCartBtn ::", prodsToCheck);
    let boxCapacity = 3;

    switch (opts['planGroup']) {
      case "quarterly":
        boxCapacity = 3;
        break;
      case "semi-annual":
        boxCapacity = 5;
        break;
      case "trial":
        boxCapacity = 1;
        break;
    };

    // great stock to lowest
    prodsToCheck.sort(function (a, b) {
      return b.availQty - a.availQty;
    });

    let finalProdsData = prodsToCheck.reduce(function (acc, prod) {
      //console.log(':: parse prods for the best units to allocate ::', prod);
      if (acc.output.length === acc.bc) {
        acc.isCurated = true;
      	return acc;
      }

      if (prod.availQty > 1 && prod.prodType !== "Subscription Box") {
      	acc.output.push(prod);
      }

      return acc;
    }, {input: opts, output: curatedMembershipProds, isCurated: false, bc: boxCapacity});

    let finalBoxData = prodsToCheck.reduce(function (acc, prod) {
      //console.log(':: parse prods for the styles box ::', prod);
      if (prod.availQty > 1 && prod.prodType === "Subscription Box") {
      	acc.push(prod);
      }

      return acc;
    }, []);

    if (finalProdsData.output.length === boxCapacity) {
      finalProdsData.isCurated = true;
    }

    // set final products only if membership box is in stock and box is curated
    if (!!finalBoxData[0] && !!finalProdsData.isCurated ) {
        curatedMembershipProds.unshift(finalBoxData[0]);

        console.log(":: success, membership box ready for cart ::", {
          curatedBox: curatedMembershipProds
        });

      	return curatedMembershipProds;

    } else {
        console.log(":: ERROR :: there is no membership box or curated products in stock", {
          box: finalBoxData,
          curatedProds: finalProdsData
        });

      	return null;
    }

  };
  /**/
  let pullFirstBoxMembership = function (optSelections) {
	// check that all values are correct
    checkBoxValues(optSelections);
    // find the value of the given membership box
    switch (optSelections["styleGroup"]) {
      case "mixed_styles":
        optSelections["styleGroup"] = "mx";
        break;
      case "full_coverage":
        optSelections["styleGroup"] = "fc";
        break;
      case "all_highwaisted":
        optSelections["styleGroup"] = "hw";
        break;
      case "all_thongs":
        optSelections["styleGroup"] = "at";
        break;
      case "all_briefs":
        optSelections["styleGroup"] = "ab";
        break;
    }

    let membershipKey = optSelections["styleGroup"] + "-" + optSelections["colorGroup"] + "-" + optSelections["planGroup"];

  	console.log(":: init pullFirstBoxMembership::", membershipKey);

    jQuery.getJSON('https://shop.join-eby.com/collections/first-box-'+membershipKey+'-assortment.json', function(data) {
      console.log(":: collection id pulled ::", data);
      // make api request to get products in my size and ready them for my cart
      let sizesKeyToCheck = optSelections['sizeGroup'] + "::xs::xs";

      if (!!data.collection) {
          jQuery.ajax({
              type: "POST",
              crossDomain : true,
              url: window.APIDomain+window.otherAPI+"eby-coreHelpers.php",
              data: { data: {
                "variantOptsVals": sizesKeyToCheck,
                "collectionId": data.collection.id,
                "warehouseKey" : "sub"
              }},
              beforeSend: function() {
                  initPreloader(true);
              },
              dataType: 'json',
              headers: {
                  'Authorization': 'Bearer ddd345d2498c7717a7bbbe86d9d145dc',
                  'Access-Control-Allow-Origin': '*'
              },
              success: function(data){
                console.log("::stockcheck success::", data);

                if(!!data){
                  // combine data into one pool
                  let stockProdLibrary = getSortedCollectionByStock(
                    data.inventoryHealthcheck,
                    data.prodInventoryData
                  );

                  // store in short term cache
                  membershipBoxProds = stockProdLibrary;

                  // clear out any old products curated
                  curatedMembershipProds = [];
                  //
                  let membershipBoxToAdd = checkAddToCartBtn(membershipBoxProds);

                  if (!!membershipBoxToAdd) {
                    //enable addToCart
                    initAddToCartBtn(true);
                    //cache membershipBox
                  	initPreloader(false);
                    // go to order summary
                    //toggleOrderSummaryPanel('a');
                    updateBackBtn('pThreeA_tTwo');

                  } else {
                    // box is out of stock
                  	initPreloader(false);
                    M.toast({html: 'Subscription could not be loaded. Please try again.', classes: 'membershipPopupAlert error'});
                  }

                }

              },
              error: function(xhr, text) {
                console.log("::stockcheck failure::", {
                  text : text,
                  xhr : xhr
                });
                // box is out of stock
                initPreloader(false);
                M.toast({html: 'Subscription could not be loaded. Please try again.', classes: 'membershipPopupAlert error'});
              }
          });
      } else {
      	  console.log( ":: pullFirstBoxMembership ii, failure ::", data);
      }


      /* end success */
    })
    .fail(function(data) {
      console.log( ":: pullFirstBoxMembership i, failure ::", data);
    });

  };
  let getFreepantyPayload = function(sizeSelected) {
    let sizesKeyToCheck = sizeSelected + "::xs::xs";
    const FP_COL_ID = 261868617772;

    jQuery.ajax({
      type: "POST",
      crossDomain : true,
      url: window.APIDomain+window.otherAPI+"eby-coreHelpers.php",
      data: { data: {
        "variantOptsVals": sizesKeyToCheck,
        "collectionId": FP_COL_ID,
        "warehouseKey" : "ecomm"
      }},
      beforeSend: function() {
        initPreloader(true);
      },
      dataType: 'json',
      headers: {
        'Authorization': 'Bearer ddd345d2498c7717a7bbbe86d9d145dc',
        'Access-Control-Allow-Origin': '*'
      },
      success: function(data){
        console.log("::stockcheck success::", data);

        if(!!data){
          // combine data into one pool
          let stockOfFPLibrary = getSortedCollectionByStockForFp(
            data.inventoryHealthcheck,
            data.prodInventoryData
          );

          // chose a panty in the size desired and return
          let fpVarId = null;
          stockOfFPLibrary.map(function (panty, index) {
            if (panty.availQty > 2 && fpVarId == null) {
            	fpVarId = panty.variantId;
            }
          });

          freepantyAvail = fpVarId;
          initPreloader(false);
        }
      },
      error: function(xhr, text) {
        console.log("::stockcheck failure::", {
          text : text,
          xhr : xhr
        });

        freepantyAvail = null;
        initPreloader(false);
      }
    });
  };

  /**/
  let getBoxProgress = function () {
    let currentSelections = vela.cbCurrSelections;
    let currentPlanType = "quarterly";

    if ((currentPlanType === "quarterly" && currentSelections.length >= 3) || (currentPlanType === "semi_annual" && currentSelections.length >= 5)) {
      // complete!
      jQuery('#cbp-summaryWrapper').addClass('complete');
      jQuery('#currentCustomBoxProgress').addClass('complete').text("Complete!");
      jQuery("#addCustomBoxToCart").prop('disabled', false);
      jQuery("#pantyOptLock").addClass('active');

      return "complete";
    } else {
      // incomplete
      let progressLeft = "";
      if (currentPlanType === "quarterly") {
        let currAmtSelected = currentSelections.length;
        progressLeft = "add " + (3 - currAmtSelected) + " more product(s)";
      } else {
        let currAmtSelected = currentSelections.length;
        progressLeft = "add " + (5 - currAmtSelected) + " more product(s)";
      }

      if (!!jQuery("#pantyOptLock").hasClass('active')) {
        jQuery("#pantyOptLock").removeClass('active');
      }

      jQuery("#cbp-summaryWrapper").removeClass('complete');
      jQuery('#currentCustomBoxProgress').removeClass('complete').text(progressLeft);
      jQuery("#addCustomBoxToCart").prop('disabled', true);

      return "incomplete";
    }
  };

  let getCustomBoxCard = function (varId, prdId, prdInfo) {

    let avatar = !!jQuery("img[data-prodId="+ prdId +"]").attr('data-src') ? jQuery("img[data-prodId="+ prdId +"]").attr('data-src') : jQuery("img[data-prodId="+ prdId +"]").attr('src');
    let prodNameData = prdInfo.split(':');

    return {
      prdImg: !!avatar ? avatar : jQuery('.pdp-image-pannel-wrapper').first().find('img')[0].src,
      prdVarId: varId,
      prdId: prdId,
      prdName: prodNameData[0].replace("_", " "),
      prdColor: prodNameData[1],
      prdSize: !!jQuery('#nudge-getMembershipPopup input[name="boxPref-sizes"]:checked')[0] ? jQuery('#nudge-getMembershipPopup input[name="boxPref-sizes"]:checked')[0].value : jQuery('.js-swatch.swatch.size input:checked').val(),
      prdInven: ""
    };
  };
  let addPrdToBox = function (cbItem) {

    let minicartSlot = vela.cbCurrSelections.length + 1;
    let cbItemTileHtml = "<div><img src='"+cbItem.prdImg+"' /></div>";
    let minicartSlotSelector = "#cbp-minicart_slot-"+minicartSlot;
    //
    let minicartExpSlot = vela.cbCurrSelections.length + 1;
    let cbItemExpTileHtml = "<div class='cbItemImg' ><img src='"+ cbItem.prdImg +"' /></div><div><p class='cbItemName'>"+cbItem.prdName+"</p><span>"+cbItem.prdColor+"</span><span class='hidden'>"+cbItem.prdSize.toUpperCase()+"</span></div><div class='cbItemRemove'><button class='cbRemoveItem' data-prodId='"+cbItem.prdId+"' data-prodCard='"+cbItem.prdName +":"+cbItem.prdColor+"' value='"+minicartExpSlot+":"+cbItem.prdVarId+"'>Remove</button></div>";
    let minicartExpSlotSelector = "#cbp-minicart_exp_slot-"+minicartSlot+" .cbMinicartExpandedSlotPrdTile";
    // add it to minicart
    jQuery(minicartSlotSelector).addClass('active').html(cbItemTileHtml);
    // add it to minicart exp
    jQuery(minicartExpSlotSelector).addClass('active').html(cbItemExpTileHtml);
    jQuery('#cbp-minicart_exp_slot_val-'+minicartExpSlot).val(cbItem.prdVarId);

    // add it to cache
    vela.cbCurrSelections.push(cbItem);

  };
  let removePrdToBox = function (cbItem, minicartSlotIndex) {

    console.log(":: removing cbProdItem ::",cbItem);

    let slotIndex = +minicartSlotIndex;
    let cbItemTileHtml = "";
    let minicartSlotSelector = "#cbp-minicart_slot-"+slotIndex;
    //
    let cbItemExpTileDefaultHtml = "<p>Select Product</p>";
    let minicartExpSlotSelector = "#cbp-minicart_exp_slot-"+slotIndex+" .cbMinicartExpandedSlotPrdTile";

    // remove item from cache
    vela.cbCurrSelections.splice(slotIndex-1, 1);

    // box is becoming empty
    if (vela.cbCurrSelections.length === 0 || !jQuery("#cbp-minicart_slot-"+(slotIndex+1)).hasClass('active')) {
        // remove it to minicart
        jQuery(minicartSlotSelector).removeClass('active').html(cbItemTileHtml);
        // remove it to minicart exp
        jQuery(minicartExpSlotSelector).removeClass('active').html(cbItemExpTileDefaultHtml);
        jQuery('#cbp-minicart_exp_slot_val-'+slotIndex).val("");

    } else {
      	// move other products down 1

      	for (let i = (minicartSlotIndex-1); i < vela.cbCurrSelections.length; i++) {
            // remove it to minicart
          	let nextPrdSlotIndex = i+2;
          	if (jQuery("#cbp-minicart_slot-"+nextPrdSlotIndex).length > 0 && jQuery("#cbp-minicart_slot-"+nextPrdSlotIndex).hasClass('active')) {
              	let nextPrdSlotData = jQuery("#cbp-minicart_slot-"+nextPrdSlotIndex).html();

              	// replace previous slot with next prod
                jQuery("#cbp-minicart_slot-"+(nextPrdSlotIndex-1)).addClass('active').html(nextPrdSlotData);
              	jQuery("#cbp-minicart_slot-"+(nextPrdSlotIndex)).removeClass('active').html("");
          	}
          	if (jQuery("#cbp-minicart_exp_slot-"+nextPrdSlotIndex).length > 0 && jQuery("#cbp-minicart_exp_slot-"+nextPrdSlotIndex+" .cbMinicartExpandedSlotPrdTile").hasClass('active')) {
              	let nextPrdSlotData = jQuery("#cbp-minicart_exp_slot-"+nextPrdSlotIndex+" .cbMinicartExpandedSlotPrdTile").html();
              	let nextPrdSlotVal = jQuery('#cbp-minicart_exp_slot_val-'+nextPrdSlotIndex).val();

              	let newCbItemExpTileHtml = jQuery(nextPrdSlotData).find('button').val();
              	let newCbItemExpTileIndex = +newCbItemExpTileHtml.split(":")[0] - 1;
              	let finalTileValue = newCbItemExpTileIndex+":"+newCbItemExpTileHtml.split(":")[1];
              	nextPrdSlotData = nextPrdSlotData.replace(newCbItemExpTileHtml, finalTileValue);

                // remove it to minicart exp
                jQuery("#cbp-minicart_exp_slot-"+(nextPrdSlotIndex-1)+" .cbMinicartExpandedSlotPrdTile").addClass('active').html(nextPrdSlotData);
                jQuery('#cbp-minicart_exp_slot-'+(nextPrdSlotIndex-1)).val(nextPrdSlotVal);
              	jQuery("#cbp-minicart_exp_slot-"+nextPrdSlotIndex+" .cbMinicartExpandedSlotPrdTile").removeClass('active').html(cbItemExpTileDefaultHtml);
                jQuery('#cbp-minicart_exp_slot_val-'+nextPrdSlotIndex).val("");
          	}

      	}

    }

    getBoxProgress();

  };
  /* end methods */


  /* listeners */

  if (!window.enabledEMPopMod) {
  	window.enabledEMPopMod = true;

    jQuery('body').on('click', '.closeEbyMembershipPopup', function (ev) {
      console.log(':: ebyMembershipPopup closed ::', ev.target);
      closeModal();
    });

    jQuery('body').on('click', '.backBtnMembershipPopup', function (ev) {
      console.log(':: ebyMembershipPopup back ::', ev.target);
      navigateBackOne(ev.target);
    });

    jQuery('body').on('click', '#cbp-minicart-wrapper', function (ev) {
      console.log(':: cbp-minicart-wrapper click ::', ev.target);
      let backBtn = jQuery('#backBtnMembershipPopup');
      if (!!backBtn.hasClass('pThreeB_tTwo') && vela.cbCurrSelections.length < 3) {
      	navigateBackOne(backBtn[0]);
      }
    });

    jQuery('body').on('click', '.chooseStyleGroupWrapperCore .ebyDashSelectBtn', function (ev) {
      let boxTypeSelectBtn = ev.target;
      console.log(': boxTypeSelectBtn click :', ev.target);

      if (boxTypeSelectBtn.getAttribute('data-val') === "custom_box") {
      	// confirm cb quarterly box
        // go to size screen

        console.log(':: boxStyle NewlySelected - CB ::', boxTypeSelectBtn.getAttribute('data-val'));
        saveBoxAttribute(boxTypeSelectBtn.getAttribute('data-val'), boxTypeSelectBtn);
        updateBackBtn('pTwo_tOne');
      } else {
      	// confirm s&d quarterly box
        // go to size screen

        console.log(':: boxStyle NewlySelected - S&D ::', boxTypeSelectBtn.getAttribute('data-val'));
        saveBoxAttribute(boxTypeSelectBtn.getAttribute('data-val'), boxTypeSelectBtn);
        updateBackBtn('pTwo_tOne');
      }


    });

//     jQuery('body').on('click', '.chooseStyleGroupWrapper .ebyDashSelectBtn', function (ev) {
//       let boxTypeSelectBtn = ev.target;
//       //console.log(':: boxStylesNewlySelected ::', boxTypeSelectBtn.getAttribute('data-val'));
//       saveBoxAttribute(boxTypeSelectBtn.getAttribute('data-val'), boxTypeSelectBtn);
//       updateBackBtn('pTwo_tOne');
//     });

    jQuery('body').on('click', '.ebyNudgePopupInnerWrapperHeader input', function (ev) {
      	//console.log(': radio input click! :', ev.target);
      let key = ev.target.name;

      if (ev.target.name === "boxFilter-style") {
        // run filter logic
        console.log(": filter cb options :", key);

        let toolbar = jQuery("#cbp-opt-listing-filters");
        let toolbarListing = jQuery("#cbp-opt-listing");
        toolbar.attr('data-filterset', ev.target.value);
        toolbarListing.attr('data-filterset', ev.target.value);

      } else if (ev.target.name === "boxFilter-aosize") {

        console.log(': filter addon options :', key);

        let toolbar = jQuery("#aos-opt-listing-filters");
        let toolbarListing = jQuery("#aos-opt-listing");
        toolbar.attr('data-filterset', ev.target.value);
        toolbarListing.attr('data-filterset', ev.target.value);

        let sValue = ev.target.value;

        // loop through products and replace values with respective variant ids
        window.addonProdData.map(function (item, index) {
        	console.log(": --- :", item);
            let sArray = ["xs", "sm", "md", "lg", "xl", "xsdd", "sdd", "mdd", "ldd", "xldd"];
            let sVariantIndexKey = sArray.indexOf(sValue);
          	let vid = item.variants[sVariantIndexKey].id;

          	jQuery(".btn.addonProdAdd[data-prodid='"+ item.id +"']").val(vid);
        });

      } else {

        let nameKey = ev.target.name.replace("boxPref-", "");

        if (!!window.opts.styleGroup && !opts.styleGroup) {
          opts['styleGroup'] = window.opts.styleGroup;
        }
        if (!!window.opts.colorGroup && !opts.colorGroup) {
          opts['colorGroup'] = window.opts.colorGroup;
        }
        if (!!window.opts.planGroup && !opts.planGroup) {
          opts['planGroup'] = window.opts.planGroup;
        }

        // set the new value to coreData
        // update the options remaining available
        // if coreData full > ajax loader > get products > disabled ajax loader > enable add to cart
        // collection handle key : "first-box-" + <styleGroupKey>- fc + <colorGroupKey>- mx + <planGroupKey>- quarterly + assortment
        switch (nameKey) {
          case "colors":
            if (opts["colorGroup"] === null) {
              window.ga('set', 'page', '/picked-my-colors');
              window.ga('send', 'pageview');
            }

            opts["colorGroup"] = ev.target.value;
            saveBoxAttribute(ev.target.getAttribute('data-val'), ev.target);

            // done!, go to order summary
            console.log(': complete! :', opts);
            updateBackBtn('pThreeA_tTwo');

            break;
          case "sizes":

            if (opts["sizeGroup"] === null) {
              window.ga('set', 'page', '/picked-my-size');
              window.ga('send', 'pageview');
            }
            opts["sizeGroup"] = ev.target.value;
            saveBoxAttribute(ev.target.getAttribute('data-val'), ev.target);
            if (opts["styleGroup"] === "custom_box") {
            	updateBackBtn('pThreeB_tOne');
            } else {
            	let sizesArray = ["sm", "md", "lg", "xl"];
              
                if (sizesArray.indexOf(ev.target.value) < 0) {
                  let neutralsOptBtn = jQuery('#mixed-colors')[0];
                  // auto select neutrals
                  if (opts["colorGroup"] === null) {
                      window.ga('set', 'page', '/picked-my-colors');
                      window.ga('send', 'pageview');
                  }
                  opts["colorGroup"] = "mx";
                  jQuery('#nudge-getMembershipPopup .colorGroup .colorOptListing #mixed-colors').prop('checked', true);
                  opts["planGroup"] = "quarterly";
                  saveBoxAttribute("mx", neutralsOptBtn);
            
                  // done!, go to order summary
                  console.log(': complete! :', opts);
                  updateBackBtn('pThreeA_tTwo');
  
                } else {
                  updateBackBtn('pThreeA_tOne');
                }
            }

            break;

          case "styles":

            if (opts["styleGroup"] === null) {
              window.ga('set', 'page', '/picked-my-style');
              window.ga('send', 'pageview');
            }

            opts["styleGroup"] = ev.target.getAttribute('data-val');
            //if (opts["styleGroup"] === "custom_box") {
            	initAddToCartBtn(false);
            //}

            break;

          case "plans":
            opts["planGroup"] = ev.target.getAttribute('data-val');
            saveBoxAttribute(ev.target.value, ev.target);
            break;
        }

        console.log(":: opts currently ::", opts);
        // if no key has a null value, its full

        // check options
        let enableAddToCart = checkOptionsProgress(opts);

        if (!!enableAddToCart) {
            // enable this
            console.log(":: ready! ::", opts);
            // enable the add to cart btn and get inventory ready
            pullFirstBoxMembership(opts);

        } else {
            // disable this
            console.log(":: in prog... ::", opts);
            initAddToCartBtn(false);
        }

        // check if values need to be disabled
        //checkDisabledAttributeOptions();

      }
    });

    jQuery('body').on('click', '#makeMySelectionsPanel .cbRemoveItem', function (ev) {
      console.log(':: remove ebyCustomBoxItem ::', ev.target);

      var cbProdId = ev.target.getAttribute('data-prodId'),
          cbProdData = ev.target.value.split(':'),
          cbProdInfo = ev.target.getAttribute('data-prodCard');

      

      let prodCard = getCustomBoxCard(cbProdData[1], cbProdId, cbProdInfo);

      removePrdToBox(prodCard, cbProdData[0]);

      console.log(':: NEW cbPrd removed ::', {
        cbBoxItem : prodCard
      });

      // if checkout was enabled, disable
      //let boxProgress = getBoxProgress();
      //if (boxProgress === "incomplete") {
      	initAddToCartBtn(false);
      //}

    });

    jQuery('body').on('click', '.customBoxProdTile .customBoxProdAdd', function (ev) {
      console.log(':: add customBoxProd ::', {
        prodSelected: ev.target.value,
        target: ev.target
      });


      if (!!ev.target.value) {

        var cbProdId = ev.target.getAttribute('data-prodId'),
            cbProdVarId = ev.target.value,
            cbProdInfo = ev.target.getAttribute('data-prodCard');
        // start loaders

        jQuery.getJSON('/cart.js', function(cart) {
           // now have access to Shopify cart object

          if (!!cart) {
              console.log(':: current cart object ::', {
                cart : cart
              });

              // is there already a custom box
              //if (cart.attributes['cb_membership_started'] === "true") {
              if (!!customBoxInit) {
                  console.log(':: current cart has cb ::', {
                    cartAttr : cart.attributes,
                    cartItems : cart.items
                  });


                  let properties = {
                    "included_in_custombox":true,
                    "Shipping Option":"Subscription WH"
                  };

                  let prodCard = getCustomBoxCard(cbProdVarId, cbProdId, cbProdInfo);

                  console.log(':: NEW cbPrd added ::', {
                    cbBoxItem : prodCard
                  });


                  // if box is already full
                  if (vela.cbCurrSelections.length < 3) {
                	addPrdToBox(prodCard);
                    // the box is not complete yet
                    let boxProgress = getBoxProgress();
                    if (boxProgress === "incomplete") {
                      M.toast({html: 'Added a '+ prodCard.prdName +' to your custom box!', classes: 'ebyAtcAlert success', displayLength: 1250});
                    } else {
                      M.toast({html: 'Added a '+ prodCard.prdName +' to your custom box!', classes: 'ebyAtcAlert success', displayLength: 1250});
                      // open modal and alter to show complete box
                      //let ebyMinicartExpModal = M.Modal.getInstance(jQuery(dealModule.modalMinicartSelector));
                      //ebyMinicartExpModal.open();

                      // send user to order summary with no ajax needed since i have prods already in stock
                      console.log(': BOX COMPLETE! :', boxProgress);
                      jQuery('#cb-summary-title').toggleClass('lastStep');
                      updateBackBtn('pThreeB_tTwo');
                      jQuery('#allPrefGroupChoicePanties').fadeOut();
                      jQuery('#membershipCustomBoxReview').fadeIn();
                      initAddToCartBtn(true);
                      // enable checkout button and prep data


                    }

                  } else {
                    jQuery('#cb-summary-title').toggleClass('lastStep');
                    console.log(': BOX COMPLETE ALREADY! :');
                    updateBackBtn('pThreeB_tTwo');
                    jQuery('#allPrefGroupChoicePanties').fadeOut();
                    jQuery('#membershipCustomBoxReview').fadeIn();
                    initAddToCartBtn(true);
                  }





              } else {

                  let prodCard = getCustomBoxCard(cbProdVarId, cbProdId, cbProdInfo);

                  console.log(':: NEW cbPrd added ::', {
                    cbBoxItem : prodCard
                  });

                  // custom box has started
                  customBoxInit = true;
                  M.TapTarget.init(jQuery(".cbpHowToGuideTwo"), {onOpen: function (ev) {
                    console.log(':howto: call back', ev);
                  }});
                  //M.toast({html: 'Added a '+ prodCard.prdName +'! Your Custom Box is started.', classes: 'cbSelectAlert'});
                  var howToModal = M.TapTarget.getInstance(jQuery(".cbpHowToGuideTwo"));
                  //jQuery('.ebyCustomBoxModalBtn').addClass('animate__zoomIn');

                  addPrdToBox(prodCard);
                  //setTimeout(function() {
                	howToModal.open();
                  //}, 100);

                  setTimeout(function () {
                    if (!!howToModal.isOpen) {
                      howToModal.close();
                    }
                  }, 2000);
              }

          } else {

              console.log('::ERROR:: cart not found');
          }



        });


      } else {

        console.log('::ERROR:: no variant id for product');
      }


    });

    jQuery('body').on('click', '#ebyAddToCartPopupSaveBtn', function(ev) {
        console.log(':: ebyAddToCartBtn init ::', {
          btn : ev.target,
          boxData : curatedMembershipProds,
          currentOpts: opts
        });
        var mSizeGroup = ['xs','sm','md','lg','xl'];

        // start adding to cart
        // init loader
        // show success msg
        // go to checkout

      	if (opts["styleGroup"] === "custom_box") {
      		console.log(':: add customBox final to cart ::', {
              prodSelected: ev.target.value,
              target: ev.target
            });

            let cbPlanType = "quarterly";
            let cbVariantId = jQuery("#cbTilePrdId-"+cbPlanType).val();
            let cbProperties = {
              'tiertwo_sub_price_enabled' : "true",
              'Shipping Option' : "pickup Ecommerce WH",
              'product_type' : 'Main Subscription',
              'shipping_interval_unit_type' : "month"
            };

            console.log(':: cbVarId ::', cbVariantId);

            cbProperties['tiertwo_sub_orig_price'] = 0;

            if (cbPlanType === "quarterly") {
              cbProperties['shipping_interval_frequency'] = 3;
              cbProperties['tiertwo_sub_price'] = "39.00";
            } else {
              cbProperties['shipping_interval_frequency'] = 6;
              cbProperties['tiertwo_sub_price'] = "65.00";
            }

            let cbFinalPrdIds = [];
            let cbFinalPrdSkus = [];
            let welcomeCollateral = [{
                quantity: 1, id: WELCOMEID, properties: {
                  "included_in_custombox":true,
                  "Shipping Option":"Subscription WH",
                  "hidden_collateral": true
                }
            }];
            let cbFinalPrds = vela.cbCurrSelections.reduce(function(acc, item) {
                let properties = {
                  "included_in_custombox":true,
                  "Shipping Option":"pickup Ecommerce WH",
                  "ltd_cb_prod": item.prdIsLtd
                };

                cbFinalPrdIds.push(item.prdVarId);
                cbFinalPrdSkus.push(item.prdColor + "_" + item.prdName + "_" + item.prdSize);

                acc.push({
                  quantity: 1, id: item.prdVarId, properties: properties
                });

                return acc;
            },[]);

            cbProperties['subscription_ids'] = cbFinalPrdIds.join(',');
            cbProperties['subscription_ids'] = cbVariantId + "," + cbProperties['subscription_ids'];

            // add welcome booklet to box
            //cbProperties['subscription_ids'] += "," + WELCOMEID;

            // check for freepanty addon
            let freepantyUnlockedProduct = null;
            if (!!localStorage.getItem('ets-privyFreepantyGranted')) {
              let freepantyAddon = localStorage.getItem('ets-privyFreepantyGranted');

              freepantyUnlockedProduct = {
                quantity: 1,
                id: freepantyAddon,
                properties: {
                  "Shipping Option":"pickup Ecommerce WH",
                  "FREEPANTY" : true
                }
              };
              cbProperties['subscription_ids'] += "," + freepantyAddon;
              // clear its data
              localStorage.removeItem('ets-privyFreepantyGranted');
            }

            let freeaddonUnlockedProduct = null;
            if (!!isFreeAddonEnabled && !!window.fsba) {
              let freeAddon = window.fsba;

              freeaddonUnlockedProduct = {
                quantity: 1,
                id: window.fsba,
                properties: {
                  "Shipping Option":"pickup Ecommerce WH",
                  "FREEBRALETTE" : true,
                  "freebralette" : true
                }
              };
              cbProperties['subscription_ids'] += "," + window.fsba;
              // clear its data
              //localStorage.removeItem('ets-privyFreepantyGranted');
            }

            let customBoxData = {
              attributes : {"has_cb_membership" : "true"},
              items: [
                {quantity: 1, id: cbVariantId, properties: cbProperties}
              ]
            };

            let isAllOfAKind = cbFinalPrdIds.every( (val, i, arr) => val === arr[0] );

            if (!!isAllOfAKind) {
                let allOfAKindPrd = {
                  quantity: cbFinalPrdIds.length, id: cbFinalPrdIds[0], properties: cbFinalPrds[0].properties
                };
                //customBoxData.items = customBoxData.items.concat([allOfAKindPrd]).concat(welcomeCollateral);
                customBoxData.items = customBoxData.items.concat([allOfAKindPrd]);
            } else {
                //customBoxData.items = customBoxData.items.concat(cbFinalPrds).concat(welcomeCollateral);
                customBoxData.items = customBoxData.items.concat(cbFinalPrds);
            }

            // by the chance there has been a plan change
            if (cbPlanType === "quarterly" && cbFinalPrds.length > 3) {
                customBoxData.items = customBoxData.items.slice(0, 4).reverse();
            } else {
                customBoxData.items = customBoxData.items.reverse();
            }
            // add freepanty to product data if unlocked
            if (!!freepantyUnlockedProduct) {
                customBoxData.items.unshift(freepantyUnlockedProduct);
            }
            // add freepanty to product data if unlocked
            if (!!isFreeAddonEnabled) {
              customBoxData.items.unshift(freeaddonUnlockedProduct);
            }
          	// add preselected product if exists
          	// if (!!opts.firstPantySelected) {
           //    let firstProdVarId = opts.firstPantySelected.split("::")[0];
           //    console.log(": please add preselected product too :", firstProdVarId);
           //    if (customBoxData.items[0] === null) {
           //      customBoxData.items[0] = {
           //        quantity: 1,
           //        id: firstProdVarId,
           //        properties: {
           //          "Shipping Option":"pickup Ecommerce WH",
           //          "Subscription Addon" : firstProdVarId,
           //        }
           //      };
           //    }
          	// }

            if (customBoxData.items[0] === null) {
              customBoxData.items = customBoxData.items.slice(1);
            }

            console.log(":: add custombox to cart!! ::", customBoxData);

            // add to cart
            setTimeout(function () {
                jQuery('body').addClass('velaCartAdding');

                jQuery.ajax({
                  type: 'POST',
                  url: '/cart/add.js',
                  async: false,
                  data: customBoxData,
                  dataType: 'json',
                  success:function(data) {
                    console.log(':: custombox and prods added to cart ::',{data: data});

                    // turn off loaders
                    M.toast({html: 'Subscription added to cart!', classes: 'ebyAtcAlert success', displayLength: 1250});
                    //hj('event', 'ebySubAddedToCart-EBYCUSTOM');
                    //let currentBoxSize = checkCurrentBoxSize();
//                     gtag('event', 'build_my_box-add', {
//                       'event_category': 'ebyacq-newSubAddToCart',
//                       'event_label': 'boxAdded-EBYCUSTOM',
//                       'event_value': ""
//                     });
                    // remove any cached data
                    localStorage.removeItem('ets-cbFirstpantyGranted');

    //                 setTimeout(function () {
    //                     ebyMinicartAlertModal.open();
    //                 }, 300);

                    let boxProdObj = data.items.reduce(function(acc,item){if(item.product_type == "Subscription Box"){acc.push(item);}return acc;},[])[0];

                    let subTypeKey = "cb";
                    let subPlanKey = mSizeGroup.indexOf(boxProdObj.variant_title) >= 0 ? boxProdObj.sku.toLowerCase().slice(boxProdObj.sku.length - 2) + "_missy" : boxProdObj.sku.toLowerCase().slice(boxProdObj.sku.length - 2) + "_plus";
                    let subTypeQtyKey = subTypeKey + "__qty";
                    let subTrackingData = {
                      event_label: boxProdObj.sku,
                      subscription_plan: subPlanKey,
                      subscription_type: subTypeKey,
                      subscription_quantity: 1,
                      page_location: window.location.pathname, 
                      page_title: document.title,
                      event_value: parseInt("39.00"),
                      value: parseInt("39.00")
                    };
                    subTrackingData[subTypeQtyKey] = 1;
                    gtag("event", "add_to_cart__subscription", subTrackingData);
                    gtag("event", "customBoxAddedToCart", { event_category: "startingPoint-" + window.location.pathname, event_label: "boxContents-" + cbFinalPrdSkus.join(','), event_value: "", subbox_contents: cbFinalPrdSkus.join(','), page_location: window.location.pathname, page_title: document.title });
                    gtag("event", "add_to_cart", {
                        currency: "USD",
                        value: parseInt("39.00"),
                        page_location: window.location.pathname, 
                        page_title: document.title,
                        event_label: "atc_type-subbox_custom",
                        event_category: boxProdObj.product_title,
                        items: [
                            {
                                item_id: boxProdObj.product_id,
                                item_name: boxProdObj.product_title,
                                affiliation: "EBY",
                                currency: "USD",
                                index: 0,
                                item_category: boxProdObj.product_type,
                                item_variant: boxProdObj.variant_title,
                                price: parseInt("39.00"),
                                quantity: 1,
                            },
                        ],
                    });
                    
                    goToCheckout();

                    return;
                  },
                  error: function(xhr, text) {

                    console.log(":: Membership addToCart failure ::", {
                      text : text,
                      xhr : xhr
                    });

                    if (!!xhr.responseJSON) {
                        alert(xhr.responseJSON.description);
                    }

                  }
                });

            }, 300);

      	} else {

      		let membershipProperties = {
              'tiertwo_sub_price_enabled' : "true",
              'Shipping Option' : "pickup Subscription WH",
              'product_type' : 'Main Subscription',
              'shipping_interval_unit_type' : "month"
            };

            if (opts['planGroup'] === "quarterly") {
              membershipProperties['shipping_interval_frequency'] = 3;
              membershipProperties['tiertwo_sub_price'] = "39.00";
            } else {
              membershipProperties['shipping_interval_frequency'] = 6;
              membershipProperties['tiertwo_sub_price'] = "65.00";
            }

            let membershipFinalPrdIds = [];
            let membershipFinalPrdSkus = [];
            let welcomeCollateral = [{
              quantity: 1, id: +WELCOMEID, properties: {
                "included_in_membershipbox":true,
                "product_type":"Sub Subscription",
                "Shipping Option":"pickup Subscription WH",
                "hidden_collateral": true
              }
            }];
            let membershipFinalPrds = curatedMembershipProds.reduce(function(acc, item) {
              let properties = {
                "included_in_membershipbox":true,
                "product_type":"Sub Subscription",
                "Shipping Option":"pickup Subscription WH"
              };

              membershipFinalPrdIds.push(item.variantId);
              membershipFinalPrdSkus.push(item.variantSku);

              acc.push({
                quantity: 1, id: item.variantId, properties: properties
              });

              return acc;
            },[]);

            membershipProperties['subscription_ids'] = membershipFinalPrdIds.join(',');

            let membershipBoxData = {
              attributes : {"has_curated_membership" : "true"},
              items: [
                {quantity: 1, id: curatedMembershipProds[0].variantId, properties: membershipProperties}
              ]
            };

            // addon feature
            if (!!opts.prodsOfInterest) {
                if (opts.prodsOfInterest.length === 1) {
                  membershipBoxData.items.push({
                    quantity: 1,
                    id: opts.prodsOfInterest[0],
                    properties: {
                        "Shipping Option":"pickup Ecommerce WH",
                        "MembershipBox Addon" : true
                    }
                  });
                } else {
                    //membershipBoxData.items.concat();
                }
            }

            // freepanty allocation
            if (!!opts['freepantyInit']) {
                if (opts['freepantyInit'] === "privyFreepantyGranted") {
                  // call collection for freepanty and get me the one with the most stock and in my size
                  if (!!freepantyAvail) {

                        membershipBoxData.items.push({
                          quantity: 1,
                          id: freepantyAvail,
                          properties: {
                            "Shipping Option":"pickup Ecommerce WH",
                            "FREEPANTY" : true
                          }
                        });
                        membershipProperties['subscription_ids'] += "," + freepantyAvail;

                  } else {
                    console.log(':: FREEPANTY could not be chosen ::', );
                  }
                  console.log(':: FREEPANTY Chosen ::', freepantyAvail);
                }
            }

            // freeaddon
            if (!!isFreeAddonEnabled && !!window.fsba) {
              let freeAddon = window.fsba;
              membershipBoxData.items.push({
                quantity: 1,
                id: freeAddon,
                properties: {
                  "Shipping Option":"pickup Ecommerce WH",
                  "FREEBRALETTE" : true,
                  "freebralette" : true
                }
              });
              membershipProperties['subscription_ids'] += "," + freeAddon;
            }

            //membershipBoxData.items = membershipBoxData.items.concat(membershipFinalPrds.slice(1,membershipFinalPrds.length)).concat(welcomeCollateral).reverse();
            membershipBoxData.items = membershipBoxData.items.concat(membershipFinalPrds.slice(1,membershipFinalPrds.length)).reverse();

            // add welcome booklet to box
            //membershipProperties['subscription_ids'] += "," + WELCOMEID;

            console.log(":: add membershipBox to cart ::", membershipBoxData);
            jQuery('body').addClass('velaCartAdding');

            // add to cart
            setTimeout(function () {

              jQuery.ajax({
                type: 'POST',
                url: '/cart/add.js',
                async: false,
                data: membershipBoxData,
                dataType: 'json',
                success:function(data) {
                  console.log(':: membership box and prods added to cart ::',{data: data});

                  // turn off loaders
                  M.toast({html: 'Membership added to cart!', classes: 'membershipPopupAlert success'});
                  //hj('event', 'ebySubAddedToCart');
                  // gtag('event', 'boxPopup-add', {
                  //   'event_category': 'ebyacq-newSubAddToCart',
                  //   'event_label': 'boxAdded-EBYCURATED',
                  //   'event_value': ""
                  // });

                  let boxProdObj = data.items.reduce(function(acc,item){if(item.product_type == "Subscription Box"){acc.push(item);}return acc;},[])[0];

                  let subTypeKey = boxProdObj.title.toLowerCase().indexOf('in mixed') >= 0 ? boxProdObj.sku.toLowerCase().slice(0,2) + "_mx" : boxProdObj.sku.toLowerCase().slice(0,2) + "_nu";
                  let subPlanKey = mSizeGroup.indexOf(boxProdObj.variant_title) >= 0 ? boxProdObj.sku.toLowerCase().slice(boxProdObj.sku.length - 2) + "_missy" : boxProdObj.sku.toLowerCase().slice(boxProdObj.sku.length - 2) + "_plus";
                  let subTypeQtyKey = subTypeKey + "__qty";
                  let subTrackingData = {
                    event_label: boxProdObj.sku,
                    subscription_plan: subPlanKey,
                    subscription_type: subTypeKey,
                    subscription_quantity: 1,
                    page_location: window.location.pathname, 
                    page_title: document.title,
                    event_value: parseInt("39.00")
                  };
                  subTrackingData[subTypeQtyKey] = 1;
                  gtag("event", "add_to_cart__subscription", subTrackingData);
                  gtag("event", "curatedBoxAddedToCart", { event_category: "startingPoint-" + window.location.pathname, event_label: "boxContents-" + membershipFinalPrdSkus.join(','), event_value: "", subbox_contents: membershipFinalPrdSkus.join(','), page_location: window.location.pathname, page_title: document.title });
                  gtag("event", "add_to_cart", {
                      currency: "USD",
                      value: parseInt("39.00"),
                      page_location: window.location.pathname, 
                      page_title: document.title,
                      event_label: "atc_type-subbox_curated",
                      event_category: boxProdObj.product_title,
                      items: [
                          {
                              item_id: boxProdObj.product_id,
                              item_name: boxProdObj.product_title,
                              affiliation: "EBY",
                              currency: "USD",
                              index: 0,
                              item_category: boxProdObj.product_type,
                              item_variant: boxProdObj.variant_title,
                              price: parseInt("39.00"),
                              quantity: 1,
                          },
                      ],
                  });

                  
                  goToCheckout();

                  return;
                },
                error: function(xhr, text) {

                  console.log(":: Membership addToCart failure ::", {
                    text : text,
                    xhr : xhr
                  });

                  if (!!xhr.responseJSON) {
                    alert(xhr.responseJSON.description);
                  }

                }
              });

            }, 300);
      	}


        /* end */

    });

    jQuery('body').on('click', '.sizeGuideBtnToggle.openBtn', function (ev) {
        console.log(':: open size guide ::', ev.target);
		let popupKey = ev.target.getAttribute('data-sizeguidetoopen');

        jQuery('#sizeguide_panel_wrapper-'+popupKey).addClass('active');

        setTimeout(function () {
          jQuery('#sizeguide_panel_wrapper-'+popupKey).addClass('visible');
        }, 300);

    });

    jQuery('body').on('click', '.sizeGuideBtnToggle.closeBtn', function (ev) {
    	console.log(':: close size guide ::', ev.target);
		let popupKey = ev.target.getAttribute('data-sizeguidetoclose');

        jQuery('#sizeguide_panel_wrapper-'+popupKey).removeClass('visible');

        setTimeout(function () {
          jQuery('#sizeguide_panel_wrapper-'+popupKey).removeClass('active');
        }, 300);

    });

    jQuery('body').on('click', '#ebyAddAnAddonBtn', function (ev) {
     console.log(':: open addon panel ::', ev.target);
      jQuery('#nudge-getMembershipPopup .owl-carousel').trigger('to.owl.carousel', 4);
      toggleBoxPanels("makeMySelectionsPlusAFreeOnePanel");
      window.ebp_currstep += 1;
      updateBackBtn('pFour_tOne');
      initAddToCartBtn(false);

      // hide the button
      jQuery(ev.target).addClass('hidden');

      // pull products if they need to be
      if (!window.hasPulledAddons) {

        var ebyLazyLoad = function lazyLoader() { /* the document is now ready. */

          var lazyEls = [].slice.call(document.querySelectorAll("[data-src]"));

          function load(el) {
            var src = el.getAttribute("data-src");
            var srcset = el.getAttribute("data-srcset");
            // [NOTE] Todd We shouldn't hit this if data-src was null, but monitoring
            //    says it happens sometimes, so Â¯\_(ãƒ„)_/Â¯
            if (src) { el.setAttribute("src", src); }
            if (srcset) { el.setAttribute("srcset", srcset); }
            el.removeAttribute("data-src");
            el.removeAttribute("data-srcset");
            el.classList.add("lazyloaded");
          }
          if ("IntersectionObserver" in window) {
            var lazyObserver = new IntersectionObserver(function(entries) {
              entries.forEach(function(entry) {
                if (entry.isIntersecting) {
                  var el = entry.target;
                  load(el);
                  lazyObserver.unobserve(el);
                }
              });
            });

            lazyEls.forEach(function(el) {
              if (el.tagName === "SCRIPT") {
                load(el);
              }
              else {
                lazyObserver.observe(el);
              }
            });
          }
          else {
            lazyEls.forEach(load);
          }
          /* background lazyloading by class:visible */
          var lazyBackgrounds = [].slice.call(document.querySelectorAll(".lazy-background"));
          if ("IntersectionObserver" in window) {
            var lazyBackgroundObserver = new IntersectionObserver(function(entries, observer) {
              entries.forEach(function(entry) {
                if (entry.isIntersecting) {
                  entry.target.classList.add("visible");
                  lazyBackgroundObserver.unobserve(entry.target);
                }
              });
            });
            lazyBackgrounds.forEach(function(lazyBackground) {
              lazyBackgroundObserver.observe(lazyBackground);
            });
          }

        };

        window.ebyAjax(
          "GET",
          window.location.origin +'/collections/bralettes-for-women-testing-atm/products.json?limit=200',
          function (data) {
            //console.log(':: fire complete ::', data);
            window.addonProdData = JSON.parse(data).products;

//             selectionData["selectedVal"] = pantySize;
//             selectionData["frequency"] = "3";
//             selectionData["defaultVal"] = pantySize;

            window.hasPulledAddons = true;

            // run func to make markup
            console.log(': addon prod data ready for use :', window.addonProdData);
            let prodTileListingMarkup = "";

            window.addonProdData.map(function (item, index) {
              console.log(': addon item payload :', item);

              let isMembershipCopy = item.product_type === "Subscription Box" ? " isMembership" : " pTile";
              let membershipInput = "";
              let prodNameTitle = "";
              let prodColorTitle = "";
              let prodFabricTitle = "";

              let sizesArray = ["xs", "sm", "md", "lg", "xl", "xsdd", "sdd", "mdd", "ldd", "xldd"];
              let sizeCurrValue = !!jQuery('input[name="boxFilter-aosize"]:checked').val() ? jQuery('input[name="boxFilter-aosize"]:checked').val() : "xs";
              let sizeVariantIndexKey = sizesArray.indexOf(sizeCurrValue);

              if (!item.variants[sizeVariantIndexKey].available) {
                return;
              }

              let bsize = {};
              item.variants.map(function (item, index) {
                if (!!item.available) {
                	bsize[item.title] = "avail";
                } else {
                	bsize[item.title] = "not_avail";
                }
              });
//               if (!!item.variants[sizeVariantIndexKey].available) {
//               	bsize = "avail";
//               } else {
//               	bsize = "not_avail";
//               }

              if (item.title.indexOf("Quarterly") >= 0) {
                membershipInput = "<input type='hidden' name='cbTilePrdId' id='cbTilePrdId-quarterly' value='"+ item.variants[sizeVariantIndexKey].id +"' />";
              } else {
                membershipInput = "<input type='hidden' name='cbTilePrdId' id='cbTilePrdId-semi_annual' value='"+ item.variants[sizeVariantIndexKey].id +"' />";
              }

              item.tags.map(function (tag, index) {
                if (tag.indexOf('braletteType-') >= 0 ) {
                  prodNameTitle = tag.replace("braletteType-", "").replace("_", " ");
                }
                if (tag.indexOf('braletteColor-') >= 0 ) {
                  prodColorTitle = tag.replace("braletteColor-", "").replace("_", " ");
                }
                if (tag.indexOf('braletteFabric-') >= 0 ) {
                  prodFabricTitle = tag.replace("braletteFabric-", "").replace("_", " ");
                  if (prodFabricTitle == "signature") {
                  	prodFabricTitle = "signature seamless";
                  } else if (prodFabricTitle == "mesh") {
                  	prodFabricTitle = "seamless sheer";
                  } else if (prodFabricTitle == "cotton") {
                  	prodFabricTitle = "seamless cotton";
                  }
                }
              });

              if (item.images[0] === undefined) {
                item.images[0] = {
                  src: "https://cdn.shopify.com/s/files/1/0313/4062/5964/files/480_-_PROD_-_subscription_-_default.jpg"
                }
              }

              let prodTileMarkup = "<div class='item ebyProdTile saleProdTile newRelease"+ isMembershipCopy +"' data-addon-pprice='"+ item.variants[0].price +"' data-addon-pid='"+ item.id +"' data-bsize-xs='"+ bsize["xs"] +"' data-bsize-sm='"+ bsize["sm"] +"' data-bsize-md='"+ bsize["md"] +"' data-bsize-lg='"+ bsize["lg"] +"' data-bsize-xl='"+ bsize["xl"] +"' data-bsize-xsdd='"+ bsize["xsdd"] +"' data-bsize-sdd='"+ bsize["sdd"] +"' data-bsize-mdd='"+ bsize["mdd"] +"' data-bsize-ldd='"+ bsize["ldd"] +"' data-bsize-xldd='"+ bsize["xldd"] +"'><div class='velaProBlock grid saleProdTileWrapper customBoxProdTile'><div class='velaProBlockInner'><div class='proHImage d-flex flexJustifyCenter saleProdHeader'><div class='proFeaturedImage'><img class='t1 img-responsive missy lazyload' alt='"+ item.title +"' data-src='"+ item.images[0].src +"' data-prodId='"+ item.id +"' width='157' height='231' /></div><div class='saleProdColorWrapper'><p class='saleProdColor'>"+prodFabricTitle+"</p></div></div><div class='proContent saleProdFooter'><div class='saleProdFooterCol'><h5 class='proName saleProdName'>Bralette</h5><p class='saleProdColor'>"+prodColorTitle+"</p><div class='proReviews'><span class='shopify-product-reviews-badge' data-id='"+ item.id +"'></span></div></div><div class='saleProdFooterCol buttonWrapperCol'><input class='saleItemOptVal' type='hidden' name='id' value='"+ item.variants[sizeVariantIndexKey].id +"' /><button class='btn addonProdAdd inStock btnAddToCart' data-prodId='"+ item.id +"' data-prodCard='"+ prodNameTitle +":"+ prodColorTitle +"' value='"+ item.variants[sizeVariantIndexKey].id +"'>Add</button></div></div></div></div>"+ membershipInput +"</div>";

              prodTileListingMarkup += prodTileMarkup;

            });
            //vela.cbSelections(selectionData, window.cbFirstBoxProdData);

            jQuery("#aos-opt-listing").html(prodTileListingMarkup);
            ebyLazyLoad();
          }
        );
      }


    });

    jQuery('body').on('click', '.customBoxProdTile .addonProdAdd', function (ev) {
      if (jQuery(".initialFilterState input:checked").length <= 0) {
        //alert("Please select your size!");
        M.toast({html: 'Please select your bra size.', classes: 'ebyAtcAlert error', displayLength: 1250});

        ev.preventDefault();
        ev.stopImmediatePropagation();

        return false;
      }

      console.log(':: add addonProd ::', {
        prodSelected: ev.target.value,
        target: ev.target
      });

      // is this a deselect?
      if (ev.target.className.indexOf('selectedAddon') >= 0) {
      	// deselect it and notify customer and hide checkout
        jQuery(ev.target).removeClass('selectedAddon');
        initAddToCartBtn(false);
        M.toast({html: 'Your selection was removed.', classes: 'ebyAtcAlert success', displayLength: 1250});

      } else {

        // remove any selected option, update value saved, and select
        jQuery('.btn.addonProdAdd').removeClass('selectedAddon');

        if (!!ev.target.value) {

          var cbProdId = ev.target.getAttribute('data-prodId'),
              cbProdVarId = ev.target.value,
              cbProdInfo = ev.target.getAttribute('data-prodCard');
          // start loaders

          jQuery.getJSON('/cart.js', function(cart) {
            // now have access to Shopify cart object

            if (!!cart) {
              console.log(':: current cart object ::', {
                cart : cart
              });

              // is there already a custom box
              //if (cart.attributes['cb_membership_started'] === "true") {

              let prodCard = getCustomBoxCard(cbProdVarId, cbProdId, cbProdInfo);

              console.log(':: NEW cbPrd added ::', {
                cbBoxItem : prodCard
              });

              M.toast({html: 'Your box and bralette are ready!', classes: 'ebyAtcAlert success', displayLength: 1250});

              initAddToCartBtn(true);

              // save the option
              window.fsba = cbProdVarId;
              jQuery(ev.target).addClass('selectedAddon');
              jQuery(ev.target).text('Added');


            } else {

              console.log('::ERROR:: cart not found');
            }



          });


        } else {

          console.log('::ERROR:: no variant id for product');
        }

      }


    });

  }

  /* end listeners */

  /* init */
  if (modalType === "pdp" || modalType === "default") {
        // call popup for membership page
        let corePopup = jQuery('#nudge-getMembershipPopup .owl-carousel');
        corePopup.owlCarousel({
          mouseDrag: false,
          pullDrag : false,
          touchDrag :false,
          loop:false,
          margin:10,
          nav:false,
          items: 1,
          startPosition : 0
        });

        if (!!opts['freepantyInit']) {
          	if (opts['freepantyInit'] === "privyFreepantyGranted") {
              console.log(':: FREEPANTY Enabled ::', opts);
              getFreepantyPayload(opts.sizeGroup);
              // make the add to cart button now
              jQuery('#ebyAddToCartPopupSaveBtn').text('Add Box + FREE PANTY To Cart');
          	}
    	}

        // toDo: needs back button access
        // set default values
        setGivenValues(opts);
  } else {
        // call popup for membership page
        let corePopup = jQuery('#nudge-getMembershipPopup .owl-carousel');
        corePopup.owlCarousel({
          mouseDrag: false,
          pullDrag : false,
          touchDrag: false,
          loop:false,
          margin:10,
          nav:false,
          items: 1,
          startPosition : 1
        });

    	// ensure that screen 2 essentials display
    	modalBackBtn.removeClass("pOne_tOne").addClass("pTwo_tOne");
    	jQuery('#changeMySizePanel').show();
    	window.ebp_currstep = 1;

    	if (!!opts['freepantyInit']) {
          	if (opts['freepantyInit'] === "privyFreepantyGranted") {
              console.log(':: FREEPANTY Enabled ::', opts);
              getFreepantyPayload(opts.sizeGroup);
              // make the add to cart button now
              jQuery('#ebyAddToCartPopupSaveBtn').text('Add Box + FREE PANTY To Cart');
          	}
    	}

        // set default values
        setGivenValues(opts);
  }

  /* init minicart module */
  openModal();

  // find markup
  // init owl carousel
  // set mode of the
  // set defaults/preselects
  // fade in popup
  // set up event listeners

};

</script>
